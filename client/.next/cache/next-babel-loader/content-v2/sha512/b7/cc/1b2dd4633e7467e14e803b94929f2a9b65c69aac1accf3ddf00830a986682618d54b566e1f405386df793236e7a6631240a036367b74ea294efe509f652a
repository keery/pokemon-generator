{"ast":null,"code":"var _jsxFileName = \"/Users/guillaumeesnault/Documents/Projects/pokemon-generator/client/components/FieldsAttack.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Input, Textarea } from \"@chakra-ui/react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useFormContext } from \"react-hook-form\";\nimport { DAMAGE_CHOICES, ATTACK_AMOUNT_CHOICES, ELEMENTS } from \"~constants\";\nimport Select from \"~components/Select\";\nimport Field from \"~components/Field\";\nvar optionsDamage = DAMAGE_CHOICES.map(function (el) {\n  return {\n    value: el,\n    label: el\n  };\n});\nvar optionsType = ELEMENTS.map(function (el) {\n  return {\n    value: el,\n    label: el\n  };\n});\nvar optionsAmount = ATTACK_AMOUNT_CHOICES.map(function (el) {\n  return {\n    value: el,\n    label: el\n  };\n});\n\nvar FieldsAttack = function FieldsAttack(_ref) {\n  _s();\n\n  var name = _ref.name;\n\n  var _useTranslation = useTranslation(\"generator\"),\n      t = _useTranslation.t;\n\n  var _useFormContext = useFormContext(),\n      register = _useFormContext.register,\n      control = _useFormContext.control;\n\n  return __jsx(React.Fragment, null, __jsx(Field, {\n    label: t(\"name\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(Input, {\n    name: \"\".concat(name, \".name\"),\n    type: \"text\",\n    ref: register,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  })), __jsx(Field, {\n    label: t(\"damage\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, __jsx(Select, {\n    name: \"\".concat(name, \".damage\"),\n    options: optionsDamage,\n    control: control,\n    isClearable: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })), __jsx(Field, {\n    label: t(\"info\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, __jsx(Textarea, {\n    name: \"\".concat(name, \".info\"),\n    ref: register,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })), __jsx(Field, {\n    label: t(\"amount\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, __jsx(Select, {\n    name: \"\".concat(name, \".amount\"),\n    options: optionsAmount,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })), __jsx(Field, {\n    label: t(\"type\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, __jsx(Select, {\n    name: \"\".concat(name, \".type\"),\n    isClearable: true,\n    options: optionsType,\n    iconPath: \"1-{{value}}.png\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(FieldsAttack, \"xh6pLOgF75thYTVeoF7+mAxpPvg=\", false, function () {\n  return [useTranslation, useFormContext];\n});\n\n_c = FieldsAttack;\nexport default FieldsAttack;\n\nvar _c;\n\n$RefreshReg$(_c, \"FieldsAttack\");","map":{"version":3,"sources":["/Users/guillaumeesnault/Documents/Projects/pokemon-generator/client/components/FieldsAttack.tsx"],"names":["React","Input","Textarea","useTranslation","useFormContext","DAMAGE_CHOICES","ATTACK_AMOUNT_CHOICES","ELEMENTS","Select","Field","optionsDamage","map","el","value","label","optionsType","optionsAmount","FieldsAttack","name","t","register","control"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Box, Input, Textarea } from \"@chakra-ui/react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useFormContext } from \"react-hook-form\";\nimport { DAMAGE_CHOICES, ATTACK_AMOUNT_CHOICES, ELEMENTS } from \"~constants\";\nimport Select from \"~components/Select\";\nimport Field from \"~components/Field\";\n\nconst optionsDamage = DAMAGE_CHOICES.map((el) => ({\n  value: el,\n  label: el,\n}));\n\nconst optionsType = ELEMENTS.map((el) => ({\n  value: el,\n  label: el,\n}));\n\nconst optionsAmount = ATTACK_AMOUNT_CHOICES.map((el) => ({\n  value: el,\n  label: el,\n}));\n\nconst FieldsAttack = ({ name }) => {\n  const { t } = useTranslation(\"generator\");\n  const { register, control } = useFormContext();\n\n  return (\n    <>\n      <Field label={t(\"name\")}>\n        <Input name={`${name}.name`} type=\"text\" ref={register} />\n      </Field>\n      <Field label={t(\"damage\")}>\n        <Select\n          name={`${name}.damage`}\n          options={optionsDamage}\n          control={control}\n          isClearable\n        />\n      </Field>\n      <Field label={t(\"info\")}>\n        <Textarea name={`${name}.info`} ref={register} />\n      </Field>\n      <Field label={t(\"amount\")}>\n        <Select name={`${name}.amount`} options={optionsAmount} />\n      </Field>\n      <Field label={t(\"type\")}>\n        <Select\n          name={`${name}.type`}\n          isClearable\n          options={optionsType}\n          iconPath=\"1-{{value}}.png\"\n        />\n      </Field>\n    </>\n  );\n};\n\nexport default FieldsAttack;\n"]},"metadata":{},"sourceType":"module"}