{"ast":null,"code":"var _jsxFileName = \"/Users/guillaumeesnault/Documents/Projects/pokemon-generator/client/components/FieldsAttack.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Input, Textarea } from \"@chakra-ui/react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useFormContext } from \"react-hook-form\";\nimport { DAMAGE_CHOICES, ATTACK_AMOUNT_CHOICES, ELEMENTS } from \"~constants\";\nimport Select from \"~components/Select\";\nimport Field from \"~components/Field\";\nconst optionsDamage = DAMAGE_CHOICES.map(el => ({\n  value: el,\n  label: el\n}));\nconst optionsType = ELEMENTS.map(el => ({\n  value: el,\n  label: el\n}));\nconst optionsAmount = ATTACK_AMOUNT_CHOICES.map(el => ({\n  value: el,\n  label: el\n}));\n\nconst FieldsAttack = ({\n  name\n}) => {\n  const {\n    t\n  } = useTranslation(\"generator\");\n  const {\n    register,\n    control\n  } = useFormContext();\n  return __jsx(React.Fragment, null, __jsx(Field, {\n    label: t(\"name\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(Input, {\n    name: `${name}.name`,\n    type: \"text\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  })), __jsx(Field, {\n    label: t(\"damage\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, __jsx(Select, {\n    name: `${name}.damage`,\n    options: optionsDamage,\n    control: control,\n    isClearable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })), __jsx(Field, {\n    label: t(\"info\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, __jsx(Textarea, {\n    name: `${name}.info`,\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })), __jsx(Field, {\n    label: t(\"amount\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, __jsx(Select, {\n    name: `${name}.amount`,\n    options: optionsAmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })), __jsx(Field, {\n    label: t(\"type\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, __jsx(Select, {\n    name: `${name}.type`,\n    isClearable: true,\n    options: optionsType,\n    iconPath: \"1-{{value}}.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default FieldsAttack;","map":{"version":3,"sources":["/Users/guillaumeesnault/Documents/Projects/pokemon-generator/client/components/FieldsAttack.tsx"],"names":["React","Input","Textarea","useTranslation","useFormContext","DAMAGE_CHOICES","ATTACK_AMOUNT_CHOICES","ELEMENTS","Select","Field","optionsDamage","map","el","value","label","optionsType","optionsAmount","FieldsAttack","name","t","register","control"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Box, Input, Textarea } from \"@chakra-ui/react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useFormContext } from \"react-hook-form\";\nimport { DAMAGE_CHOICES, ATTACK_AMOUNT_CHOICES, ELEMENTS } from \"~constants\";\nimport Select from \"~components/Select\";\nimport Field from \"~components/Field\";\n\nconst optionsDamage = DAMAGE_CHOICES.map((el) => ({\n  value: el,\n  label: el,\n}));\n\nconst optionsType = ELEMENTS.map((el) => ({\n  value: el,\n  label: el,\n}));\n\nconst optionsAmount = ATTACK_AMOUNT_CHOICES.map((el) => ({\n  value: el,\n  label: el,\n}));\n\nconst FieldsAttack = ({ name }) => {\n  const { t } = useTranslation(\"generator\");\n  const { register, control } = useFormContext();\n\n  return (\n    <>\n      <Field label={t(\"name\")}>\n        <Input name={`${name}.name`} type=\"text\" ref={register} />\n      </Field>\n      <Field label={t(\"damage\")}>\n        <Select\n          name={`${name}.damage`}\n          options={optionsDamage}\n          control={control}\n          isClearable\n        />\n      </Field>\n      <Field label={t(\"info\")}>\n        <Textarea name={`${name}.info`} ref={register} />\n      </Field>\n      <Field label={t(\"amount\")}>\n        <Select name={`${name}.amount`} options={optionsAmount} />\n      </Field>\n      <Field label={t(\"type\")}>\n        <Select\n          name={`${name}.type`}\n          isClearable\n          options={optionsType}\n          iconPath=\"1-{{value}}.png\"\n        />\n      </Field>\n    </>\n  );\n};\n\nexport default FieldsAttack;\n"]},"metadata":{},"sourceType":"module"}