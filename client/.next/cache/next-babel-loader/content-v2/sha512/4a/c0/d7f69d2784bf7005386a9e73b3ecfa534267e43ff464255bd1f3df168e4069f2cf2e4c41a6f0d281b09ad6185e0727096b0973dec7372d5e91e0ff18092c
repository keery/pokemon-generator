{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/guillaumeesnault/Documents/Projects/pokemon-generator/client/components/Card/TypeWithAmount.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useWatch } from 'react-hook-form';\nimport { Text, Group } from 'react-konva';\n\nvar TypeWithAmount = function TypeWithAmount(_ref) {\n  _s();\n\n  var control = _ref.control,\n      name = _ref.name,\n      _ref$x = _ref.x,\n      x = _ref$x === void 0 ? 0 : _ref$x,\n      _ref$y = _ref.y,\n      y = _ref$y === void 0 ? 0 : _ref$y;\n  var values = useWatch({\n    control: control,\n    name: [\"\".concat(name, \"Amount\"), \"\".concat(name, \"Type\")]\n  });\n  var type = values[\"\".concat(name, \"Type\")];\n  var amount = values[\"\".concat(name, \"Amount\")]; // let imageType = null\n\n  if (type) {// imageType = <ImageCanvas image={type} x={27} y={0} width={58} height={58} />\n  }\n\n  if (Boolean(type)) return null;\n  return /*#__PURE__*/_jsxDEV(Group, {\n    x: x,\n    y: y,\n    children: Boolean(amount) && /*#__PURE__*/_jsxDEV(Text, {\n      text: amount,\n      fontFamily: \"pokename\",\n      fontSize: 15,\n      y: 25,\n      x: 73\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(TypeWithAmount, \"zgUvFMNUl18z/IPRq/4lsrEckg8=\", false, function () {\n  return [useWatch];\n});\n\n_c = TypeWithAmount;\nexport default TypeWithAmount;\n\nvar _c;\n\n$RefreshReg$(_c, \"TypeWithAmount\");","map":{"version":3,"sources":["/Users/guillaumeesnault/Documents/Projects/pokemon-generator/client/components/Card/TypeWithAmount.tsx"],"names":["React","useWatch","Text","Group","TypeWithAmount","control","name","x","y","values","type","amount","Boolean"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,IAAT,EAAeC,KAAf,QAAkD,aAAlD;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAqC;AAAA;;AAAA,MAAlCC,OAAkC,QAAlCA,OAAkC;AAAA,MAAzBC,IAAyB,QAAzBA,IAAyB;AAAA,oBAAnBC,CAAmB;AAAA,MAAnBA,CAAmB,uBAAf,CAAe;AAAA,oBAAZC,CAAY;AAAA,MAAZA,CAAY,uBAAR,CAAQ;AAC1D,MAAMC,MAAM,GAAGR,QAAQ,CAAC;AACtBI,IAAAA,OAAO,EAAPA,OADsB;AAEtBC,IAAAA,IAAI,EAAE,WAAIA,IAAJ,uBAAqBA,IAArB;AAFgB,GAAD,CAAvB;AAKA,MAAMI,IAAI,GAAGD,MAAM,WAAIH,IAAJ,UAAnB;AACA,MAAMK,MAAM,GAAGF,MAAM,WAAIH,IAAJ,YAArB,CAP0D,CAQ1D;;AAEA,MAAII,IAAJ,EAAU,CACR;AACD;;AAED,MAAIE,OAAO,CAACF,IAAD,CAAX,EAAmB,OAAO,IAAP;AAEnB,sBACE,QAAC,KAAD;AAAO,IAAA,CAAC,EAAEH,CAAV;AAAa,IAAA,CAAC,EAAEC,CAAhB;AAAA,cAEGI,OAAO,CAACD,MAAD,CAAP,iBACC,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,MAAZ;AAAoB,MAAA,UAAU,EAAC,UAA/B;AAA0C,MAAA,QAAQ,EAAE,EAApD;AAAwD,MAAA,CAAC,EAAE,EAA3D;AAA+D,MAAA,CAAC,EAAE;AAAlE;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,WADF;AAQD,CAxBD;;GAAMP,c;UACWH,Q;;;KADXG,c;AA0BN,eAAeA,cAAf","sourcesContent":["import React from 'react'\nimport { useWatch } from 'react-hook-form'\nimport { Text, Group, Image as ImageCanvas } from 'react-konva'\n\nconst TypeWithAmount = ({ control, name, x = 0, y = 0 }) => {\n  const values = useWatch({\n    control,\n    name: [`${name}Amount`, `${name}Type`],\n  })\n\n  const type = values[`${name}Type`]\n  const amount = values[`${name}Amount`]\n  // let imageType = null\n\n  if (type) {\n    // imageType = <ImageCanvas image={type} x={27} y={0} width={58} height={58} />\n  }\n\n  if (Boolean(type)) return null\n\n  return (\n    <Group x={x} y={y}>\n      {/* {imageType} */}\n      {Boolean(amount) && (\n        <Text text={amount} fontFamily=\"pokename\" fontSize={15} y={25} x={73} />\n      )}\n    </Group>\n  )\n}\n\nexport default TypeWithAmount\n"]},"metadata":{},"sourceType":"module"}