{"ast":null,"code":"var _jsxFileName = \"/Users/guillaumeesnault/Documents/Projects/pokemon-generator/client/components/FileInput.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { Box } from \"@chakra-ui/react\";\nimport Uppy from \"@uppy/core\";\nimport DragDrop from \"@uppy/drag-drop\";\nimport French from \"@uppy/locales/lib/fr_FR\";\nimport Spanish from \"@uppy/locales/lib/es_ES\"; // import { FaCloudUploadAlt } from 'react-icons/fa'\n\nvar EMPTY_STATE = {\n  isUploaded: false,\n  uploadLabel: \"\"\n};\n\nvar getUppyTranslations = function getUppyTranslations(locale) {\n  switch (locale) {\n    case \"fr\":\n      return French;\n\n    case \"es\":\n      return Spanish;\n\n    default:\n      return false;\n  }\n};\n\nvar TRANSLOADIT_KEY = \"be3e863775b14553a504aaa98ca3c32c\";\nvar TRANSLOADIT_SECRET = \"bf39fb91c830d0a63f1e7880508d4f79c4bc1075\";\nvar TRANSLOADIT_TEMPLATE_ID = \"2451e3544cfd4eb29688983b6c7e8956\";\n\nvar FileInput = function FileInput() {\n  _s();\n\n  // constructor(props) {\n  //   super(props);\n  //   this.uppy = new Uppy({\n  //     id: props.name,\n  //     autoProceed: true,\n  //     // locale: getUppyTranslations(language),\n  //     debug: true,\n  //     allowMultipleUploads: false,\n  //     restrictions: {\n  //       maxFileSize: 1000000,\n  //       maxNumberOfFiles: 1,\n  //       allowedFileTypes: [\"image/*\"],\n  //     },\n  //   }).use(DragDrop, {\n  //     target: null,\n  //     width: \"100%\",\n  //     height: \"100%\",\n  //     note: null,\n  //     locale: {},\n  //   });\n  //   // .use(Webcam)\n  //   // .use(Instagram, {\n  //   //   companionUrl: process.env.REACT_APP_SERVER_URL,\n  //   // })\n  //   // .use(Url, {\n  //   //   companionUrl: process.env.REACT_APP_SERVER_URL,\n  //   // })\n  //   // .use(Transloadit, {\n  //   //   debug: true,\n  //   //   // signature: TRANSLOADIT_SECRET,\n  //   //   params: {\n  //   //     auth: {\n  //   //       // expires: dayjs().add(6, 'hour').format('YYYY/MM/DD HH:mm:ss+00:00'),\n  //   //       key: TRANSLOADIT_KEY,\n  //   //     },\n  //   //     template_id: TRANSLOADIT_TEMPLATE_ID,\n  //   //   },\n  //   // })\n  //   // .use(XHRUpload, {\n  //   //   endpoint: `${process.env.REACT_APP_SERVER_URL}/api/file/upload`,\n  //   // });\n  //   if (props.value) {\n  //     this.state = {\n  //       isUploaded: true,\n  //       uploadLabel: props.value.name,\n  //     };\n  //   } else {\n  //     this.state = EMPTY_STATE;\n  //   }\n  // }\n  // componentDidMount() {\n  //   const { onChange, name } = this.props;\n  //   this.uppy.on(\"transloadit:result\", (stepName, result) => {\n  //     const file = this.uppy.getFile(result.localId);\n  //     this.setState({\n  //       uploadLabel: file.name,\n  //       isUploaded: true,\n  //     });\n  //     onChange({\n  //       target: {\n  //         name,\n  //         value: {\n  //           src: file.response.uploadURL,\n  //           name: file.name,\n  //         },\n  //         getAttribute: () => false,\n  //       },\n  //     });\n  //     this.uppy.reset();\n  //     // this.context.closeModal()\n  //   });\n  // }\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (prevProps.value !== this.props.value && !this.props.value) {\n  //     this.setState(EMPTY_STATE);\n  //   }\n  // }\n  // componentWillUnmount() {\n  //   this.props.uppy.off(\"upload-success\");\n  //   this.props.uppy.close();\n  // }\n  // handleFile = (event) => {\n  //   const { isUploaded } = this.state\n  //   console.log(isUploaded)\n  //   this.setState({\n  //     // uploadLabel: file.name,\n  //     isUploaded: !isUploaded,\n  //   })\n  //   // this.context.openModalWith(\n  //     <Dashboard\n  //       uppy={this.props.uppy}\n  //       plugins={['Instagram', 'Webcam', 'Url']}\n  //       proudlyDisplayPoweredByUppy={false}\n  //       metaFields={[{ id: 'name', name: 'Name', placeholder: 'File name' }]}\n  //       browserBackButtonClose\n  //     />\n  //   )\n  // }\n  var _useState = useState(null),\n      uppy = _useState[0],\n      setUppy = _useState[1];\n\n  useEffect(function () {\n    setUppy(new Uppy({\n      id: props.name,\n      autoProceed: true,\n      // locale: getUppyTranslations(language),\n      debug: true,\n      allowMultipleUploads: false,\n      restrictions: {\n        maxFileSize: 1000000,\n        maxNumberOfFiles: 1,\n        allowedFileTypes: [\"image/*\"]\n      }\n    }).use(DragDrop, {\n      target: null,\n      width: \"100%\",\n      height: \"100%\",\n      note: null,\n      locale: {}\n    }));\n  }, []); // const { name } = this.props;\n  // const { uploadLabel, isUploaded } = this.state;\n\n  return __jsx(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 10\n    }\n  }, \"sdf\"); // {/* <DashboardModal\n  //   uppy={this.uppy}\n  //   closeModalOnClickOutside\n  //   open={this.state.modalOpen}\n  //   onRequestClose={this.handleClose}\n  //   plugins={[\"Webcam\"]}\n  // /> */}\n  // {/* <Dashboard\n  //   uppy={this.uppy}\n  //   plugins={[\"Instagram\", \"Webcam\", \"Url\"]}\n  //   proudlyDisplayPoweredByUppy={false}\n  //   metaFields={[{ id: \"name\", name: \"Name\", placeholder: \"File name\" }]}\n  //   browserBackButtonClose\n  // /> */}\n};\n\n_s(FileInput, \"sTUWhYepa9KCrqwVeFbgHPdi/Ww=\");\n\n_c = FileInput;\nexport default FileInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileInput\");","map":{"version":3,"sources":["/Users/guillaumeesnault/Documents/Projects/pokemon-generator/client/components/FileInput.tsx"],"names":["React","useEffect","useState","Box","Uppy","DragDrop","French","Spanish","EMPTY_STATE","isUploaded","uploadLabel","getUppyTranslations","locale","TRANSLOADIT_KEY","TRANSLOADIT_SECRET","TRANSLOADIT_TEMPLATE_ID","FileInput","uppy","setUppy","id","props","name","autoProceed","debug","allowMultipleUploads","restrictions","maxFileSize","maxNumberOfFiles","allowedFileTypes","use","target","width","height","note"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAGA,SAASC,GAAT,QAAgC,kBAAhC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AAEA,OAAOC,QAAP,MAAqB,iBAArB;AAKA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,OAAP,MAAoB,yBAApB,C,CACA;;AAEA,IAAMC,WAAW,GAAG;AAClBC,EAAAA,UAAU,EAAE,KADM;AAElBC,EAAAA,WAAW,EAAE;AAFK,CAApB;;AAKA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,MAAD,EAAY;AACtC,UAAQA,MAAR;AACE,SAAK,IAAL;AACE,aAAON,MAAP;;AACF,SAAK,IAAL;AACE,aAAOC,OAAP;;AACF;AACE,aAAO,KAAP;AANJ;AAQD,CATD;;AAWA,IAAMM,eAAe,GAAG,kCAAxB;AACA,IAAMC,kBAAkB,GAAG,0CAA3B;AACA,IAAMC,uBAAuB,GAAG,kCAAhC;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA;;AACtB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxGsB,kBA0GEd,QAAQ,CAAC,IAAD,CA1GV;AAAA,MA0Gfe,IA1Ge;AAAA,MA0GTC,OA1GS;;AA4GtBjB,EAAAA,SAAS,CAAC,YAAM;AACdiB,IAAAA,OAAO,CACL,IAAId,IAAJ,CAAS;AACPe,MAAAA,EAAE,EAAEC,KAAK,CAACC,IADH;AAEPC,MAAAA,WAAW,EAAE,IAFN;AAGP;AACAC,MAAAA,KAAK,EAAE,IAJA;AAKPC,MAAAA,oBAAoB,EAAE,KALf;AAMPC,MAAAA,YAAY,EAAE;AACZC,QAAAA,WAAW,EAAE,OADD;AAEZC,QAAAA,gBAAgB,EAAE,CAFN;AAGZC,QAAAA,gBAAgB,EAAE,CAAC,SAAD;AAHN;AANP,KAAT,EAWGC,GAXH,CAWOxB,QAXP,EAWiB;AACfyB,MAAAA,MAAM,EAAE,IADO;AAEfC,MAAAA,KAAK,EAAE,MAFQ;AAGfC,MAAAA,MAAM,EAAE,MAHO;AAIfC,MAAAA,IAAI,EAAE,IAJS;AAKfrB,MAAAA,MAAM,EAAE;AALO,KAXjB,CADK,CAAP;AAoBD,GArBQ,EAqBN,EArBM,CAAT,CA5GsB,CAmItB;AACA;;AACA,SAAO,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP,CArIsB,CAsItB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CApJD;;GAAMI,S;;KAAAA,S;AAsJN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Dashboard, DashboardModal } from \"@uppy/react\";\nimport { withTranslation, getI18n } from \"react-i18next\";\nimport { Box, Text, Icon } from \"@chakra-ui/react\";\nimport Uppy from \"@uppy/core\";\nimport Url from \"@uppy/url\";\nimport DragDrop from \"@uppy/drag-drop\";\nimport Webcam from \"@uppy/webcam\";\nimport Instagram from \"@uppy/instagram\";\nimport Transloadit from \"@uppy/transloadit\";\nimport XHRUpload from \"@uppy/xhr-upload\";\nimport French from \"@uppy/locales/lib/fr_FR\";\nimport Spanish from \"@uppy/locales/lib/es_ES\";\n// import { FaCloudUploadAlt } from 'react-icons/fa'\n\nconst EMPTY_STATE = {\n  isUploaded: false,\n  uploadLabel: \"\",\n};\n\nconst getUppyTranslations = (locale) => {\n  switch (locale) {\n    case \"fr\":\n      return French;\n    case \"es\":\n      return Spanish;\n    default:\n      return false;\n  }\n};\n\nconst TRANSLOADIT_KEY = \"be3e863775b14553a504aaa98ca3c32c\";\nconst TRANSLOADIT_SECRET = \"bf39fb91c830d0a63f1e7880508d4f79c4bc1075\";\nconst TRANSLOADIT_TEMPLATE_ID = \"2451e3544cfd4eb29688983b6c7e8956\";\n\nconst FileInput = () => {\n  // constructor(props) {\n  //   super(props);\n\n  //   this.uppy = new Uppy({\n  //     id: props.name,\n  //     autoProceed: true,\n  //     // locale: getUppyTranslations(language),\n  //     debug: true,\n  //     allowMultipleUploads: false,\n  //     restrictions: {\n  //       maxFileSize: 1000000,\n  //       maxNumberOfFiles: 1,\n  //       allowedFileTypes: [\"image/*\"],\n  //     },\n  //   }).use(DragDrop, {\n  //     target: null,\n  //     width: \"100%\",\n  //     height: \"100%\",\n  //     note: null,\n  //     locale: {},\n  //   });\n  //   // .use(Webcam)\n  //   // .use(Instagram, {\n  //   //   companionUrl: process.env.REACT_APP_SERVER_URL,\n  //   // })\n  //   // .use(Url, {\n  //   //   companionUrl: process.env.REACT_APP_SERVER_URL,\n  //   // })\n  //   // .use(Transloadit, {\n  //   //   debug: true,\n  //   //   // signature: TRANSLOADIT_SECRET,\n  //   //   params: {\n  //   //     auth: {\n  //   //       // expires: dayjs().add(6, 'hour').format('YYYY/MM/DD HH:mm:ss+00:00'),\n  //   //       key: TRANSLOADIT_KEY,\n  //   //     },\n  //   //     template_id: TRANSLOADIT_TEMPLATE_ID,\n  //   //   },\n  //   // })\n  //   // .use(XHRUpload, {\n  //   //   endpoint: `${process.env.REACT_APP_SERVER_URL}/api/file/upload`,\n  //   // });\n\n  //   if (props.value) {\n  //     this.state = {\n  //       isUploaded: true,\n  //       uploadLabel: props.value.name,\n  //     };\n  //   } else {\n  //     this.state = EMPTY_STATE;\n  //   }\n  // }\n\n  // componentDidMount() {\n  //   const { onChange, name } = this.props;\n  //   this.uppy.on(\"transloadit:result\", (stepName, result) => {\n  //     const file = this.uppy.getFile(result.localId);\n  //     this.setState({\n  //       uploadLabel: file.name,\n  //       isUploaded: true,\n  //     });\n  //     onChange({\n  //       target: {\n  //         name,\n  //         value: {\n  //           src: file.response.uploadURL,\n  //           name: file.name,\n  //         },\n  //         getAttribute: () => false,\n  //       },\n  //     });\n  //     this.uppy.reset();\n  //     // this.context.closeModal()\n  //   });\n  // }\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (prevProps.value !== this.props.value && !this.props.value) {\n  //     this.setState(EMPTY_STATE);\n  //   }\n  // }\n\n  // componentWillUnmount() {\n  //   this.props.uppy.off(\"upload-success\");\n  //   this.props.uppy.close();\n  // }\n\n  // handleFile = (event) => {\n  //   const { isUploaded } = this.state\n  //   console.log(isUploaded)\n  //   this.setState({\n  //     // uploadLabel: file.name,\n  //     isUploaded: !isUploaded,\n  //   })\n  //   // this.context.openModalWith(\n  //     <Dashboard\n  //       uppy={this.props.uppy}\n  //       plugins={['Instagram', 'Webcam', 'Url']}\n  //       proudlyDisplayPoweredByUppy={false}\n  //       metaFields={[{ id: 'name', name: 'Name', placeholder: 'File name' }]}\n  //       browserBackButtonClose\n  //     />\n  //   )\n  // }\n\n  const [uppy, setUppy] = useState(null);\n\n  useEffect(() => {\n    setUppy(\n      new Uppy({\n        id: props.name,\n        autoProceed: true,\n        // locale: getUppyTranslations(language),\n        debug: true,\n        allowMultipleUploads: false,\n        restrictions: {\n          maxFileSize: 1000000,\n          maxNumberOfFiles: 1,\n          allowedFileTypes: [\"image/*\"],\n        },\n      }).use(DragDrop, {\n        target: null,\n        width: \"100%\",\n        height: \"100%\",\n        note: null,\n        locale: {},\n      })\n    );\n  }, []);\n\n  // const { name } = this.props;\n  // const { uploadLabel, isUploaded } = this.state;\n  return <Box>sdf</Box>;\n  // {/* <DashboardModal\n  //   uppy={this.uppy}\n  //   closeModalOnClickOutside\n  //   open={this.state.modalOpen}\n  //   onRequestClose={this.handleClose}\n  //   plugins={[\"Webcam\"]}\n  // /> */}\n  // {/* <Dashboard\n  //   uppy={this.uppy}\n  //   plugins={[\"Instagram\", \"Webcam\", \"Url\"]}\n  //   proudlyDisplayPoweredByUppy={false}\n  //   metaFields={[{ id: \"name\", name: \"Name\", placeholder: \"File name\" }]}\n  //   browserBackButtonClose\n  // /> */}\n};\n\nexport default FileInput;\n"]},"metadata":{},"sourceType":"module"}