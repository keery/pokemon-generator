{"ast":null,"code":"var _jsxFileName = \"/Users/guillaumeesnault/Documents/Projects/pokemon-generator/client/pages/_app.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport NextApp from \"next/app\";\nimport \"../styles/globals.css\";\nimport theme from \"../theme\";\nimport { client } from \"~api/client-react-query\";\nimport AppHead from \"~components/AppHead\";\nimport Layout from \"~components/Layout\";\nimport { QueryClientProvider } from \"react-query\";\nimport { appWithTranslation } from \"next-i18next\";\nimport \"@uppy/core/dist/style.min.css\";\nimport \"@uppy/dashboard/dist/style.css\";\n\nconst App = ({\n  Component,\n  pageProps\n}) => {\n  const content = __jsx(React.Fragment, null, __jsx(AppHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }), __jsx(QueryClientProvider, {\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, __jsx(ChakraProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }))))));\n\n  return content;\n};\n\nApp.getInitialProps = async appContext => {\n  const appProps = await NextApp.getInitialProps(appContext);\n  return _objectSpread({}, appProps);\n};\n\nexport default appWithTranslation(App);","map":{"version":3,"sources":["/Users/guillaumeesnault/Documents/Projects/pokemon-generator/client/pages/_app.tsx"],"names":["React","ChakraProvider","NextApp","theme","client","AppHead","Layout","QueryClientProvider","appWithTranslation","App","Component","pageProps","content","getInitialProps","appContext","appProps"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,OAAP,MAAkC,UAAlC;AACA,OAAO,uBAAP;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,MAAT,QAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAASC,mBAAT,QAAoC,aAApC;AACA,SAASC,kBAAT,QAAmC,cAAnC;AAEA,OAAO,+BAAP;AACA,OAAO,gCAAP;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAAwC;AAClD,QAAMC,OAAO,GACX,4BACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,mBAAD;AAAqB,IAAA,MAAM,EAAER,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AAAgB,IAAA,KAAK,EAAED,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeQ,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF,CADF,CAFF,CADF;;AAaA,SAAOC,OAAP;AACD,CAfD;;AAiBAH,GAAG,CAACI,eAAJ,GAAsB,MAAOC,UAAP,IAAsB;AAC1C,QAAMC,QAAQ,GAAG,MAAMb,OAAO,CAACW,eAAR,CAAwBC,UAAxB,CAAvB;AACA,2BAAYC,QAAZ;AACD,CAHD;;AAKA,eAAeP,kBAAkB,CAACC,GAAD,CAAjC","sourcesContent":["import React from \"react\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport NextApp, { AppProps } from \"next/app\";\nimport \"../styles/globals.css\";\nimport theme from \"../theme\";\nimport { client } from \"~api/client-react-query\";\nimport AppHead from \"~components/AppHead\";\nimport Layout from \"~components/Layout\";\nimport { QueryClientProvider } from \"react-query\";\nimport { appWithTranslation } from \"next-i18next\";\n\nimport \"@uppy/core/dist/style.min.css\";\nimport \"@uppy/dashboard/dist/style.css\";\n\nconst App = ({ Component, pageProps }: AppProps) => {\n  const content = (\n    <>\n      <AppHead />\n      <QueryClientProvider client={client}>\n        <ChakraProvider theme={theme}>\n          <Layout>\n            <Component {...pageProps} />\n          </Layout>\n        </ChakraProvider>\n      </QueryClientProvider>\n    </>\n  );\n\n  return content;\n};\n\nApp.getInitialProps = async (appContext) => {\n  const appProps = await NextApp.getInitialProps(appContext);\n  return { ...appProps };\n};\n\nexport default appWithTranslation(App);\n"]},"metadata":{},"sourceType":"module"}