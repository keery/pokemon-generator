{"ast":null,"code":"var _jsxFileName = \"/Users/guillaumeesnault/Documents/Projects/pokemon-generator/client/components/PanelOptions.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport { VStack, Tooltip, IconButton, Flex } from \"@chakra-ui/react\";\nimport { useTranslation } from \"next-i18next\";\nimport Print from \"public/assets/img/print.svg\";\nimport Reset from \"public/assets/img/reset.svg\";\nimport Download from \"public/assets/img/download.svg\";\n\nconst printCard = () => {\n  window.print();\n};\n\nconst OptionButton = (_ref) => {\n  let {\n    icon,\n    label,\n    onClick\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"icon\", \"label\", \"onClick\"]);\n\n  return __jsx(Tooltip, {\n    hasArrow: true,\n    shouldWrapChildren: true,\n    label: label,\n    \"aria-label\": label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 3\n    }\n  }, __jsx(IconButton, _extends({\n    icon: icon,\n    onClick: onClick,\n    color: \"#b181f2\",\n    \"aria-label\": \"icon\",\n    borderRadius: \"sm\",\n    bg: \"transparent\",\n    _hover: {\n      bgColor: \"#f4e8fb\"\n    },\n    fontSize: \"1.7rem\"\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  })));\n};\n\nconst PanelOptions = () => {\n  const {\n    t\n  } = useTranslation(\"generator\");\n  return __jsx(Flex, {\n    mr: 5,\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(OptionButton, {\n    icon: __jsx(Download, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    }),\n    onClick: () => null,\n    label: t(\"downloadCard\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), __jsx(VStack, {\n    borderRadius: \"sm\",\n    p: 1.5,\n    layerStyle: \"glass\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, __jsx(OptionButton, {\n    icon: __jsx(Download, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }),\n    onClick: () => null,\n    label: t(\"downloadCard\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), __jsx(OptionButton, {\n    icon: __jsx(Print, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }),\n    onClick: printCard,\n    label: t(\"printCard\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), __jsx(OptionButton, {\n    icon: __jsx(Reset, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }),\n    onClick: () => null,\n    label: t(\"resetCard\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default PanelOptions;","map":{"version":3,"sources":["/Users/guillaumeesnault/Documents/Projects/pokemon-generator/client/components/PanelOptions.tsx"],"names":["React","VStack","Tooltip","IconButton","Flex","useTranslation","Print","Reset","Download","printCard","window","print","OptionButton","icon","label","onClick","rest","bgColor","PanelOptions","t"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,UAA1B,EAAsCC,IAAtC,QAAkD,kBAAlD;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,OAAOC,QAAP,MAAqB,gCAArB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtBC,EAAAA,MAAM,CAACC,KAAP;AACD,CAFD;;AAIA,MAAMC,YAAY,GAAG;AAAA,MAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAD;AAAA,MAA4BC,IAA5B;;AAAA,SACnB,MAAC,OAAD;AAAS,IAAA,QAAQ,MAAjB;AAAkB,IAAA,kBAAkB,MAApC;AAAqC,IAAA,KAAK,EAAEF,KAA5C;AAAmD,kBAAYA,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,IAAI,EAAED,IADR;AAEE,IAAA,OAAO,EAAEE,OAFX;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,kBAAW,MAJb;AAKE,IAAA,YAAY,EAAC,IALf;AAME,IAAA,EAAE,EAAC,aANL;AAOE,IAAA,MAAM,EAAE;AACNE,MAAAA,OAAO,EAAE;AADH,KAPV;AAUE,IAAA,QAAQ,EAAC;AAVX,KAWMD,IAXN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADmB;AAAA,CAArB;;AAkBA,MAAME,YAAY,GAAG,MAAM;AACzB,QAAM;AAAEC,IAAAA;AAAF,MAAQd,cAAc,CAAC,WAAD,CAA5B;AACA,SACE,MAAC,IAAD;AAAM,IAAA,EAAE,EAAE,CAAV;AAAa,IAAA,UAAU,EAAC,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AACE,IAAA,IAAI,EAAE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADR;AAEE,IAAA,OAAO,EAAE,MAAM,IAFjB;AAGE,IAAA,KAAK,EAAEc,CAAC,CAAC,cAAD,CAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,MAAC,MAAD;AAAQ,IAAA,YAAY,EAAC,IAArB;AAA0B,IAAA,CAAC,EAAE,GAA7B;AAAkC,IAAA,UAAU,EAAC,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AACE,IAAA,IAAI,EAAE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADR;AAEE,IAAA,OAAO,EAAE,MAAM,IAFjB;AAGE,IAAA,KAAK,EAAEA,CAAC,CAAC,cAAD,CAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,MAAC,YAAD;AACE,IAAA,IAAI,EAAE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADR;AAEE,IAAA,OAAO,EAAEV,SAFX;AAGE,IAAA,KAAK,EAAEU,CAAC,CAAC,WAAD,CAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAWE,MAAC,YAAD;AACE,IAAA,IAAI,EAAE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADR;AAEE,IAAA,OAAO,EAAE,MAAM,IAFjB;AAGE,IAAA,KAAK,EAAEA,CAAC,CAAC,WAAD,CAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CANF,CADF;AA0BD,CA5BD;;AA8BA,eAAeD,YAAf","sourcesContent":["import React from \"react\";\nimport { VStack, Tooltip, IconButton, Flex } from \"@chakra-ui/react\";\nimport { useTranslation } from \"next-i18next\";\nimport Print from \"public/assets/img/print.svg\";\nimport Reset from \"public/assets/img/reset.svg\";\nimport Download from \"public/assets/img/download.svg\";\n\nconst printCard = () => {\n  window.print();\n};\n\nconst OptionButton = ({ icon, label, onClick, ...rest }) => (\n  <Tooltip hasArrow shouldWrapChildren label={label} aria-label={label}>\n    <IconButton\n      icon={icon}\n      onClick={onClick}\n      color=\"#b181f2\"\n      aria-label=\"icon\"\n      borderRadius=\"sm\"\n      bg=\"transparent\"\n      _hover={{\n        bgColor: \"#f4e8fb\",\n      }}\n      fontSize=\"1.7rem\"\n      {...rest}\n    />\n  </Tooltip>\n);\n\nconst PanelOptions = () => {\n  const { t } = useTranslation(\"generator\");\n  return (\n    <Flex mr={5} alignItems=\"flex-start\">\n      <OptionButton\n        icon={<Download />}\n        onClick={() => null}\n        label={t(\"downloadCard\")}\n      />\n      <VStack borderRadius=\"sm\" p={1.5} layerStyle=\"glass\">\n        <OptionButton\n          icon={<Download />}\n          onClick={() => null}\n          label={t(\"downloadCard\")}\n        />\n        <OptionButton\n          icon={<Print />}\n          onClick={printCard}\n          label={t(\"printCard\")}\n        />\n        <OptionButton\n          icon={<Reset />}\n          onClick={() => null}\n          label={t(\"resetCard\")}\n        />\n      </VStack>\n    </Flex>\n  );\n};\n\nexport default PanelOptions;\n"]},"metadata":{},"sourceType":"module"}