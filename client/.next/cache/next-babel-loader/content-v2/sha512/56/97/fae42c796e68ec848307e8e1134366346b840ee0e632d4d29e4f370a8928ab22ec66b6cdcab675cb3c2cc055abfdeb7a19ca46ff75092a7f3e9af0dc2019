{"ast":null,"code":"var _jsxFileName = \"/Users/guillaumeesnault/Documents/Projects/pokemon-generator/client/components/FileInput.tsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { withTranslation } from \"react-i18next\";\nimport { Box } from \"@chakra-ui/react\";\nimport Uppy from \"@uppy/core\";\nimport DragDrop from \"@uppy/drag-drop\";\nimport French from \"@uppy/locales/lib/fr_FR\";\nimport Spanish from \"@uppy/locales/lib/es_ES\"; // import { FaCloudUploadAlt } from 'react-icons/fa'\n\nconst EMPTY_STATE = {\n  isUploaded: false,\n  uploadLabel: \"\"\n};\n\nconst getUppyTranslations = locale => {\n  switch (locale) {\n    case \"fr\":\n      return French;\n\n    case \"es\":\n      return Spanish;\n\n    default:\n      return false;\n  }\n};\n\nconst TRANSLOADIT_KEY = \"be3e863775b14553a504aaa98ca3c32c\";\nconst TRANSLOADIT_SECRET = \"bf39fb91c830d0a63f1e7880508d4f79c4bc1075\";\nconst TRANSLOADIT_TEMPLATE_ID = \"2451e3544cfd4eb29688983b6c7e8956\";\n\nclass FileInput extends Component {\n  constructor(props) {\n    super(props);\n    this.uppy = new Uppy({\n      id: props.name,\n      autoProceed: true,\n      // locale: getUppyTranslations(language),\n      debug: true,\n      allowMultipleUploads: false,\n      restrictions: {\n        maxFileSize: 1000000,\n        maxNumberOfFiles: 1,\n        allowedFileTypes: [\"image/*\"]\n      }\n    }).use(DragDrop, {\n      target: null,\n      width: \"100%\",\n      height: \"100%\",\n      note: null,\n      locale: {}\n    }); // .use(Webcam)\n    // .use(Instagram, {\n    //   companionUrl: process.env.REACT_APP_SERVER_URL,\n    // })\n    // .use(Url, {\n    //   companionUrl: process.env.REACT_APP_SERVER_URL,\n    // })\n    // .use(Transloadit, {\n    //   debug: true,\n    //   // signature: TRANSLOADIT_SECRET,\n    //   params: {\n    //     auth: {\n    //       // expires: dayjs().add(6, 'hour').format('YYYY/MM/DD HH:mm:ss+00:00'),\n    //       key: TRANSLOADIT_KEY,\n    //     },\n    //     template_id: TRANSLOADIT_TEMPLATE_ID,\n    //   },\n    // })\n    // .use(XHRUpload, {\n    //   endpoint: `${process.env.REACT_APP_SERVER_URL}/api/file/upload`,\n    // });\n\n    if (props.value) {\n      this.state = {\n        isUploaded: true,\n        uploadLabel: props.value.name\n      };\n    } else {\n      this.state = EMPTY_STATE;\n    }\n  }\n\n  componentDidMount() {\n    const {\n      onChange,\n      name\n    } = this.props;\n    this.uppy.on(\"transloadit:result\", (stepName, result) => {\n      const file = this.uppy.getFile(result.localId);\n      this.setState({\n        uploadLabel: file.name,\n        isUploaded: true\n      });\n      onChange({\n        target: {\n          name,\n          value: {\n            src: file.response.uploadURL,\n            name: file.name\n          },\n          getAttribute: () => false\n        }\n      });\n      this.uppy.reset(); // this.context.closeModal()\n    });\n  } // componentDidUpdate(prevProps, prevState) {\n  //   if (prevProps.value !== this.props.value && !this.props.value) {\n  //     this.setState(EMPTY_STATE);\n  //   }\n  // }\n  // componentWillUnmount() {\n  //   this.props.uppy.off(\"upload-success\");\n  //   this.props.uppy.close();\n  // }\n  // handleFile = (event) => {\n  //   const { isUploaded } = this.state\n  //   console.log(isUploaded)\n  //   this.setState({\n  //     // uploadLabel: file.name,\n  //     isUploaded: !isUploaded,\n  //   })\n  //   // this.context.openModalWith(\n  //     <Dashboard\n  //       uppy={this.props.uppy}\n  //       plugins={['Instagram', 'Webcam', 'Url']}\n  //       proudlyDisplayPoweredByUppy={false}\n  //       metaFields={[{ id: 'name', name: 'Name', placeholder: 'File name' }]}\n  //       browserBackButtonClose\n  //     />\n  //   )\n  // }\n\n\n  render() {\n    const {\n      name\n    } = this.props;\n    const {\n      uploadLabel,\n      isUploaded\n    } = this.state;\n    return __jsx(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 12\n      }\n    }, \"sdf\"); // {/* <DashboardModal\n    //   uppy={this.uppy}\n    //   closeModalOnClickOutside\n    //   open={this.state.modalOpen}\n    //   onRequestClose={this.handleClose}\n    //   plugins={[\"Webcam\"]}\n    // /> */}\n    // {/* <Dashboard\n    //   uppy={this.uppy}\n    //   plugins={[\"Instagram\", \"Webcam\", \"Url\"]}\n    //   proudlyDisplayPoweredByUppy={false}\n    //   metaFields={[{ id: \"name\", name: \"Name\", placeholder: \"File name\" }]}\n    //   browserBackButtonClose\n    // /> */}\n  }\n\n}\n\nexport default withTranslation(\"fileInput\")(FileInput);","map":{"version":3,"sources":["/Users/guillaumeesnault/Documents/Projects/pokemon-generator/client/components/FileInput.tsx"],"names":["React","Component","withTranslation","Box","Uppy","DragDrop","French","Spanish","EMPTY_STATE","isUploaded","uploadLabel","getUppyTranslations","locale","TRANSLOADIT_KEY","TRANSLOADIT_SECRET","TRANSLOADIT_TEMPLATE_ID","FileInput","constructor","props","uppy","id","name","autoProceed","debug","allowMultipleUploads","restrictions","maxFileSize","maxNumberOfFiles","allowedFileTypes","use","target","width","height","note","value","state","componentDidMount","onChange","on","stepName","result","file","getFile","localId","setState","src","response","uploadURL","getAttribute","reset","render"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { Dashboard, DashboardModal } from \"@uppy/react\";\nimport { withTranslation, getI18n } from \"react-i18next\";\nimport { Box, Text, Icon } from \"@chakra-ui/react\";\nimport Uppy from \"@uppy/core\";\nimport Url from \"@uppy/url\";\nimport DragDrop from \"@uppy/drag-drop\";\nimport Webcam from \"@uppy/webcam\";\nimport Instagram from \"@uppy/instagram\";\nimport Transloadit from \"@uppy/transloadit\";\nimport XHRUpload from \"@uppy/xhr-upload\";\nimport French from \"@uppy/locales/lib/fr_FR\";\nimport Spanish from \"@uppy/locales/lib/es_ES\";\n// import { FaCloudUploadAlt } from 'react-icons/fa'\n\nconst EMPTY_STATE = {\n  isUploaded: false,\n  uploadLabel: \"\",\n};\n\nconst getUppyTranslations = (locale) => {\n  switch (locale) {\n    case \"fr\":\n      return French;\n    case \"es\":\n      return Spanish;\n    default:\n      return false;\n  }\n};\n\nconst TRANSLOADIT_KEY = \"be3e863775b14553a504aaa98ca3c32c\";\nconst TRANSLOADIT_SECRET = \"bf39fb91c830d0a63f1e7880508d4f79c4bc1075\";\nconst TRANSLOADIT_TEMPLATE_ID = \"2451e3544cfd4eb29688983b6c7e8956\";\n\nclass FileInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.uppy = new Uppy({\n      id: props.name,\n      autoProceed: true,\n      // locale: getUppyTranslations(language),\n      debug: true,\n      allowMultipleUploads: false,\n      restrictions: {\n        maxFileSize: 1000000,\n        maxNumberOfFiles: 1,\n        allowedFileTypes: [\"image/*\"],\n      },\n    }).use(DragDrop, {\n      target: null,\n      width: \"100%\",\n      height: \"100%\",\n      note: null,\n      locale: {},\n    });\n    // .use(Webcam)\n    // .use(Instagram, {\n    //   companionUrl: process.env.REACT_APP_SERVER_URL,\n    // })\n    // .use(Url, {\n    //   companionUrl: process.env.REACT_APP_SERVER_URL,\n    // })\n    // .use(Transloadit, {\n    //   debug: true,\n    //   // signature: TRANSLOADIT_SECRET,\n    //   params: {\n    //     auth: {\n    //       // expires: dayjs().add(6, 'hour').format('YYYY/MM/DD HH:mm:ss+00:00'),\n    //       key: TRANSLOADIT_KEY,\n    //     },\n    //     template_id: TRANSLOADIT_TEMPLATE_ID,\n    //   },\n    // })\n    // .use(XHRUpload, {\n    //   endpoint: `${process.env.REACT_APP_SERVER_URL}/api/file/upload`,\n    // });\n\n    if (props.value) {\n      this.state = {\n        isUploaded: true,\n        uploadLabel: props.value.name,\n      };\n    } else {\n      this.state = EMPTY_STATE;\n    }\n  }\n\n  componentDidMount() {\n    const { onChange, name } = this.props;\n    this.uppy.on(\"transloadit:result\", (stepName, result) => {\n      const file = this.uppy.getFile(result.localId);\n      this.setState({\n        uploadLabel: file.name,\n        isUploaded: true,\n      });\n      onChange({\n        target: {\n          name,\n          value: {\n            src: file.response.uploadURL,\n            name: file.name,\n          },\n          getAttribute: () => false,\n        },\n      });\n      this.uppy.reset();\n      // this.context.closeModal()\n    });\n  }\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (prevProps.value !== this.props.value && !this.props.value) {\n  //     this.setState(EMPTY_STATE);\n  //   }\n  // }\n\n  // componentWillUnmount() {\n  //   this.props.uppy.off(\"upload-success\");\n  //   this.props.uppy.close();\n  // }\n\n  // handleFile = (event) => {\n  //   const { isUploaded } = this.state\n  //   console.log(isUploaded)\n  //   this.setState({\n  //     // uploadLabel: file.name,\n  //     isUploaded: !isUploaded,\n  //   })\n  //   // this.context.openModalWith(\n  //     <Dashboard\n  //       uppy={this.props.uppy}\n  //       plugins={['Instagram', 'Webcam', 'Url']}\n  //       proudlyDisplayPoweredByUppy={false}\n  //       metaFields={[{ id: 'name', name: 'Name', placeholder: 'File name' }]}\n  //       browserBackButtonClose\n  //     />\n  //   )\n  // }\n\n  render() {\n    const { name } = this.props;\n    const { uploadLabel, isUploaded } = this.state;\n    return <Box>sdf</Box>;\n    // {/* <DashboardModal\n    //   uppy={this.uppy}\n    //   closeModalOnClickOutside\n    //   open={this.state.modalOpen}\n    //   onRequestClose={this.handleClose}\n    //   plugins={[\"Webcam\"]}\n    // /> */}\n    // {/* <Dashboard\n    //   uppy={this.uppy}\n    //   plugins={[\"Instagram\", \"Webcam\", \"Url\"]}\n    //   proudlyDisplayPoweredByUppy={false}\n    //   metaFields={[{ id: \"name\", name: \"Name\", placeholder: \"File name\" }]}\n    //   browserBackButtonClose\n    // /> */}\n  }\n}\n\nexport default withTranslation(\"fileInput\")(FileInput);\n"]},"metadata":{},"sourceType":"module"}