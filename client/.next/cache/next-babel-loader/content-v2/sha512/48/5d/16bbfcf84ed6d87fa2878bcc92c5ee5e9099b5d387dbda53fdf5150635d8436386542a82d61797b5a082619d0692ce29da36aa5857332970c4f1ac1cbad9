{"ast":null,"code":"var _jsxFileName = \"/Users/guillaumeesnault/Documents/Projects/pokemon-generator/client/components/Modal.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport { Modal as ModalChakra, ModalOverlay, ModalContent, ModalHeader, ModalBody, ModalCloseButton, useDisclosure, Box } from \"@chakra-ui/react\";\n\nconst Modal = (_ref) => {\n  let {\n    button,\n    children,\n    title,\n    withCloseButton = false\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"button\", \"children\", \"title\", \"withCloseButton\"]);\n\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    as: \"span\",\n    onClick: onOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, button), __jsx(ModalChakra, _extends({\n    isOpen: isOpen,\n    onClose: onClose,\n    isCentered: true\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), __jsx(ModalOverlay, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), __jsx(ModalContent, {\n    py: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, title && __jsx(ModalHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, title), withCloseButton && __jsx(ModalCloseButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 31\n    }\n  }), __jsx(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, children))));\n};\n\nexport default Modal;","map":{"version":3,"sources":["/Users/guillaumeesnault/Documents/Projects/pokemon-generator/client/components/Modal.tsx"],"names":["React","Modal","ModalChakra","ModalOverlay","ModalContent","ModalHeader","ModalBody","ModalCloseButton","useDisclosure","Box","button","children","title","withCloseButton","rest","isOpen","onOpen","onClose"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,KAAK,IAAIC,WADX,EAGEC,YAHF,EAIEC,YAJF,EAKEC,WALF,EAOEC,SAPF,EAQEC,gBARF,EASEC,aATF,EAWEC,GAXF,QAYO,kBAZP;;AAqBA,MAAMR,KAAK,GAAG,UAMD;AAAA,MANE;AACbS,IAAAA,MADa;AAEbC,IAAAA,QAFa;AAGbC,IAAAA,KAHa;AAIbC,IAAAA,eAAe,GAAG;AAJL,GAMF;AAAA,MADRC,IACQ;;AACX,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,MAAV;AAAkBC,IAAAA;AAAlB,MAA8BT,aAAa,EAAjD;AACA,SACE,4BACE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAC,MAAR;AAAe,IAAA,OAAO,EAAEQ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,MADH,CADF,EAIE,MAAC,WAAD;AAAa,IAAA,MAAM,EAAEK,MAArB;AAA6B,IAAA,OAAO,EAAEE,OAAtC;AAA+C,IAAA,UAAU;AAAzD,KAA8DH,IAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,YAAD;AAAc,IAAA,EAAE,EAAE,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,IAAI,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcA,KAAd,CADZ,EAEGC,eAAe,IAAI,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFtB,EAIE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYF,QAAZ,CAJF,CAFF,CAJF,CADF;AAgBD,CAxBD;;AA0BA,eAAeV,KAAf","sourcesContent":["import React from \"react\";\nimport {\n  Modal as ModalChakra,\n  ModalProps,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  Button,\n  Box,\n} from \"@chakra-ui/react\";\n\ninterface Props extends Omit<ModalProps, \"isOpen\" | \"onClose\"> {\n  title?: string;\n  button: React.ReactElement;\n  children: React.ReactNode;\n  withCloseButton?: boolean;\n}\n\nconst Modal = ({\n  button,\n  children,\n  title,\n  withCloseButton = false,\n  ...rest\n}: Props) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  return (\n    <>\n      <Box as=\"span\" onClick={onOpen}>\n        {button}\n      </Box>\n      <ModalChakra isOpen={isOpen} onClose={onClose} isCentered {...rest}>\n        <ModalOverlay />\n        <ModalContent py={5}>\n          {title && <ModalHeader>{title}</ModalHeader>}\n          {withCloseButton && <ModalCloseButton />}\n\n          <ModalBody>{children}</ModalBody>\n        </ModalContent>\n      </ModalChakra>\n    </>\n  );\n};\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}