{"ast":null,"code":"var _jsxFileName = \"/Users/guillaumeesnault/Documents/Projects/pokemon-generator/client/components/FileInput.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Uppy from \"@uppy/core\";\nimport DragDropModule from \"@uppy/drag-drop\";\nimport { DragDrop, useUppy } from \"@uppy/react\";\nimport French from \"@uppy/locales/lib/fr_FR\";\nimport Spanish from \"@uppy/locales/lib/es_ES\"; // import { FaCloudUploadAlt } from 'react-icons/fa'\n\nconst EMPTY_STATE = {\n  isUploaded: false,\n  uploadLabel: \"\"\n};\n\nconst getUppyTranslations = locale => {\n  switch (locale) {\n    case \"fr\":\n      return French;\n\n    case \"es\":\n      return Spanish;\n\n    default:\n      return false;\n  }\n};\n\nconst TRANSLOADIT_KEY = \"be3e863775b14553a504aaa98ca3c32c\";\nconst TRANSLOADIT_SECRET = \"bf39fb91c830d0a63f1e7880508d4f79c4bc1075\";\nconst TRANSLOADIT_TEMPLATE_ID = \"2451e3544cfd4eb29688983b6c7e8956\";\n\nconst FileInput = ({\n  name\n}) => {\n  // constructor(props) {\n  //   super(props);\n  //   this.uppy = new Uppy({\n  //     id: props.name,\n  //     autoProceed: true,\n  //     // locale: getUppyTranslations(language),\n  //     debug: true,\n  //     allowMultipleUploads: false,\n  //     restrictions: {\n  //       maxFileSize: 1000000,\n  //       maxNumberOfFiles: 1,\n  //       allowedFileTypes: [\"image/*\"],\n  //     },\n  //   }).use(DragDrop, {\n  //     target: null,\n  //     width: \"100%\",\n  //     height: \"100%\",\n  //     note: null,\n  //     locale: {},\n  //   });\n  //   // .use(Webcam)\n  //   // .use(Instagram, {\n  //   //   companionUrl: process.env.REACT_APP_SERVER_URL,\n  //   // })\n  //   // .use(Url, {\n  //   //   companionUrl: process.env.REACT_APP_SERVER_URL,\n  //   // })\n  //   // .use(Transloadit, {\n  //   //   debug: true,\n  //   //   // signature: TRANSLOADIT_SECRET,\n  //   //   params: {\n  //   //     auth: {\n  //   //       // expires: dayjs().add(6, 'hour').format('YYYY/MM/DD HH:mm:ss+00:00'),\n  //   //       key: TRANSLOADIT_KEY,\n  //   //     },\n  //   //     template_id: TRANSLOADIT_TEMPLATE_ID,\n  //   //   },\n  //   // })\n  //   // .use(XHRUpload, {\n  //   //   endpoint: `${process.env.REACT_APP_SERVER_URL}/api/file/upload`,\n  //   // });\n  //   if (props.value) {\n  //     this.state = {\n  //       isUploaded: true,\n  //       uploadLabel: props.value.name,\n  //     };\n  //   } else {\n  //     this.state = EMPTY_STATE;\n  //   }\n  // }\n  // componentDidMount() {\n  //   const { onChange, name } = this.props;\n  //   this.uppy.on(\"transloadit:result\", (stepName, result) => {\n  //     const file = this.uppy.getFile(result.localId);\n  //     this.setState({\n  //       uploadLabel: file.name,\n  //       isUploaded: true,\n  //     });\n  //     onChange({\n  //       target: {\n  //         name,\n  //         value: {\n  //           src: file.response.uploadURL,\n  //           name: file.name,\n  //         },\n  //         getAttribute: () => false,\n  //       },\n  //     });\n  //     this.uppy.reset();\n  //     // this.context.closeModal()\n  //   });\n  // }\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (prevProps.value !== this.props.value && !this.props.value) {\n  //     this.setState(EMPTY_STATE);\n  //   }\n  // }\n  // componentWillUnmount() {\n  //   this.props.uppy.off(\"upload-success\");\n  //   this.props.uppy.close();\n  // }\n  // handleFile = (event) => {\n  //   const { isUploaded } = this.state\n  //   console.log(isUploaded)\n  //   this.setState({\n  //     // uploadLabel: file.name,\n  //     isUploaded: !isUploaded,\n  //   })\n  //   // this.context.openModalWith(\n  //     <Dashboard\n  //       uppy={this.props.uppy}\n  //       plugins={['Instagram', 'Webcam', 'Url']}\n  //       proudlyDisplayPoweredByUppy={false}\n  //       metaFields={[{ id: 'name', name: 'Name', placeholder: 'File name' }]}\n  //       browserBackButtonClose\n  //     />\n  //   )\n  // }\n  const uppy = useUppy(() => {\n    return new Uppy({\n      id: name,\n      autoProceed: true,\n      // locale: getUppyTranslations(language),\n      debug: true,\n      allowMultipleUploads: false,\n      restrictions: {\n        maxFileSize: 1000000,\n        maxNumberOfFiles: 1,\n        allowedFileTypes: [\"image/*\"]\n      }\n    }).use(DragDropModule, {\n      target: null,\n      width: \"100%\",\n      height: \"100%\",\n      note: null\n    });\n  }); // const { name } = this.props;\n  // const { uploadLabel, isUploaded } = this.state;\n\n  console.log(uppy);\n  return __jsx(DragDrop, {\n    width: \"100%\",\n    height: \"100%\",\n    note: \"Images up to 200\\xD7200px\",\n    uppy: uppy // locale={{\n    //   strings: {\n    //     // Text to show on the droppable area.\n    //     // `%{browse}` is replaced with a link that opens the system file selection dialog.\n    //     dropHereOr: \"Drop here or %{browse}\",\n    //     // Used as the label for the link that opens the system file selection dialog.\n    //     browse: \"browse\",\n    //   },\n    // }}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 5\n    }\n  }); // {/* <DashboardModal\n  //   uppy={this.uppy}\n  //   closeModalOnClickOutside\n  //   open={this.state.modalOpen}\n  //   onRequestClose={this.handleClose}\n  //   plugins={[\"Webcam\"]}\n  // /> */}\n  // {/* <Dashboard\n  //   uppy={this.uppy}\n  //   plugins={[\"Instagram\", \"Webcam\", \"Url\"]}\n  //   proudlyDisplayPoweredByUppy={false}\n  //   metaFields={[{ id: \"name\", name: \"Name\", placeholder: \"File name\" }]}\n  //   browserBackButtonClose\n  // /> */}\n};\n\nexport default FileInput;","map":{"version":3,"sources":["/Users/guillaumeesnault/Documents/Projects/pokemon-generator/client/components/FileInput.tsx"],"names":["React","Uppy","DragDropModule","DragDrop","useUppy","French","Spanish","EMPTY_STATE","isUploaded","uploadLabel","getUppyTranslations","locale","TRANSLOADIT_KEY","TRANSLOADIT_SECRET","TRANSLOADIT_TEMPLATE_ID","FileInput","name","uppy","id","autoProceed","debug","allowMultipleUploads","restrictions","maxFileSize","maxNumberOfFiles","allowedFileTypes","use","target","width","height","note","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAA2C,OAA3C;AAGA,OAAOC,IAAP,MAAiB,YAAjB;AAEA,OAAOC,cAAP,MAA2B,iBAA3B;AACA,SAAoCC,QAApC,EAA8CC,OAA9C,QAA6D,aAA7D;AAKA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,OAAP,MAAoB,yBAApB,C,CACA;;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,UAAU,EAAE,KADM;AAElBC,EAAAA,WAAW,EAAE;AAFK,CAApB;;AAKA,MAAMC,mBAAmB,GAAIC,MAAD,IAAY;AACtC,UAAQA,MAAR;AACE,SAAK,IAAL;AACE,aAAON,MAAP;;AACF,SAAK,IAAL;AACE,aAAOC,OAAP;;AACF;AACE,aAAO,KAAP;AANJ;AAQD,CATD;;AAWA,MAAMM,eAAe,GAAG,kCAAxB;AACA,MAAMC,kBAAkB,GAAG,0CAA3B;AACA,MAAMC,uBAAuB,GAAG,kCAAhC;;AAMA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAcb,OAAO,CAAC,MAAM;AACzB,WAAO,IAAIH,IAAJ,CAAS;AACdiB,MAAAA,EAAE,EAAEF,IADU;AAEdG,MAAAA,WAAW,EAAE,IAFC;AAGd;AACAC,MAAAA,KAAK,EAAE,IAJO;AAKdC,MAAAA,oBAAoB,EAAE,KALR;AAMdC,MAAAA,YAAY,EAAE;AACZC,QAAAA,WAAW,EAAE,OADD;AAEZC,QAAAA,gBAAgB,EAAE,CAFN;AAGZC,QAAAA,gBAAgB,EAAE,CAAC,SAAD;AAHN;AANA,KAAT,EAWJC,GAXI,CAWAxB,cAXA,EAWgB;AACrByB,MAAAA,MAAM,EAAE,IADa;AAErBC,MAAAA,KAAK,EAAE,MAFc;AAGrBC,MAAAA,MAAM,EAAE,MAHa;AAIrBC,MAAAA,IAAI,EAAE;AAJe,KAXhB,CAAP;AAiBD,GAlBmB,CAApB,CA1G8B,CA8H9B;AACA;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYf,IAAZ;AACA,SACE,MAAC,QAAD;AACE,IAAA,KAAK,EAAC,MADR;AAEE,IAAA,MAAM,EAAC,MAFT;AAGE,IAAA,IAAI,EAAC,2BAHP;AAIE,IAAA,IAAI,EAAEA,IAJR,CAKE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAjI8B,CAkJ9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAhKD;;AAkKA,eAAeF,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { withTranslation, getI18n } from \"react-i18next\";\nimport { Box, Text, Icon } from \"@chakra-ui/react\";\nimport Uppy from \"@uppy/core\";\nimport Url from \"@uppy/url\";\nimport DragDropModule from \"@uppy/drag-drop\";\nimport { Dashboard, DashboardModal, DragDrop, useUppy } from \"@uppy/react\";\nimport Webcam from \"@uppy/webcam\";\nimport Instagram from \"@uppy/instagram\";\nimport Transloadit from \"@uppy/transloadit\";\nimport XHRUpload from \"@uppy/xhr-upload\";\nimport French from \"@uppy/locales/lib/fr_FR\";\nimport Spanish from \"@uppy/locales/lib/es_ES\";\n// import { FaCloudUploadAlt } from 'react-icons/fa'\n\nconst EMPTY_STATE = {\n  isUploaded: false,\n  uploadLabel: \"\",\n};\n\nconst getUppyTranslations = (locale) => {\n  switch (locale) {\n    case \"fr\":\n      return French;\n    case \"es\":\n      return Spanish;\n    default:\n      return false;\n  }\n};\n\nconst TRANSLOADIT_KEY = \"be3e863775b14553a504aaa98ca3c32c\";\nconst TRANSLOADIT_SECRET = \"bf39fb91c830d0a63f1e7880508d4f79c4bc1075\";\nconst TRANSLOADIT_TEMPLATE_ID = \"2451e3544cfd4eb29688983b6c7e8956\";\n\ninterface Props {\n  name: string;\n}\n\nconst FileInput = ({ name }) => {\n  // constructor(props) {\n  //   super(props);\n\n  //   this.uppy = new Uppy({\n  //     id: props.name,\n  //     autoProceed: true,\n  //     // locale: getUppyTranslations(language),\n  //     debug: true,\n  //     allowMultipleUploads: false,\n  //     restrictions: {\n  //       maxFileSize: 1000000,\n  //       maxNumberOfFiles: 1,\n  //       allowedFileTypes: [\"image/*\"],\n  //     },\n  //   }).use(DragDrop, {\n  //     target: null,\n  //     width: \"100%\",\n  //     height: \"100%\",\n  //     note: null,\n  //     locale: {},\n  //   });\n  //   // .use(Webcam)\n  //   // .use(Instagram, {\n  //   //   companionUrl: process.env.REACT_APP_SERVER_URL,\n  //   // })\n  //   // .use(Url, {\n  //   //   companionUrl: process.env.REACT_APP_SERVER_URL,\n  //   // })\n  //   // .use(Transloadit, {\n  //   //   debug: true,\n  //   //   // signature: TRANSLOADIT_SECRET,\n  //   //   params: {\n  //   //     auth: {\n  //   //       // expires: dayjs().add(6, 'hour').format('YYYY/MM/DD HH:mm:ss+00:00'),\n  //   //       key: TRANSLOADIT_KEY,\n  //   //     },\n  //   //     template_id: TRANSLOADIT_TEMPLATE_ID,\n  //   //   },\n  //   // })\n  //   // .use(XHRUpload, {\n  //   //   endpoint: `${process.env.REACT_APP_SERVER_URL}/api/file/upload`,\n  //   // });\n\n  //   if (props.value) {\n  //     this.state = {\n  //       isUploaded: true,\n  //       uploadLabel: props.value.name,\n  //     };\n  //   } else {\n  //     this.state = EMPTY_STATE;\n  //   }\n  // }\n\n  // componentDidMount() {\n  //   const { onChange, name } = this.props;\n  //   this.uppy.on(\"transloadit:result\", (stepName, result) => {\n  //     const file = this.uppy.getFile(result.localId);\n  //     this.setState({\n  //       uploadLabel: file.name,\n  //       isUploaded: true,\n  //     });\n  //     onChange({\n  //       target: {\n  //         name,\n  //         value: {\n  //           src: file.response.uploadURL,\n  //           name: file.name,\n  //         },\n  //         getAttribute: () => false,\n  //       },\n  //     });\n  //     this.uppy.reset();\n  //     // this.context.closeModal()\n  //   });\n  // }\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (prevProps.value !== this.props.value && !this.props.value) {\n  //     this.setState(EMPTY_STATE);\n  //   }\n  // }\n\n  // componentWillUnmount() {\n  //   this.props.uppy.off(\"upload-success\");\n  //   this.props.uppy.close();\n  // }\n\n  // handleFile = (event) => {\n  //   const { isUploaded } = this.state\n  //   console.log(isUploaded)\n  //   this.setState({\n  //     // uploadLabel: file.name,\n  //     isUploaded: !isUploaded,\n  //   })\n  //   // this.context.openModalWith(\n  //     <Dashboard\n  //       uppy={this.props.uppy}\n  //       plugins={['Instagram', 'Webcam', 'Url']}\n  //       proudlyDisplayPoweredByUppy={false}\n  //       metaFields={[{ id: 'name', name: 'Name', placeholder: 'File name' }]}\n  //       browserBackButtonClose\n  //     />\n  //   )\n  // }\n\n  const uppy = useUppy(() => {\n    return new Uppy({\n      id: name,\n      autoProceed: true,\n      // locale: getUppyTranslations(language),\n      debug: true,\n      allowMultipleUploads: false,\n      restrictions: {\n        maxFileSize: 1000000,\n        maxNumberOfFiles: 1,\n        allowedFileTypes: [\"image/*\"],\n      },\n    }).use(DragDropModule, {\n      target: null,\n      width: \"100%\",\n      height: \"100%\",\n      note: null,\n    });\n  });\n\n  // const { name } = this.props;\n  // const { uploadLabel, isUploaded } = this.state;\n  console.log(uppy);\n  return (\n    <DragDrop\n      width=\"100%\"\n      height=\"100%\"\n      note=\"Images up to 200×200px\"\n      uppy={uppy}\n      // locale={{\n      //   strings: {\n      //     // Text to show on the droppable area.\n      //     // `%{browse}` is replaced with a link that opens the system file selection dialog.\n      //     dropHereOr: \"Drop here or %{browse}\",\n      //     // Used as the label for the link that opens the system file selection dialog.\n      //     browse: \"browse\",\n      //   },\n      // }}\n    />\n  );\n  // {/* <DashboardModal\n  //   uppy={this.uppy}\n  //   closeModalOnClickOutside\n  //   open={this.state.modalOpen}\n  //   onRequestClose={this.handleClose}\n  //   plugins={[\"Webcam\"]}\n  // /> */}\n  // {/* <Dashboard\n  //   uppy={this.uppy}\n  //   plugins={[\"Instagram\", \"Webcam\", \"Url\"]}\n  //   proudlyDisplayPoweredByUppy={false}\n  //   metaFields={[{ id: \"name\", name: \"Name\", placeholder: \"File name\" }]}\n  //   browserBackButtonClose\n  // /> */}\n};\n\nexport default FileInput;\n"]},"metadata":{},"sourceType":"module"}