{"ast":null,"code":"import _defineProperty from \"/Users/guillaumeesnault/Documents/Projects/pokemon-generator/client/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/guillaumeesnault/Documents/Projects/pokemon-generator/client/components/Select.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { useTheme } from \"@chakra-ui/react\";\nimport ReactSelect from \"react-select\";\nimport { useController } from \"react-hook-form\";\nimport dynamic from \"next/dynamic\";\n\nvar getStyle = function getStyle(theme, iconPath) {\n  var before = {\n    content: '\"\"',\n    display: \"inline-block\",\n    backgroundPosition: \"center\",\n    width: \"32px\",\n    height: \"32px\",\n    backgroundRepeat: \"no-repeat\"\n  };\n  return {\n    menuPortal: function menuPortal(base) {\n      return _objectSpread(_objectSpread({}, base), {}, {\n        zIndex: 9999\n      });\n    },\n    dropdownIndicator: function dropdownIndicator(base) {\n      return _objectSpread(_objectSpread({}, base), {}, {\n        color: \"white\",\n        \":hover\": {\n          color: \"rgb(255 255 255 / 80%)\"\n        }\n      });\n    },\n    clearIndicator: function clearIndicator(base) {\n      return _objectSpread(_objectSpread({}, base), {}, {\n        color: \"white\",\n        \":hover\": _objectSpread(_objectSpread({}, base[\":hover\"]), {}, {\n          cursor: \"pointer\"\n        })\n      });\n    },\n    indicatorSeparator: function indicatorSeparator(base) {\n      return _objectSpread(_objectSpread({}, base), {}, {\n        backgroundColor: \"white\"\n      });\n    },\n    singleValue: function singleValue(base) {\n      return _objectSpread(_objectSpread({}, base), {}, {\n        color: \"white\",\n        fontWeight: \"500\"\n      });\n    },\n    menu: function menu(base) {\n      return _objectSpread(_objectSpread({}, base), {}, {\n        zIndex: \"999\",\n        backgroundColor: \"rgb(99 98 98 / 83%)\",\n        backdropFilter: \"blur(159px) saturate(160%)\"\n      });\n    },\n    control: function control(styles, _ref) {\n      var getValue = _ref.getValue,\n          isFocused = _ref.isFocused;\n      var value = getValue();\n      return _objectSpread(_objectSpread(_objectSpread({}, styles), {}, {\n        color: \"white\",\n        textTransform: \"capitalize\",\n        transition: \"border-color 200ms\",\n        boxShadow: isFocused ? \"0px 0px 2px #868686\" : \"none\",\n        border: isFocused ? \"1px solid #cacaca\" : \"1px solid rgb(255 255 255 / 30%)\",\n        backgroundColor: \"rgb(255 255 255 / 30%)\",\n        borderRadius: theme.radii.md,\n        height: \"40px\"\n      }, iconPath && value.length > 0 ? {\n        \":before\": _objectSpread(_objectSpread({}, before), {}, {\n          marginLeft: \"8px\",\n          backgroundImage: \"url(/assets/img/1-gen/\".concat(iconPath.replace(\"{{value}}\", value[0].value), \")\")\n        })\n      } : {}), {}, {\n        \":hover\": {\n          borderColor: \"white\"\n        }\n      });\n    },\n    option: function option(styles, _ref2) {\n      var data = _ref2.data,\n          isSelected = _ref2.isSelected;\n      return _objectSpread(_objectSpread({}, styles), {}, {\n        textTransform: \"capitalize\",\n        display: \"flex\",\n        alignItems: \"center\",\n        color: \"white\",\n        backgroundColor: isSelected ? \"#c8aaff\" : \"transparent\",\n        \":hover\": {\n          backgroundColor: isSelected ? \"#c8aaff\" : \"rgb(255 255 255 / 30%)\"\n        },\n        \":before\": iconPath ? _objectSpread(_objectSpread({}, before), {}, {\n          marginRight: \"10px\",\n          backgroundImage: \"url(/assets/img/1-gen/\".concat(iconPath.replace(\"{{value}}\", data.value), \")\"),\n          borderRadius: theme.radii.md\n        }) : {}\n      });\n    }\n  };\n};\n\nvar Select = function Select(_ref3) {\n  _s();\n\n  var name = _ref3.name,\n      control = _ref3.control,\n      options = _ref3.options,\n      _ref3$placeholder = _ref3.placeholder,\n      placeholder = _ref3$placeholder === void 0 ? \"\" : _ref3$placeholder,\n      _ref3$iconPath = _ref3.iconPath,\n      iconPath = _ref3$iconPath === void 0 ? null : _ref3$iconPath,\n      _ref3$isClearable = _ref3.isClearable,\n      isClearable = _ref3$isClearable === void 0 ? false : _ref3$isClearable;\n  var theme = useTheme();\n\n  var _useController = useController({\n    name: name,\n    control: control\n  }),\n      field = _useController.field;\n\n  var onChange = function onChange(data) {\n    field.onChange((data === null || data === void 0 ? void 0 : data.value) || \"\");\n  };\n\n  return __jsx(ReactSelect, {\n    name: name,\n    placeholder: placeholder,\n    options: options,\n    styles: getStyle(theme, iconPath),\n    onChange: onChange,\n    isClearable: isClearable,\n    menuPortalTarget: document.body,\n    menuPlacement: \"auto\",\n    defaultValue: Boolean(field.value) ? {\n      value: field.value,\n      label: field.value\n    } : null // menuIsOpen\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  });\n};\n\n_s(Select, \"8TpeP2mrnR8SG9+iKCvXgurWuRA=\", false, function () {\n  return [useTheme, useController];\n});\n\n_c = Select;\nexport default _c3 = dynamic(_c2 = function _c2() {\n  return Promise.resolve(Select);\n}, {\n  ssr: false\n});\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Select\");\n$RefreshReg$(_c2, \"%default%$dynamic\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["/Users/guillaumeesnault/Documents/Projects/pokemon-generator/client/components/Select.tsx"],"names":["React","useTheme","ReactSelect","useController","dynamic","getStyle","theme","iconPath","before","content","display","backgroundPosition","width","height","backgroundRepeat","menuPortal","base","zIndex","dropdownIndicator","color","clearIndicator","cursor","indicatorSeparator","backgroundColor","singleValue","fontWeight","menu","backdropFilter","control","styles","getValue","isFocused","value","textTransform","transition","boxShadow","border","borderRadius","radii","md","length","marginLeft","backgroundImage","replace","borderColor","option","data","isSelected","alignItems","marginRight","Select","name","options","placeholder","isClearable","field","onChange","document","body","Boolean","label","Promise","resolve","ssr"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useTheme } from \"@chakra-ui/react\";\nimport ReactSelect from \"react-select\";\nimport { useController } from \"react-hook-form\";\nimport dynamic from \"next/dynamic\";\n\nconst getStyle = (theme, iconPath) => {\n  const before = {\n    content: '\"\"',\n    display: \"inline-block\",\n    backgroundPosition: \"center\",\n    width: \"32px\",\n    height: \"32px\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  return {\n    menuPortal: (base) => ({ ...base, zIndex: 9999 }),\n    dropdownIndicator: (base) => ({\n      ...base,\n      color: \"white\",\n      \":hover\": {\n        color: \"rgb(255 255 255 / 80%)\",\n      },\n    }),\n    clearIndicator: (base) => ({\n      ...base,\n      color: \"white\",\n      \":hover\": { ...base[\":hover\"], cursor: \"pointer\" },\n    }),\n    indicatorSeparator: (base) => ({ ...base, backgroundColor: \"white\" }),\n    singleValue: (base) => ({ ...base, color: \"white\", fontWeight: \"500\" }),\n    menu: (base) => ({\n      ...base,\n      zIndex: \"999\",\n      backgroundColor: \"rgb(99 98 98 / 83%)\",\n      backdropFilter: \"blur(159px) saturate(160%)\",\n    }),\n    control: (styles, { getValue, isFocused }) => {\n      const value = getValue();\n\n      return {\n        ...styles,\n        color: \"white\",\n        textTransform: \"capitalize\",\n        transition: \"border-color 200ms\",\n        boxShadow: isFocused ? \"0px 0px 2px #868686\" : \"none\",\n        border: isFocused\n          ? \"1px solid #cacaca\"\n          : \"1px solid rgb(255 255 255 / 30%)\",\n        backgroundColor: \"rgb(255 255 255 / 30%)\",\n        borderRadius: theme.radii.md,\n        height: \"40px\",\n        ...(iconPath && value.length > 0\n          ? {\n              \":before\": {\n                ...before,\n                marginLeft: \"8px\",\n                backgroundImage: `url(/assets/img/1-gen/${iconPath.replace(\n                  \"{{value}}\",\n                  value[0].value\n                )})`,\n              },\n            }\n          : {}),\n        \":hover\": {\n          borderColor: \"white\",\n        },\n      };\n    },\n    option: (styles, { data, isSelected }) => {\n      return {\n        ...styles,\n        textTransform: \"capitalize\",\n        display: \"flex\",\n        alignItems: \"center\",\n        color: \"white\",\n        backgroundColor: isSelected ? \"#c8aaff\" : \"transparent\",\n        \":hover\": {\n          backgroundColor: isSelected ? \"#c8aaff\" : \"rgb(255 255 255 / 30%)\",\n        },\n        \":before\": iconPath\n          ? {\n              ...before,\n              marginRight: \"10px\",\n              backgroundImage: `url(/assets/img/1-gen/${iconPath.replace(\n                \"{{value}}\",\n                data.value\n              )})`,\n              borderRadius: theme.radii.md,\n            }\n          : {},\n      };\n    },\n  };\n};\nconst Select = ({\n  name,\n  control,\n  options,\n  placeholder = \"\",\n  iconPath = null,\n  isClearable = false,\n}) => {\n  const theme = useTheme();\n  const { field } = useController({\n    name,\n    control,\n  });\n\n  const onChange = (data) => {\n    field.onChange(data?.value || \"\");\n  };\n\n  return (\n    <ReactSelect\n      name={name}\n      placeholder={placeholder}\n      options={options}\n      styles={getStyle(theme, iconPath)}\n      onChange={onChange}\n      isClearable={isClearable}\n      menuPortalTarget={document.body}\n      menuPlacement=\"auto\"\n      defaultValue={\n        Boolean(field.value) ? { value: field.value, label: field.value } : null\n      }\n      // menuIsOpen\n    />\n  );\n};\n\nexport default dynamic(() => Promise.resolve(Select), {\n  ssr: false,\n});\n"]},"metadata":{},"sourceType":"module"}