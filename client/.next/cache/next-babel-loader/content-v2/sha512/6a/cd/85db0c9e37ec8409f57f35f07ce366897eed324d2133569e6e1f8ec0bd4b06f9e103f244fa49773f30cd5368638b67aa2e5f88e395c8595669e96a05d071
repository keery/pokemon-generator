{"ast":null,"code":"var _jsxFileName = \"/Users/guillaumeesnault/Documents/Projects/pokemon-generator/client/components/Select.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { useTheme } from \"@chakra-ui/react\";\nimport ReactSelect from \"react-select\";\nimport { useController } from \"react-hook-form\";\n\nconst getStyle = (theme, iconPath) => {\n  const before = {\n    content: '\"\"',\n    display: \"inline-block\",\n    backgroundPosition: \"center\",\n    width: \"32px\",\n    height: \"32px\",\n    backgroundRepeat: \"no-repeat\"\n  };\n  return {\n    menuPortal: base => _objectSpread(_objectSpread({}, base), {}, {\n      zIndex: 9999\n    }),\n    dropdownIndicator: base => _objectSpread(_objectSpread({}, base), {}, {\n      color: \"white\"\n    }),\n    indicatorSeparator: base => _objectSpread(_objectSpread({}, base), {}, {\n      backgroundColor: \"white\"\n    }),\n    menu: base => _objectSpread(_objectSpread({}, base), {}, {\n      backgroundColor: \"rgb(99 98 98 / 83%)\",\n      backdropFilter: \"blur(159px) saturate(160%)\"\n    }),\n    control: (styles, {\n      getValue\n    }) => {\n      const value = getValue();\n      return _objectSpread(_objectSpread(_objectSpread({}, styles), {}, {\n        textTransform: \"capitalize\",\n        border: \"1px solid rgb(255 255 255 / 30%)\",\n        backgroundColor: \"rgb(255 255 255 / 30%)\",\n        borderRadius: theme.radii.md,\n        height: \"40px\"\n      }, iconPath && value.length > 0 ? {\n        \":before\": _objectSpread(_objectSpread({}, before), {}, {\n          marginLeft: \"8px\",\n          backgroundImage: `url(/assets/img/1-gen/${iconPath.replace(\"{{value}}\", value[0].value)})`\n        })\n      } : {}), {}, {\n        \":hover\": {\n          borderColor: theme.colors.gray[\"300\"]\n        }\n      });\n    },\n    option: (styles, {\n      data,\n      isSelected\n    }) => {\n      return _objectSpread(_objectSpread({}, styles), {}, {\n        textTransform: \"capitalize\",\n        display: \"flex\",\n        alignItems: \"center\",\n        backgroundColor: isSelected ? \"#c8aaff\" : styles.backgroundColor,\n        \":hover\": {\n          backgroundColor: isSelected ? \"#c8aaff\" : \"rgb(255 255 255 / 30%)\"\n        },\n        \":before\": iconPath ? _objectSpread(_objectSpread({}, before), {}, {\n          marginRight: \"10px\",\n          backgroundImage: `url(/assets/img/1-gen/${iconPath.replace(\"{{value}}\", data.value)})`,\n          borderRadius: theme.radii.md\n        }) : {}\n      });\n    }\n  };\n};\n\nconst Select = ({\n  name,\n  control,\n  options,\n  placeholder = \"\",\n  iconPath = null,\n  isClearable = false\n}) => {\n  const theme = useTheme();\n  const {\n    field\n  } = useController({\n    name,\n    control\n  });\n\n  const onChange = data => {\n    field.onChange((data === null || data === void 0 ? void 0 : data.value) || \"\");\n  };\n\n  return __jsx(ReactSelect, {\n    name: name,\n    placeholder: placeholder,\n    options: options,\n    styles: getStyle(theme, iconPath),\n    onChange: onChange,\n    isClearable: isClearable // menuPortalTarget={document.body}\n    ,\n    menuPlacement: \"auto\",\n    defaultValue: Boolean(field.value) ? {\n      value: field.value,\n      label: field.value\n    } : null // menuIsOpen\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default Select;","map":{"version":3,"sources":["/Users/guillaumeesnault/Documents/Projects/pokemon-generator/client/components/Select.tsx"],"names":["React","useTheme","ReactSelect","useController","getStyle","theme","iconPath","before","content","display","backgroundPosition","width","height","backgroundRepeat","menuPortal","base","zIndex","dropdownIndicator","color","indicatorSeparator","backgroundColor","menu","backdropFilter","control","styles","getValue","value","textTransform","border","borderRadius","radii","md","length","marginLeft","backgroundImage","replace","borderColor","colors","gray","option","data","isSelected","alignItems","marginRight","Select","name","options","placeholder","isClearable","field","onChange","Boolean","label"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useTheme } from \"@chakra-ui/react\";\nimport ReactSelect from \"react-select\";\nimport { useController } from \"react-hook-form\";\n\nconst getStyle = (theme, iconPath) => {\n  const before = {\n    content: '\"\"',\n    display: \"inline-block\",\n    backgroundPosition: \"center\",\n    width: \"32px\",\n    height: \"32px\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  return {\n    menuPortal: (base) => ({ ...base, zIndex: 9999 }),\n    dropdownIndicator: (base) => ({ ...base, color: \"white\" }),\n    indicatorSeparator: (base) => ({ ...base, backgroundColor: \"white\" }),\n    menu: (base) => ({\n      ...base,\n      backgroundColor: \"rgb(99 98 98 / 83%)\",\n      backdropFilter: \"blur(159px) saturate(160%)\",\n    }),\n    control: (styles, { getValue }) => {\n      const value = getValue();\n      return {\n        ...styles,\n        textTransform: \"capitalize\",\n        border: \"1px solid rgb(255 255 255 / 30%)\",\n        backgroundColor: \"rgb(255 255 255 / 30%)\",\n        borderRadius: theme.radii.md,\n        height: \"40px\",\n        ...(iconPath && value.length > 0\n          ? {\n              \":before\": {\n                ...before,\n                marginLeft: \"8px\",\n                backgroundImage: `url(/assets/img/1-gen/${iconPath.replace(\n                  \"{{value}}\",\n                  value[0].value\n                )})`,\n              },\n            }\n          : {}),\n        \":hover\": {\n          borderColor: theme.colors.gray[\"300\"],\n        },\n      };\n    },\n    option: (styles, { data, isSelected }) => {\n      return {\n        ...styles,\n        textTransform: \"capitalize\",\n        display: \"flex\",\n        alignItems: \"center\",\n        backgroundColor: isSelected ? \"#c8aaff\" : styles.backgroundColor,\n        \":hover\": {\n          backgroundColor: isSelected ? \"#c8aaff\" : \"rgb(255 255 255 / 30%)\",\n        },\n        \":before\": iconPath\n          ? {\n              ...before,\n              marginRight: \"10px\",\n              backgroundImage: `url(/assets/img/1-gen/${iconPath.replace(\n                \"{{value}}\",\n                data.value\n              )})`,\n              borderRadius: theme.radii.md,\n            }\n          : {},\n      };\n    },\n  };\n};\nconst Select = ({\n  name,\n  control,\n  options,\n  placeholder = \"\",\n  iconPath = null,\n  isClearable = false,\n}) => {\n  const theme = useTheme();\n  const { field } = useController({\n    name,\n    control,\n  });\n\n  const onChange = (data) => {\n    field.onChange(data?.value || \"\");\n  };\n\n  return (\n    <ReactSelect\n      name={name}\n      placeholder={placeholder}\n      options={options}\n      styles={getStyle(theme, iconPath)}\n      onChange={onChange}\n      isClearable={isClearable}\n      // menuPortalTarget={document.body}\n      menuPlacement=\"auto\"\n      defaultValue={\n        Boolean(field.value) ? { value: field.value, label: field.value } : null\n      }\n      // menuIsOpen\n    />\n  );\n};\n\nexport default Select;\n"]},"metadata":{},"sourceType":"module"}