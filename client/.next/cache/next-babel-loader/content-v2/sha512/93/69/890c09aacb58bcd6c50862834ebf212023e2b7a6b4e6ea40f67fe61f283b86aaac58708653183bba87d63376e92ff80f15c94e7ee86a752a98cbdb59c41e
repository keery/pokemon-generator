{"ast":null,"code":"var _jsxFileName = \"/Users/guillaumeesnault/Documents/Projects/pokemon-generator/client/components/Card/TypeWithAmount.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useWatch } from \"react-hook-form\";\nimport { Text, Group, Image as ImageCanvas } from \"react-konva\";\n\nconst TypeWithAmount = ({\n  control,\n  name,\n  x = 0,\n  y = 0\n}) => {\n  const values = useWatch({\n    control,\n    name: [`${name}Amount`, `${name}Type`]\n  });\n  const type = values[`${name}Type`];\n  const amount = values[`${name}Amount`];\n  console.log(\"dsfsd\", type);\n  return __jsx(Group, {\n    x: x,\n    y: y,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, type && __jsx(ImageCanvas, {\n    image: type,\n    x: 27,\n    y: 0,\n    width: 58,\n    height: 58,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }\n  }), Boolean(amount) && __jsx(Text, {\n    text: amount,\n    fontFamily: \"pokename\",\n    fontSize: 15,\n    y: 25,\n    x: 73,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default TypeWithAmount;","map":{"version":3,"sources":["/Users/guillaumeesnault/Documents/Projects/pokemon-generator/client/components/Card/TypeWithAmount.tsx"],"names":["React","useWatch","Text","Group","Image","ImageCanvas","TypeWithAmount","control","name","x","y","values","type","amount","console","log","Boolean"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,KAAK,IAAIC,WAA/B,QAAkD,aAAlD;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,IAAX;AAAiBC,EAAAA,CAAC,GAAG,CAArB;AAAwBC,EAAAA,CAAC,GAAG;AAA5B,CAAD,KAAqC;AAC1D,QAAMC,MAAM,GAAGV,QAAQ,CAAC;AACtBM,IAAAA,OADsB;AAEtBC,IAAAA,IAAI,EAAE,CAAE,GAAEA,IAAK,QAAT,EAAmB,GAAEA,IAAK,MAA1B;AAFgB,GAAD,CAAvB;AAKA,QAAMI,IAAI,GAAGD,MAAM,CAAE,GAAEH,IAAK,MAAT,CAAnB;AACA,QAAMK,MAAM,GAAGF,MAAM,CAAE,GAAEH,IAAK,QAAT,CAArB;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,IAArB;AAEA,SACE,MAAC,KAAD;AAAO,IAAA,CAAC,EAAEH,CAAV;AAAa,IAAA,CAAC,EAAEC,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,IAAI,IAAI,MAAC,WAAD;AAAa,IAAA,KAAK,EAAEA,IAApB;AAA0B,IAAA,CAAC,EAAE,EAA7B;AAAiC,IAAA,CAAC,EAAE,CAApC;AAAuC,IAAA,KAAK,EAAE,EAA9C;AAAkD,IAAA,MAAM,EAAE,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADX,EAEGI,OAAO,CAACH,MAAD,CAAP,IACC,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,MAAZ;AAAoB,IAAA,UAAU,EAAC,UAA/B;AAA0C,IAAA,QAAQ,EAAE,EAApD;AAAwD,IAAA,CAAC,EAAE,EAA3D;AAA+D,IAAA,CAAC,EAAE,EAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADF;AAQD,CAlBD;;AAoBA,eAAeP,cAAf","sourcesContent":["import React from \"react\";\nimport { useWatch } from \"react-hook-form\";\nimport { Text, Group, Image as ImageCanvas } from \"react-konva\";\n\nconst TypeWithAmount = ({ control, name, x = 0, y = 0 }) => {\n  const values = useWatch({\n    control,\n    name: [`${name}Amount`, `${name}Type`],\n  });\n\n  const type = values[`${name}Type`];\n  const amount = values[`${name}Amount`];\n  console.log(\"dsfsd\", type);\n\n  return (\n    <Group x={x} y={y}>\n      {type && <ImageCanvas image={type} x={27} y={0} width={58} height={58} />}\n      {Boolean(amount) && (\n        <Text text={amount} fontFamily=\"pokename\" fontSize={15} y={25} x={73} />\n      )}\n    </Group>\n  );\n};\n\nexport default TypeWithAmount;\n"]},"metadata":{},"sourceType":"module"}