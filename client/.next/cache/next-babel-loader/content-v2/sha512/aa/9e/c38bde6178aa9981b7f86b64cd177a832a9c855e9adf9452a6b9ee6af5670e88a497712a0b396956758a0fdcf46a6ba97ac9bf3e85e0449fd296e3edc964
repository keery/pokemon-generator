{"ast":null,"code":"var _jsxFileName = \"/Users/guillaumeesnault/Documents/Projects/pokemon-generator/client/components/FileInput.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Uppy from \"@uppy/core\";\nimport Url from \"@uppy/url\";\nimport DragDropModule from \"@uppy/drag-drop\";\nimport { Dashboard, useUppy } from \"@uppy/react\";\nimport Webcam from \"@uppy/webcam\";\nimport Instagram from \"@uppy/instagram\";\nimport French from \"@uppy/locales/lib/fr_FR\";\nimport Spanish from \"@uppy/locales/lib/es_ES\";\nimport Modal from \"~components/Modal\"; // import { FaCloudUploadAlt } from 'react-icons/fa'\n\nvar EMPTY_STATE = {\n  isUploaded: false,\n  uploadLabel: \"\"\n};\n\nvar getUppyTranslations = function getUppyTranslations(locale) {\n  switch (locale) {\n    case \"fr\":\n      return French;\n\n    case \"es\":\n      return Spanish;\n\n    default:\n      return false;\n  }\n};\n\nvar TRANSLOADIT_KEY = \"be3e863775b14553a504aaa98ca3c32c\";\nvar TRANSLOADIT_SECRET = \"bf39fb91c830d0a63f1e7880508d4f79c4bc1075\";\nvar TRANSLOADIT_TEMPLATE_ID = \"2451e3544cfd4eb29688983b6c7e8956\";\n\nvar FileInput = function FileInput(_ref) {\n  _s();\n\n  var name = _ref.name;\n  // constructor(props) {\n  //   super(props);\n  //   this.uppy = new Uppy({\n  //     id: props.name,\n  //     autoProceed: true,\n  //     // locale: getUppyTranslations(language),\n  //     debug: true,\n  //     allowMultipleUploads: false,\n  //     restrictions: {\n  //       maxFileSize: 1000000,\n  //       maxNumberOfFiles: 1,\n  //       allowedFileTypes: [\"image/*\"],\n  //     },\n  //   }).use(DragDrop, {\n  //     target: null,\n  //     width: \"100%\",\n  //     height: \"100%\",\n  //     note: null,\n  //     locale: {},\n  //   });\n  //   // .use(Webcam)\n  //   // .use(Instagram, {\n  //   //   companionUrl: process.env.REACT_APP_SERVER_URL,\n  //   // })\n  //   // .use(Url, {\n  //   //   companionUrl: process.env.REACT_APP_SERVER_URL,\n  //   // })\n  //   // .use(Transloadit, {\n  //   //   debug: true,\n  //   //   // signature: TRANSLOADIT_SECRET,\n  //   //   params: {\n  //   //     auth: {\n  //   //       // expires: dayjs().add(6, 'hour').format('YYYY/MM/DD HH:mm:ss+00:00'),\n  //   //       key: TRANSLOADIT_KEY,\n  //   //     },\n  //   //     template_id: TRANSLOADIT_TEMPLATE_ID,\n  //   //   },\n  //   // })\n  //   // .use(XHRUpload, {\n  //   //   endpoint: `${process.env.REACT_APP_SERVER_URL}/api/file/upload`,\n  //   // });\n  //   if (props.value) {\n  //     this.state = {\n  //       isUploaded: true,\n  //       uploadLabel: props.value.name,\n  //     };\n  //   } else {\n  //     this.state = EMPTY_STATE;\n  //   }\n  // }\n  // componentDidMount() {\n  //   const { onChange, name } = this.props;\n  //   this.uppy.on(\"transloadit:result\", (stepName, result) => {\n  //     const file = this.uppy.getFile(result.localId);\n  //     this.setState({\n  //       uploadLabel: file.name,\n  //       isUploaded: true,\n  //     });\n  //     onChange({\n  //       target: {\n  //         name,\n  //         value: {\n  //           src: file.response.uploadURL,\n  //           name: file.name,\n  //         },\n  //         getAttribute: () => false,\n  //       },\n  //     });\n  //     this.uppy.reset();\n  //     // this.context.closeModal()\n  //   });\n  // }\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (prevProps.value !== this.props.value && !this.props.value) {\n  //     this.setState(EMPTY_STATE);\n  //   }\n  // }\n  // componentWillUnmount() {\n  //   this.props.uppy.off(\"upload-success\");\n  //   this.props.uppy.close();\n  // }\n  // handleFile = (event) => {\n  //   const { isUploaded } = this.state\n  //   console.log(isUploaded)\n  //   this.setState({\n  //     // uploadLabel: file.name,\n  //     isUploaded: !isUploaded,\n  //   })\n  //   // this.context.openModalWith(\n  //     <Dashboard\n  //       uppy={this.props.uppy}\n  //       plugins={['Instagram', 'Webcam', 'Url']}\n  //       proudlyDisplayPoweredByUppy={false}\n  //       metaFields={[{ id: 'name', name: 'Name', placeholder: 'File name' }]}\n  //       browserBackButtonClose\n  //     />\n  //   )\n  // }\n  var uppy = useUppy(function () {\n    return new Uppy({\n      id: name,\n      autoProceed: true,\n      // locale: getUppyTranslations(language),\n      debug: true,\n      allowMultipleUploads: false,\n      restrictions: {\n        maxFileSize: 1000000,\n        maxNumberOfFiles: 1,\n        allowedFileTypes: [\"image/*\"]\n      }\n    }).use(DragDropModule, {\n      target: null,\n      width: \"100%\",\n      height: \"100%\",\n      note: null\n    }).use(Webcam).use(Instagram, {\n      companionUrl: process.env.REACT_APP_SERVER_URL\n    }).use(Url, {\n      companionUrl: process.env.REACT_APP_SERVER_URL\n    });\n  }); // const { name } = this.props;\n  // const { uploadLabel, isUploaded } = this.state;\n\n  console.log(uppy);\n  return __jsx(Modal, {\n    button: __jsx(\"button\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 20\n      }\n    }, \"qskdfjls\"),\n    size: \"xl\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 5\n    }\n  }, __jsx(Dashboard, {\n    uppy: uppy,\n    plugins: [\"Instagram\", \"Webcam\", \"Url\"],\n    proudlyDisplayPoweredByUppy: false,\n    metaFields: [{\n      id: \"name\",\n      name: \"Name\",\n      placeholder: \"File name\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  })); // {/* <DashboardModal\n  //   uppy={this.uppy}\n  //   closeModalOnClickOutside\n  //   open={this.state.modalOpen}\n  //   onRequestClose={this.handleClose}\n  //   plugins={[\"Webcam\"]}\n  // /> */}\n};\n\n_s(FileInput, \"RKW0ukCrFOPgqNdMFmVsYP6kVAA=\", false, function () {\n  return [useUppy];\n});\n\n_c = FileInput;\nexport default FileInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileInput\");","map":{"version":3,"sources":["/Users/guillaumeesnault/Documents/Projects/pokemon-generator/client/components/FileInput.tsx"],"names":["React","Uppy","Url","DragDropModule","Dashboard","useUppy","Webcam","Instagram","French","Spanish","Modal","EMPTY_STATE","isUploaded","uploadLabel","getUppyTranslations","locale","TRANSLOADIT_KEY","TRANSLOADIT_SECRET","TRANSLOADIT_TEMPLATE_ID","FileInput","name","uppy","id","autoProceed","debug","allowMultipleUploads","restrictions","maxFileSize","maxNumberOfFiles","allowedFileTypes","use","target","width","height","note","companionUrl","process","env","REACT_APP_SERVER_URL","console","log","placeholder"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAA2C,OAA3C;AAGA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,cAAP,MAA2B,iBAA3B;AACA,SAASC,SAAT,EAA8CC,OAA9C,QAA6D,aAA7D;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AAGA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,KAAP,MAAkB,mBAAlB,C,CACA;;AAEA,IAAMC,WAAW,GAAG;AAClBC,EAAAA,UAAU,EAAE,KADM;AAElBC,EAAAA,WAAW,EAAE;AAFK,CAApB;;AAKA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,MAAD,EAAY;AACtC,UAAQA,MAAR;AACE,SAAK,IAAL;AACE,aAAOP,MAAP;;AACF,SAAK,IAAL;AACE,aAAOC,OAAP;;AACF;AACE,aAAO,KAAP;AANJ;AAQD,CATD;;AAWA,IAAMO,eAAe,GAAG,kCAAxB;AACA,IAAMC,kBAAkB,GAAG,0CAA3B;AACA,IAAMC,uBAAuB,GAAG,kCAAhC;;AAMA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC9B;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMC,IAAI,GAAGhB,OAAO,CAAC,YAAM;AACzB,WAAO,IAAIJ,IAAJ,CAAS;AACdqB,MAAAA,EAAE,EAAEF,IADU;AAEdG,MAAAA,WAAW,EAAE,IAFC;AAGd;AACAC,MAAAA,KAAK,EAAE,IAJO;AAKdC,MAAAA,oBAAoB,EAAE,KALR;AAMdC,MAAAA,YAAY,EAAE;AACZC,QAAAA,WAAW,EAAE,OADD;AAEZC,QAAAA,gBAAgB,EAAE,CAFN;AAGZC,QAAAA,gBAAgB,EAAE,CAAC,SAAD;AAHN;AANA,KAAT,EAYJC,GAZI,CAYA3B,cAZA,EAYgB;AACnB4B,MAAAA,MAAM,EAAE,IADW;AAEnBC,MAAAA,KAAK,EAAE,MAFY;AAGnBC,MAAAA,MAAM,EAAE,MAHW;AAInBC,MAAAA,IAAI,EAAE;AAJa,KAZhB,EAkBJJ,GAlBI,CAkBAxB,MAlBA,EAmBJwB,GAnBI,CAmBAvB,SAnBA,EAmBW;AACd4B,MAAAA,YAAY,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADZ,KAnBX,EAsBJR,GAtBI,CAsBA5B,GAtBA,EAsBK;AACRiC,MAAAA,YAAY,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADlB,KAtBL,CAAP;AAyBD,GA1BmB,CAApB,CA1G8B,CAsI9B;AACA;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYnB,IAAZ;AACA,SACE,MAAC,KAAD;AAAO,IAAA,MAAM,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAf;AAA0C,IAAA,IAAI,EAAC,IAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,IAAI,EAAEA,IADR;AAEE,IAAA,OAAO,EAAE,CAAC,WAAD,EAAc,QAAd,EAAwB,KAAxB,CAFX;AAGE,IAAA,2BAA2B,EAAE,KAH/B;AAIE,IAAA,UAAU,EAAE,CAAC;AAAEC,MAAAA,EAAE,EAAE,MAAN;AAAcF,MAAAA,IAAI,EAAE,MAApB;AAA4BqB,MAAAA,WAAW,EAAE;AAAzC,KAAD,CAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAzI8B,CAmJ9B;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CA1JD;;GAAMtB,S;UA0GSd,O;;;KA1GTc,S;AA4JN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { withTranslation, getI18n } from \"react-i18next\";\nimport { Box, Text, Icon } from \"@chakra-ui/react\";\nimport Uppy from \"@uppy/core\";\nimport Url from \"@uppy/url\";\nimport DragDropModule from \"@uppy/drag-drop\";\nimport { Dashboard, DashboardModal, DragDrop, useUppy } from \"@uppy/react\";\nimport Webcam from \"@uppy/webcam\";\nimport Instagram from \"@uppy/instagram\";\nimport Transloadit from \"@uppy/transloadit\";\nimport XHRUpload from \"@uppy/xhr-upload\";\nimport French from \"@uppy/locales/lib/fr_FR\";\nimport Spanish from \"@uppy/locales/lib/es_ES\";\nimport Modal from \"~components/Modal\";\n// import { FaCloudUploadAlt } from 'react-icons/fa'\n\nconst EMPTY_STATE = {\n  isUploaded: false,\n  uploadLabel: \"\",\n};\n\nconst getUppyTranslations = (locale) => {\n  switch (locale) {\n    case \"fr\":\n      return French;\n    case \"es\":\n      return Spanish;\n    default:\n      return false;\n  }\n};\n\nconst TRANSLOADIT_KEY = \"be3e863775b14553a504aaa98ca3c32c\";\nconst TRANSLOADIT_SECRET = \"bf39fb91c830d0a63f1e7880508d4f79c4bc1075\";\nconst TRANSLOADIT_TEMPLATE_ID = \"2451e3544cfd4eb29688983b6c7e8956\";\n\ninterface Props {\n  name: string;\n}\n\nconst FileInput = ({ name }) => {\n  // constructor(props) {\n  //   super(props);\n\n  //   this.uppy = new Uppy({\n  //     id: props.name,\n  //     autoProceed: true,\n  //     // locale: getUppyTranslations(language),\n  //     debug: true,\n  //     allowMultipleUploads: false,\n  //     restrictions: {\n  //       maxFileSize: 1000000,\n  //       maxNumberOfFiles: 1,\n  //       allowedFileTypes: [\"image/*\"],\n  //     },\n  //   }).use(DragDrop, {\n  //     target: null,\n  //     width: \"100%\",\n  //     height: \"100%\",\n  //     note: null,\n  //     locale: {},\n  //   });\n  //   // .use(Webcam)\n  //   // .use(Instagram, {\n  //   //   companionUrl: process.env.REACT_APP_SERVER_URL,\n  //   // })\n  //   // .use(Url, {\n  //   //   companionUrl: process.env.REACT_APP_SERVER_URL,\n  //   // })\n  //   // .use(Transloadit, {\n  //   //   debug: true,\n  //   //   // signature: TRANSLOADIT_SECRET,\n  //   //   params: {\n  //   //     auth: {\n  //   //       // expires: dayjs().add(6, 'hour').format('YYYY/MM/DD HH:mm:ss+00:00'),\n  //   //       key: TRANSLOADIT_KEY,\n  //   //     },\n  //   //     template_id: TRANSLOADIT_TEMPLATE_ID,\n  //   //   },\n  //   // })\n  //   // .use(XHRUpload, {\n  //   //   endpoint: `${process.env.REACT_APP_SERVER_URL}/api/file/upload`,\n  //   // });\n\n  //   if (props.value) {\n  //     this.state = {\n  //       isUploaded: true,\n  //       uploadLabel: props.value.name,\n  //     };\n  //   } else {\n  //     this.state = EMPTY_STATE;\n  //   }\n  // }\n\n  // componentDidMount() {\n  //   const { onChange, name } = this.props;\n  //   this.uppy.on(\"transloadit:result\", (stepName, result) => {\n  //     const file = this.uppy.getFile(result.localId);\n  //     this.setState({\n  //       uploadLabel: file.name,\n  //       isUploaded: true,\n  //     });\n  //     onChange({\n  //       target: {\n  //         name,\n  //         value: {\n  //           src: file.response.uploadURL,\n  //           name: file.name,\n  //         },\n  //         getAttribute: () => false,\n  //       },\n  //     });\n  //     this.uppy.reset();\n  //     // this.context.closeModal()\n  //   });\n  // }\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (prevProps.value !== this.props.value && !this.props.value) {\n  //     this.setState(EMPTY_STATE);\n  //   }\n  // }\n\n  // componentWillUnmount() {\n  //   this.props.uppy.off(\"upload-success\");\n  //   this.props.uppy.close();\n  // }\n\n  // handleFile = (event) => {\n  //   const { isUploaded } = this.state\n  //   console.log(isUploaded)\n  //   this.setState({\n  //     // uploadLabel: file.name,\n  //     isUploaded: !isUploaded,\n  //   })\n  //   // this.context.openModalWith(\n  //     <Dashboard\n  //       uppy={this.props.uppy}\n  //       plugins={['Instagram', 'Webcam', 'Url']}\n  //       proudlyDisplayPoweredByUppy={false}\n  //       metaFields={[{ id: 'name', name: 'Name', placeholder: 'File name' }]}\n  //       browserBackButtonClose\n  //     />\n  //   )\n  // }\n\n  const uppy = useUppy(() => {\n    return new Uppy({\n      id: name,\n      autoProceed: true,\n      // locale: getUppyTranslations(language),\n      debug: true,\n      allowMultipleUploads: false,\n      restrictions: {\n        maxFileSize: 1000000,\n        maxNumberOfFiles: 1,\n        allowedFileTypes: [\"image/*\"],\n      },\n    })\n      .use(DragDropModule, {\n        target: null,\n        width: \"100%\",\n        height: \"100%\",\n        note: null,\n      })\n      .use(Webcam)\n      .use(Instagram, {\n        companionUrl: process.env.REACT_APP_SERVER_URL,\n      })\n      .use(Url, {\n        companionUrl: process.env.REACT_APP_SERVER_URL,\n      });\n  });\n\n  // const { name } = this.props;\n  // const { uploadLabel, isUploaded } = this.state;\n  console.log(uppy);\n  return (\n    <Modal button={<button>qskdfjls</button>} size=\"xl\">\n      <Dashboard\n        uppy={uppy}\n        plugins={[\"Instagram\", \"Webcam\", \"Url\"]}\n        proudlyDisplayPoweredByUppy={false}\n        metaFields={[{ id: \"name\", name: \"Name\", placeholder: \"File name\" }]}\n      />\n    </Modal>\n  );\n  // {/* <DashboardModal\n  //   uppy={this.uppy}\n  //   closeModalOnClickOutside\n  //   open={this.state.modalOpen}\n  //   onRequestClose={this.handleClose}\n  //   plugins={[\"Webcam\"]}\n  // /> */}\n};\n\nexport default FileInput;\n"]},"metadata":{},"sourceType":"module"}