{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/guillaumeesnault/Documents/Projects/pokemon-generator/client/components/Card/TypeWithAmount.tsx\";\nimport React from 'react';\nimport { useWatch } from 'react-hook-form';\nimport { Text, Group } from 'react-konva';\n\nconst TypeWithAmount = ({\n  control,\n  name,\n  x = 0,\n  y = 0\n}) => {\n  const values = useWatch({\n    control,\n    name: [`${name}Amount`, `${name}Type`]\n  });\n  const type = values[`${name}Type`];\n  const amount = values[`${name}Amount`]; // let imageType = null\n\n  if (type) {// imageType = <ImageCanvas image={type} x={27} y={0} width={58} height={58} />\n  }\n\n  if (Boolean(type)) return null;\n  return /*#__PURE__*/_jsxDEV(Group, {\n    x: x,\n    y: y,\n    children: Boolean(amount) && /*#__PURE__*/_jsxDEV(Text, {\n      text: amount,\n      fontFamily: \"pokename\",\n      fontSize: 15,\n      y: 25,\n      x: 73\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\nexport default TypeWithAmount;","map":{"version":3,"sources":["/Users/guillaumeesnault/Documents/Projects/pokemon-generator/client/components/Card/TypeWithAmount.tsx"],"names":["React","useWatch","Text","Group","TypeWithAmount","control","name","x","y","values","type","amount","Boolean"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,IAAT,EAAeC,KAAf,QAAkD,aAAlD;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,IAAX;AAAiBC,EAAAA,CAAC,GAAG,CAArB;AAAwBC,EAAAA,CAAC,GAAG;AAA5B,CAAD,KAAqC;AAC1D,QAAMC,MAAM,GAAGR,QAAQ,CAAC;AACtBI,IAAAA,OADsB;AAEtBC,IAAAA,IAAI,EAAE,CAAE,GAAEA,IAAK,QAAT,EAAmB,GAAEA,IAAK,MAA1B;AAFgB,GAAD,CAAvB;AAKA,QAAMI,IAAI,GAAGD,MAAM,CAAE,GAAEH,IAAK,MAAT,CAAnB;AACA,QAAMK,MAAM,GAAGF,MAAM,CAAE,GAAEH,IAAK,QAAT,CAArB,CAP0D,CAQ1D;;AAEA,MAAII,IAAJ,EAAU,CACR;AACD;;AAED,MAAIE,OAAO,CAACF,IAAD,CAAX,EAAmB,OAAO,IAAP;AAEnB,sBACE,QAAC,KAAD;AAAO,IAAA,CAAC,EAAEH,CAAV;AAAa,IAAA,CAAC,EAAEC,CAAhB;AAAA,cAEGI,OAAO,CAACD,MAAD,CAAP,iBACC,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,MAAZ;AAAoB,MAAA,UAAU,EAAC,UAA/B;AAA0C,MAAA,QAAQ,EAAE,EAApD;AAAwD,MAAA,CAAC,EAAE,EAA3D;AAA+D,MAAA,CAAC,EAAE;AAAlE;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAxBD;;AA0BA,eAAeP,cAAf","sourcesContent":["import React from 'react'\nimport { useWatch } from 'react-hook-form'\nimport { Text, Group, Image as ImageCanvas } from 'react-konva'\n\nconst TypeWithAmount = ({ control, name, x = 0, y = 0 }) => {\n  const values = useWatch({\n    control,\n    name: [`${name}Amount`, `${name}Type`],\n  })\n\n  const type = values[`${name}Type`]\n  const amount = values[`${name}Amount`]\n  // let imageType = null\n\n  if (type) {\n    // imageType = <ImageCanvas image={type} x={27} y={0} width={58} height={58} />\n  }\n\n  if (Boolean(type)) return null\n\n  return (\n    <Group x={x} y={y}>\n      {/* {imageType} */}\n      {Boolean(amount) && (\n        <Text text={amount} fontFamily=\"pokename\" fontSize={15} y={25} x={73} />\n      )}\n    </Group>\n  )\n}\n\nexport default TypeWithAmount\n"]},"metadata":{},"sourceType":"module"}