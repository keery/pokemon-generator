{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/guillaumeesnault/Documents/Projects/pokemon-generator/client/components/Card/Attack.tsx\";\nimport React from 'react';\nimport { Text, Group } from 'react-konva';\nimport { useWatch } from 'react-hook-form';\nimport ImageCanvas from './ImageCanvas';\n\nconst Attack = ({\n  name,\n  x,\n  y,\n  isTiny = false,\n  control\n}) => {\n  const attack = useWatch({\n    control,\n    name\n  });\n  let imgTypeAmountY = 30;\n  let damageY = 40;\n  const global = {\n    textAttackX: 15,\n    textWidth: 278,\n    img: null,\n    height: 107,\n    width: 380\n  };\n\n  if (isTiny) {\n    global.height = 50;\n    imgTypeAmountY = 0;\n    damageY = 10;\n  }\n\n  let attackNameData = {\n    fontSize: 19,\n    y: 0,\n    align: 'center',\n    wrap: 'char',\n    verticalAlign: 'middle'\n  };\n\n  if (Boolean(attack.info)) {\n    attackNameData = {\n      fontSize: 16,\n      y: 2,\n      align: 'left',\n      verticalAlign: 'top'\n    };\n  }\n\n  if (Boolean(attack.amount) && Boolean(attack.type)) {\n    global.img = /*#__PURE__*/_jsxDEV(ImageCanvas, {\n      src: `1-gen/${attack.amount}-${attack.type}.png`,\n      x: 0,\n      y: imgTypeAmountY\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (Boolean(attack.damage) || global.img) {\n    global.textAttackX = 54;\n    global.textWidth = 200;\n  }\n\n  const attackDescData = {\n    fontSize: 12,\n    y: name !== '' ? 20 : 2,\n    align: 'left'\n  };\n  return /*#__PURE__*/_jsxDEV(Group, {\n    width: global.width,\n    height: global.height,\n    x: x,\n    y: y,\n    clipWidth: global.width,\n    clipHeight: global.height,\n    clipY: 0,\n    clipX: 0,\n    children: [global.img, /*#__PURE__*/_jsxDEV(Group, {\n      y: attackNameData.y,\n      x: global.textAttackX,\n      width: global.textWidth,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        text: attack.name,\n        fontFamily: \"pokename\",\n        fontSize: attackNameData.fontSize,\n        y: attackNameData.y,\n        x: 0,\n        width: global.textWidth,\n        height: global.height,\n        align: attackNameData.align,\n        wrap: attackNameData.wrap,\n        verticalAlign: attackNameData.verticalAlign\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        text: attack.info,\n        fontFamily: \"gstd\",\n        fontSize: attackDescData.fontSize,\n        y: attackDescData.y,\n        x: 0,\n        width: global.textWidth,\n        wrap: \"word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      text: attack.damage,\n      fontFamily: \"gstd\",\n      fontSize: 27,\n      y: damageY,\n      x: 196,\n      width: 100,\n      align: \"right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Attack;","map":{"version":3,"sources":["/Users/guillaumeesnault/Documents/Projects/pokemon-generator/client/components/Card/Attack.tsx"],"names":["React","Text","Group","useWatch","ImageCanvas","Attack","name","x","y","isTiny","control","attack","imgTypeAmountY","damageY","global","textAttackX","textWidth","img","height","width","attackNameData","fontSize","align","wrap","verticalAlign","Boolean","info","amount","type","damage","attackDescData"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Text, Group } from 'react-konva'\nimport { useWatch } from 'react-hook-form'\nimport ImageCanvas from './ImageCanvas'\n\nconst Attack = ({ name, x, y, isTiny = false, control }) => {\n  const attack = useWatch({\n    control,\n    name,\n  })\n  let imgTypeAmountY = 30\n  let damageY = 40\n\n  const global = {\n    textAttackX: 15,\n    textWidth: 278,\n    img: null,\n    height: 107,\n    width: 380,\n  }\n\n  if (isTiny) {\n    global.height = 50\n    imgTypeAmountY = 0\n    damageY = 10\n  }\n\n  let attackNameData = {\n    fontSize: 19,\n    y: 0,\n    align: 'center',\n    wrap: 'char',\n    verticalAlign: 'middle',\n  }\n\n  if (Boolean(attack.info)) {\n    attackNameData = {\n      fontSize: 16,\n      y: 2,\n      align: 'left',\n      verticalAlign: 'top',\n    }\n  }\n\n  if (Boolean(attack.amount) && Boolean(attack.type)) {\n    global.img = (\n      <ImageCanvas\n        src={`1-gen/${attack.amount}-${attack.type}.png`}\n        x={0}\n        y={imgTypeAmountY}\n      />\n    )\n  }\n\n  if (Boolean(attack.damage) || global.img) {\n    global.textAttackX = 54\n    global.textWidth = 200\n  }\n\n  const attackDescData = {\n    fontSize: 12,\n    y: name !== '' ? 20 : 2,\n    align: 'left',\n  }\n\n  return (\n    <Group\n      width={global.width}\n      height={global.height}\n      x={x}\n      y={y}\n      clipWidth={global.width}\n      clipHeight={global.height}\n      clipY={0}\n      clipX={0}\n    >\n      {global.img}\n      <Group\n        y={attackNameData.y}\n        x={global.textAttackX}\n        width={global.textWidth}\n      >\n        <Text\n          text={attack.name}\n          fontFamily=\"pokename\"\n          fontSize={attackNameData.fontSize}\n          y={attackNameData.y}\n          x={0}\n          width={global.textWidth}\n          height={global.height}\n          align={attackNameData.align}\n          wrap={attackNameData.wrap}\n          verticalAlign={attackNameData.verticalAlign}\n        />\n        <Text\n          text={attack.info}\n          fontFamily=\"gstd\"\n          fontSize={attackDescData.fontSize}\n          y={attackDescData.y}\n          x={0}\n          width={global.textWidth}\n          wrap=\"word\"\n        />\n      </Group>\n      <Text\n        text={attack.damage}\n        fontFamily=\"gstd\"\n        fontSize={27}\n        y={damageY}\n        x={196}\n        width={100}\n        align=\"right\"\n      />\n    </Group>\n  )\n}\n\nexport default Attack\n"]},"metadata":{},"sourceType":"module"}