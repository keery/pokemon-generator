{"ast":null,"code":"var _jsxFileName = \"/Users/guillaumeesnault/Documents/Projects/pokemon-generator/client/components/FileInput.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Box, Text, Icon, Flex } from \"@chakra-ui/react\";\nimport Uppy from \"@uppy/core\";\nimport DragDropModule from \"@uppy/drag-drop\";\nimport { Dashboard, useUppy } from \"@uppy/react\";\nimport Webcam from \"@uppy/webcam\";\nimport French from \"@uppy/locales/lib/fr_FR\";\nimport Spanish from \"@uppy/locales/lib/es_ES\";\nimport Modal from \"~components/Modal\";\nimport Upload from \"public/assets/img/upload.svg\";\nimport dynamic from \"next/dynamic\";\nconst EMPTY_STATE = {\n  isUploaded: false,\n  uploadLabel: \"\"\n};\n\nconst getUppyTranslations = locale => {\n  switch (locale) {\n    case \"fr\":\n      return French;\n\n    case \"es\":\n      return Spanish;\n\n    default:\n      return false;\n  }\n};\n\nconst TRANSLOADIT_KEY = \"be3e863775b14553a504aaa98ca3c32c\";\nconst TRANSLOADIT_SECRET = \"bf39fb91c830d0a63f1e7880508d4f79c4bc1075\";\nconst TRANSLOADIT_TEMPLATE_ID = \"2451e3544cfd4eb29688983b6c7e8956\";\n\nconst FileInput = ({\n  name\n}) => {\n  // constructor(props) {\n  //   super(props);\n  //   this.uppy = new Uppy({\n  //     id: props.name,\n  //     autoProceed: true,\n  //     // locale: getUppyTranslations(language),\n  //     debug: true,\n  //     allowMultipleUploads: false,\n  //     restrictions: {\n  //       maxFileSize: 1000000,\n  //       maxNumberOfFiles: 1,\n  //       allowedFileTypes: [\"image/*\"],\n  //     },\n  //   }).use(DragDrop, {\n  //     target: null,\n  //     width: \"100%\",\n  //     height: \"100%\",\n  //     note: null,\n  //     locale: {},\n  //   });\n  //   // .use(Webcam)\n  //   // .use(Instagram, {\n  //   //   companionUrl: process.env.REACT_APP_SERVER_URL,\n  //   // })\n  //   // .use(Url, {\n  //   //   companionUrl: process.env.REACT_APP_SERVER_URL,\n  //   // })\n  //   // .use(Transloadit, {\n  //   //   debug: true,\n  //   //   // signature: TRANSLOADIT_SECRET,\n  //   //   params: {\n  //   //     auth: {\n  //   //       // expires: dayjs().add(6, 'hour').format('YYYY/MM/DD HH:mm:ss+00:00'),\n  //   //       key: TRANSLOADIT_KEY,\n  //   //     },\n  //   //     template_id: TRANSLOADIT_TEMPLATE_ID,\n  //   //   },\n  //   // })\n  //   // .use(XHRUpload, {\n  //   //   endpoint: `${process.env.REACT_APP_SERVER_URL}/api/file/upload`,\n  //   // });\n  //   if (props.value) {\n  //     this.state = {\n  //       isUploaded: true,\n  //       uploadLabel: props.value.name,\n  //     };\n  //   } else {\n  //     this.state = EMPTY_STATE;\n  //   }\n  // }\n  // componentDidMount() {\n  //   const { onChange, name } = this.props;\n  //   this.uppy.on(\"transloadit:result\", (stepName, result) => {\n  //     const file = this.uppy.getFile(result.localId);\n  //     this.setState({\n  //       uploadLabel: file.name,\n  //       isUploaded: true,\n  //     });\n  //     onChange({\n  //       target: {\n  //         name,\n  //         value: {\n  //           src: file.response.uploadURL,\n  //           name: file.name,\n  //         },\n  //         getAttribute: () => false,\n  //       },\n  //     });\n  //     this.uppy.reset();\n  //     // this.context.closeModal()\n  //   });\n  // }\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (prevProps.value !== this.props.value && !this.props.value) {\n  //     this.setState(EMPTY_STATE);\n  //   }\n  // }\n  // componentWillUnmount() {\n  //   this.props.uppy.off(\"upload-success\");\n  //   this.props.uppy.close();\n  // }\n  // handleFile = (event) => {\n  //   const { isUploaded } = this.state\n  //   console.log(isUploaded)\n  //   this.setState({\n  //     // uploadLabel: file.name,\n  //     isUploaded: !isUploaded,\n  //   })\n  //   // this.context.openModalWith(\n  //     <Dashboard\n  //       uppy={this.props.uppy}\n  //       plugins={['Instagram', 'Webcam', 'Url']}\n  //       proudlyDisplayPoweredByUppy={false}\n  //       metaFields={[{ id: 'name', name: 'Name', placeholder: 'File name' }]}\n  //       browserBackButtonClose\n  //     />\n  //   )\n  // }\n  const uppy = useUppy(() => {\n    return new Uppy({\n      id: name,\n      autoProceed: true,\n      // locale: getUppyTranslations(language),\n      debug: true,\n      allowMultipleUploads: false,\n      restrictions: {\n        maxFileSize: 1000000,\n        maxNumberOfFiles: 1,\n        allowedFileTypes: [\"image/*\"]\n      }\n    }).use(DragDropModule, {\n      target: null,\n      width: \"100%\",\n      height: \"100%\",\n      note: null\n    }).use(Webcam); // .use(Instagram, {\n    //   companionUrl: process.env.REACT_APP_SERVER_URL,\n    // })\n    // .use(Url, {\n    //   companionUrl: process.env.REACT_APP_SERVER_URL,\n    // });\n  });\n  const {\n    0: isUploaded,\n    1: setUploaded\n  } = useState(false);\n  return __jsx(Modal, {\n    button: __jsx(Flex, {\n      direction: \"column\",\n      justifyContent: \"center\",\n      height: 10,\n      width: \"100%\",\n      borderRadius: \"md\",\n      border: \"1px solid #cacaca\",\n      overflow: \"hidden\",\n      pos: \"relative\",\n      bgColor: \"rgb(255 255 255 / 30%)\",\n      cursor: \"pointer\",\n      _hover: {\n        borderColor: \"white\"\n      },\n      transition: \"border-color 200ms\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }\n    }, __jsx(Text, {\n      color: \"grey.500\",\n      fontSize: \".9rem\",\n      fontWeight: \"600\",\n      pl: \"10px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }\n    }, \"Choisir une photo\"), __jsx(Icon, {\n      as: Upload,\n      position: \"absolute\",\n      left: isUploaded ? 0 : \"calc(100% - 38px)\",\n      top: \"50%\",\n      transform: \"translateY(-50%)\",\n      bg: \"linear-gradient(to left, #ff9349 0%, #ffc27b 100%)\",\n      borderRadius: \"md\",\n      h: \"38px\",\n      w: \"38px\",\n      color: \"#fff\",\n      transition: \"left ease-in-out 0.5s\",\n      zIndex: \"1\",\n      p: \".7rem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }\n    }), __jsx(Box, {\n      position: \"absolute\",\n      top: \"0px\",\n      bottom: \"0px\",\n      w: \"100%\",\n      left: isUploaded ? \"19px\" : \"calc(100% - 19px)\",\n      transition: \"left ease-in-out 0.5s\",\n      backgroundColor: \"orange.500\",\n      pl: \"3rem\",\n      color: \"white\",\n      fontWeight: \"bold\",\n      display: \"flex\",\n      alignItems: \"center\",\n      _hover: {\n        backgroundColor: isUploaded ? \"orange.400\" : \"orange.500\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }\n    }, __jsx(Text, {\n      textOverflow: \"ellipsis\",\n      w: \"80%\",\n      overflow: \"hidden\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 13\n      }\n    }, \"upload label\"))),\n    size: \"xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 5\n    }\n  }, __jsx(Dashboard, {\n    uppy: uppy,\n    plugins: [\"Instagram\", \"Webcam\", \"Url\"],\n    proudlyDisplayPoweredByUppy: false,\n    metaFields: [{\n      id: \"name\",\n      name: \"Name\",\n      placeholder: \"File name\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default dynamic(() => Promise.resolve(FileInput), {\n  ssr: false\n});","map":{"version":3,"sources":["/Users/guillaumeesnault/Documents/Projects/pokemon-generator/client/components/FileInput.tsx"],"names":["React","useState","Box","Text","Icon","Flex","Uppy","DragDropModule","Dashboard","useUppy","Webcam","French","Spanish","Modal","Upload","dynamic","EMPTY_STATE","isUploaded","uploadLabel","getUppyTranslations","locale","TRANSLOADIT_KEY","TRANSLOADIT_SECRET","TRANSLOADIT_TEMPLATE_ID","FileInput","name","uppy","id","autoProceed","debug","allowMultipleUploads","restrictions","maxFileSize","maxNumberOfFiles","allowedFileTypes","use","target","width","height","note","setUploaded","borderColor","backgroundColor","placeholder","Promise","resolve","ssr"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { withTranslation, getI18n } from \"react-i18next\";\nimport { Box, Text, Icon, Flex } from \"@chakra-ui/react\";\nimport Uppy from \"@uppy/core\";\nimport Url from \"@uppy/url\";\nimport DragDropModule from \"@uppy/drag-drop\";\nimport { Dashboard, DashboardModal, DragDrop, useUppy } from \"@uppy/react\";\nimport Webcam from \"@uppy/webcam\";\nimport Instagram from \"@uppy/instagram\";\nimport Transloadit from \"@uppy/transloadit\";\nimport XHRUpload from \"@uppy/xhr-upload\";\nimport French from \"@uppy/locales/lib/fr_FR\";\nimport Spanish from \"@uppy/locales/lib/es_ES\";\nimport Modal from \"~components/Modal\";\nimport Upload from \"public/assets/img/upload.svg\";\nimport dynamic from \"next/dynamic\";\n\nconst EMPTY_STATE = {\n  isUploaded: false,\n  uploadLabel: \"\",\n};\n\nconst getUppyTranslations = (locale) => {\n  switch (locale) {\n    case \"fr\":\n      return French;\n    case \"es\":\n      return Spanish;\n    default:\n      return false;\n  }\n};\n\nconst TRANSLOADIT_KEY = \"be3e863775b14553a504aaa98ca3c32c\";\nconst TRANSLOADIT_SECRET = \"bf39fb91c830d0a63f1e7880508d4f79c4bc1075\";\nconst TRANSLOADIT_TEMPLATE_ID = \"2451e3544cfd4eb29688983b6c7e8956\";\n\ninterface Props {\n  name: string;\n}\n\nconst FileInput = ({ name }) => {\n  // constructor(props) {\n  //   super(props);\n\n  //   this.uppy = new Uppy({\n  //     id: props.name,\n  //     autoProceed: true,\n  //     // locale: getUppyTranslations(language),\n  //     debug: true,\n  //     allowMultipleUploads: false,\n  //     restrictions: {\n  //       maxFileSize: 1000000,\n  //       maxNumberOfFiles: 1,\n  //       allowedFileTypes: [\"image/*\"],\n  //     },\n  //   }).use(DragDrop, {\n  //     target: null,\n  //     width: \"100%\",\n  //     height: \"100%\",\n  //     note: null,\n  //     locale: {},\n  //   });\n  //   // .use(Webcam)\n  //   // .use(Instagram, {\n  //   //   companionUrl: process.env.REACT_APP_SERVER_URL,\n  //   // })\n  //   // .use(Url, {\n  //   //   companionUrl: process.env.REACT_APP_SERVER_URL,\n  //   // })\n  //   // .use(Transloadit, {\n  //   //   debug: true,\n  //   //   // signature: TRANSLOADIT_SECRET,\n  //   //   params: {\n  //   //     auth: {\n  //   //       // expires: dayjs().add(6, 'hour').format('YYYY/MM/DD HH:mm:ss+00:00'),\n  //   //       key: TRANSLOADIT_KEY,\n  //   //     },\n  //   //     template_id: TRANSLOADIT_TEMPLATE_ID,\n  //   //   },\n  //   // })\n  //   // .use(XHRUpload, {\n  //   //   endpoint: `${process.env.REACT_APP_SERVER_URL}/api/file/upload`,\n  //   // });\n\n  //   if (props.value) {\n  //     this.state = {\n  //       isUploaded: true,\n  //       uploadLabel: props.value.name,\n  //     };\n  //   } else {\n  //     this.state = EMPTY_STATE;\n  //   }\n  // }\n\n  // componentDidMount() {\n  //   const { onChange, name } = this.props;\n  //   this.uppy.on(\"transloadit:result\", (stepName, result) => {\n  //     const file = this.uppy.getFile(result.localId);\n  //     this.setState({\n  //       uploadLabel: file.name,\n  //       isUploaded: true,\n  //     });\n  //     onChange({\n  //       target: {\n  //         name,\n  //         value: {\n  //           src: file.response.uploadURL,\n  //           name: file.name,\n  //         },\n  //         getAttribute: () => false,\n  //       },\n  //     });\n  //     this.uppy.reset();\n  //     // this.context.closeModal()\n  //   });\n  // }\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (prevProps.value !== this.props.value && !this.props.value) {\n  //     this.setState(EMPTY_STATE);\n  //   }\n  // }\n\n  // componentWillUnmount() {\n  //   this.props.uppy.off(\"upload-success\");\n  //   this.props.uppy.close();\n  // }\n\n  // handleFile = (event) => {\n  //   const { isUploaded } = this.state\n  //   console.log(isUploaded)\n  //   this.setState({\n  //     // uploadLabel: file.name,\n  //     isUploaded: !isUploaded,\n  //   })\n  //   // this.context.openModalWith(\n  //     <Dashboard\n  //       uppy={this.props.uppy}\n  //       plugins={['Instagram', 'Webcam', 'Url']}\n  //       proudlyDisplayPoweredByUppy={false}\n  //       metaFields={[{ id: 'name', name: 'Name', placeholder: 'File name' }]}\n  //       browserBackButtonClose\n  //     />\n  //   )\n  // }\n\n  const uppy = useUppy(() => {\n    return new Uppy({\n      id: name,\n      autoProceed: true,\n      // locale: getUppyTranslations(language),\n      debug: true,\n      allowMultipleUploads: false,\n      restrictions: {\n        maxFileSize: 1000000,\n        maxNumberOfFiles: 1,\n        allowedFileTypes: [\"image/*\"],\n      },\n    })\n      .use(DragDropModule, {\n        target: null,\n        width: \"100%\",\n        height: \"100%\",\n        note: null,\n      })\n      .use(Webcam);\n    // .use(Instagram, {\n    //   companionUrl: process.env.REACT_APP_SERVER_URL,\n    // })\n    // .use(Url, {\n    //   companionUrl: process.env.REACT_APP_SERVER_URL,\n    // });\n  });\n  const [isUploaded, setUploaded] = useState(false);\n\n  return (\n    <Modal\n      button={\n        <Flex\n          direction=\"column\"\n          justifyContent=\"center\"\n          height={10}\n          width=\"100%\"\n          borderRadius=\"md\"\n          border=\"1px solid #cacaca\"\n          overflow=\"hidden\"\n          pos=\"relative\"\n          bgColor=\"rgb(255 255 255 / 30%)\"\n          cursor=\"pointer\"\n          _hover={{\n            borderColor: \"white\",\n          }}\n          transition=\"border-color 200ms\"\n        >\n          <Text color=\"grey.500\" fontSize=\".9rem\" fontWeight=\"600\" pl=\"10px\">\n            Choisir une photo\n          </Text>\n          <Icon\n            as={Upload}\n            position=\"absolute\"\n            left={isUploaded ? 0 : \"calc(100% - 38px)\"}\n            top=\"50%\"\n            transform=\"translateY(-50%)\"\n            bg=\"linear-gradient(to left, #ff9349 0%, #ffc27b 100%)\"\n            borderRadius=\"md\"\n            h=\"38px\"\n            w=\"38px\"\n            color=\"#fff\"\n            transition=\"left ease-in-out 0.5s\"\n            zIndex=\"1\"\n            p=\".7rem\"\n          />\n          <Box\n            position=\"absolute\"\n            top=\"0px\"\n            bottom=\"0px\"\n            w=\"100%\"\n            left={isUploaded ? \"19px\" : \"calc(100% - 19px)\"}\n            transition=\"left ease-in-out 0.5s\"\n            backgroundColor=\"orange.500\"\n            pl=\"3rem\"\n            color=\"white\"\n            fontWeight=\"bold\"\n            display=\"flex\"\n            alignItems=\"center\"\n            _hover={{\n              backgroundColor: isUploaded ? \"orange.400\" : \"orange.500\",\n            }}\n          >\n            <Text textOverflow=\"ellipsis\" w=\"80%\" overflow=\"hidden\">\n              upload label\n            </Text>\n          </Box>\n        </Flex>\n      }\n      size=\"xl\"\n    >\n      <Dashboard\n        uppy={uppy}\n        plugins={[\"Instagram\", \"Webcam\", \"Url\"]}\n        proudlyDisplayPoweredByUppy={false}\n        metaFields={[{ id: \"name\", name: \"Name\", placeholder: \"File name\" }]}\n      />\n    </Modal>\n  );\n};\n\nexport default dynamic(() => Promise.resolve(FileInput), {\n  ssr: false,\n});\n"]},"metadata":{},"sourceType":"module"}