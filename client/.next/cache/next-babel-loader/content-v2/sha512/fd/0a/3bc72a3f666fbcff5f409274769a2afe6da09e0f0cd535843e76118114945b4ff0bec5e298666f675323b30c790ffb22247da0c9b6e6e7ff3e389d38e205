{"ast":null,"code":"var _jsxFileName = \"/Users/guillaumeesnault/Documents/Projects/pokemon-generator/client/components/Card/TypeBackground.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useWatch } from \"react-hook-form\";\nimport ImageCanvas from \"./ImageCanvas\";\n\nvar TypeBackground = function TypeBackground(_ref) {\n  _s();\n\n  var control = _ref.control;\n\n  var _useWatch = useWatch({\n    control: control,\n    name: [\"type\", \"stage\"]\n  }),\n      type = _useWatch.type,\n      stage = _useWatch.stage;\n\n  return __jsx(ImageCanvas, {\n    src: \"1-gen/\".concat(type, \"-\").concat(stage, \".png\"),\n    width: 390,\n    height: 545,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  });\n};\n\n_s(TypeBackground, \"4JbrUTKDN4rMLfANtNhLew5ZqJQ=\", false, function () {\n  return [useWatch];\n});\n\n_c = TypeBackground;\nexport default TypeBackground;\n\nvar _c;\n\n$RefreshReg$(_c, \"TypeBackground\");","map":{"version":3,"sources":["/Users/guillaumeesnault/Documents/Projects/pokemon-generator/client/components/Card/TypeBackground.tsx"],"names":["React","useWatch","ImageCanvas","TypeBackground","control","name","type","stage"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAiB;AAAA;;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAAA,kBACdH,QAAQ,CAAC;AAC/BG,IAAAA,OAAO,EAAPA,OAD+B;AAE/BC,IAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,OAAT;AAFyB,GAAD,CADM;AAAA,MAC9BC,IAD8B,aAC9BA,IAD8B;AAAA,MACxBC,KADwB,aACxBA,KADwB;;AAMtC,SACE,MAAC,WAAD;AAAa,IAAA,GAAG,kBAAWD,IAAX,cAAmBC,KAAnB,SAAhB;AAAgD,IAAA,KAAK,EAAE,GAAvD;AAA4D,IAAA,MAAM,EAAE,GAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGD,CATD;;GAAMJ,c;UACoBF,Q;;;KADpBE,c;AAWN,eAAeA,cAAf","sourcesContent":["import React from \"react\";\nimport { useWatch } from \"react-hook-form\";\nimport ImageCanvas from \"./ImageCanvas\";\n\nconst TypeBackground = ({ control }) => {\n  const { type, stage } = useWatch({\n    control,\n    name: [\"type\", \"stage\"],\n  });\n\n  return (\n    <ImageCanvas src={`1-gen/${type}-${stage}.png`} width={390} height={545} />\n  );\n};\n\nexport default TypeBackground;\n"]},"metadata":{},"sourceType":"module"}