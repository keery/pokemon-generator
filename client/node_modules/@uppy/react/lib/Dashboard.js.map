{"version":3,"sources":["Dashboard.js"],"names":["React","require","DashboardPlugin","basePropTypes","dashboard","getHTMLProps","h","createElement","Dashboard","Component","constructor","props","validProps","componentDidMount","installPlugin","componentDidUpdate","prevProps","uppy","uninstallPlugin","componentWillUnmount","options","id","target","container","use","plugin","getPlugin","removePlugin","render","ref","propTypes","defaultProps","inline","module","exports"],"mappings":";;AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,eAAe,GAAGD,OAAO,CAAC,iBAAD,CAA/B;;AACA,MAAME,aAAa,GAAGF,OAAO,CAAC,aAAD,CAAP,CAAuBG,SAA7C;;AACA,MAAMC,YAAY,GAAGJ,OAAO,CAAC,gBAAD,CAA5B;;AAEA,MAAMK,CAAC,GAAGN,KAAK,CAACO,aAAhB;AAEA;AACA;AACA;AACA;;AAEA,MAAMC,SAAN,SAAwBR,KAAK,CAACS,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAMA,KAAN;AACA,SAAKC,UAAL,GAAkBP,YAAY,CAACM,KAAD,CAA9B;AACD;;AAEDE,EAAAA,iBAAiB,GAAI;AACnB,SAAKC,aAAL;AACD;;AAEDC,EAAAA,kBAAkB,CAAEC,SAAF,EAAa;AAC7B,QAAIA,SAAS,CAACC,IAAV,KAAmB,KAAKN,KAAL,CAAWM,IAAlC,EAAwC;AACtC,WAAKC,eAAL,CAAqBF,SAArB;AACA,WAAKF,aAAL;AACD;AACF;;AAEDK,EAAAA,oBAAoB,GAAI;AACtB,SAAKD,eAAL;AACD;;AAEDJ,EAAAA,aAAa,GAAI;AACf,UAAM;AAAEG,MAAAA;AAAF,QAAW,KAAKN,KAAtB;AACA,UAAMS,OAAO,GAAG;AACdC,MAAAA,EAAE,EAAE,iBADU;AAEd,SAAG,KAAKV,KAFM;AAGdW,MAAAA,MAAM,EAAE,KAAKC;AAHC,KAAhB;AAKA,WAAOH,OAAO,CAACH,IAAf;AACAA,IAAAA,IAAI,CAACO,GAAL,CAAStB,eAAT,EAA0BkB,OAA1B;AAEA,SAAKK,MAAL,GAAcR,IAAI,CAACS,SAAL,CAAeN,OAAO,CAACC,EAAvB,CAAd;AACD;;AAEDH,EAAAA,eAAe,CAAEP,KAAK,GAAG,KAAKA,KAAf,EAAsB;AACnC,UAAM;AAAEM,MAAAA;AAAF,QAAWN,KAAjB;AAEAM,IAAAA,IAAI,CAACU,YAAL,CAAkB,KAAKF,MAAvB;AACD;;AAEDG,EAAAA,MAAM,GAAI;AACR,WAAOtB,CAAC,CAAC,KAAD,EAAQ;AACduB,MAAAA,GAAG,EAAGN,SAAD,IAAe;AAClB,aAAKA,SAAL,GAAiBA,SAAjB;AACD,OAHa;AAId,SAAG,KAAKX;AAJM,KAAR,CAAR;AAMD;;AA/CqC;;AAkDxCJ,SAAS,CAACsB,SAAV,GAAsB3B,aAAtB;AAEAK,SAAS,CAACuB,YAAV,GAAyB;AACvBC,EAAAA,MAAM,EAAE;AADe,CAAzB;AAIAC,MAAM,CAACC,OAAP,GAAiB1B,SAAjB","sourcesContent":["const React = require('react')\nconst DashboardPlugin = require('@uppy/dashboard')\nconst basePropTypes = require('./propTypes').dashboard\nconst getHTMLProps = require('./getHTMLProps')\n\nconst h = React.createElement\n\n/**\n * React Component that renders a Dashboard for an Uppy instance. This component\n * renders the Dashboard inline, so you can put it anywhere you want.\n */\n\nclass Dashboard extends React.Component {\n  constructor (props) {\n    super(props)\n    this.validProps = getHTMLProps(props)\n  }\n\n  componentDidMount () {\n    this.installPlugin()\n  }\n\n  componentDidUpdate (prevProps) {\n    if (prevProps.uppy !== this.props.uppy) {\n      this.uninstallPlugin(prevProps)\n      this.installPlugin()\n    }\n  }\n\n  componentWillUnmount () {\n    this.uninstallPlugin()\n  }\n\n  installPlugin () {\n    const { uppy } = this.props\n    const options = {\n      id: 'react:Dashboard',\n      ...this.props,\n      target: this.container,\n    }\n    delete options.uppy\n    uppy.use(DashboardPlugin, options)\n\n    this.plugin = uppy.getPlugin(options.id)\n  }\n\n  uninstallPlugin (props = this.props) {\n    const { uppy } = props\n\n    uppy.removePlugin(this.plugin)\n  }\n\n  render () {\n    return h('div', {\n      ref: (container) => {\n        this.container = container\n      },\n      ...this.validProps,\n    })\n  }\n}\n\nDashboard.propTypes = basePropTypes\n\nDashboard.defaultProps = {\n  inline: true,\n}\n\nmodule.exports = Dashboard\n"]}