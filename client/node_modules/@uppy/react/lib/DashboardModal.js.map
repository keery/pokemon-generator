{"version":3,"sources":["DashboardModal.js"],"names":["React","require","PropTypes","DashboardPlugin","basePropTypes","dashboard","getHTMLProps","h","createElement","DashboardModal","Component","constructor","props","validProps","componentDidMount","installPlugin","componentDidUpdate","prevProps","uppy","uninstallPlugin","open","plugin","closeModal","openModal","componentWillUnmount","options","id","onRequestCloseModal","onRequestClose","target","container","use","getPlugin","removePlugin","render","ref","propTypes","window","instanceOf","HTMLElement","any","bool","func","closeModalOnClickOutside","disablePageScrollWhenModalOpen","module","exports"],"mappings":"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","sourcesContent":["const React = require('react')\nconst PropTypes = require('prop-types')\nconst DashboardPlugin = require('@uppy/dashboard')\nconst basePropTypes = require('./propTypes').dashboard\nconst getHTMLProps = require('./getHTMLProps')\n\nconst h = React.createElement\n\n/**\n * React Component that renders a Dashboard for an Uppy instance in a Modal\n * dialog. Visibility of the Modal is toggled using the `open` prop.\n */\n\nclass DashboardModal extends React.Component {\n  constructor (props) {\n    super(props)\n    this.validProps = getHTMLProps(props)\n  }\n\n  componentDidMount () {\n    this.installPlugin()\n  }\n\n  componentDidUpdate (prevProps) {\n    if (prevProps.uppy !== this.props.uppy) {\n      this.uninstallPlugin(prevProps)\n      this.installPlugin()\n    }\n    if (prevProps.open && !this.props.open) {\n      this.plugin.closeModal()\n    } else if (!prevProps.open && this.props.open) {\n      this.plugin.openModal()\n    }\n  }\n\n  componentWillUnmount () {\n    this.uninstallPlugin()\n  }\n\n  installPlugin () {\n    const { uppy } = this.props\n    const options = {\n      id: 'react:DashboardModal',\n      ...this.props,\n      onRequestCloseModal: this.props.onRequestClose,\n    }\n\n    if (!options.target) {\n      options.target = this.container\n    }\n\n    delete options.uppy\n    uppy.use(DashboardPlugin, options)\n\n    this.plugin = uppy.getPlugin(options.id)\n    if (this.props.open) {\n      this.plugin.openModal()\n    }\n  }\n\n  uninstallPlugin (props = this.props) {\n    const { uppy } = props\n\n    uppy.removePlugin(this.plugin)\n  }\n\n  render () {\n    return h('div', {\n      ref: (container) => {\n        this.container = container\n      },\n      ...this.validProps,\n    })\n  }\n}\n\nDashboardModal.propTypes = {\n  target: typeof window !== 'undefined' ? PropTypes.instanceOf(window.HTMLElement) : PropTypes.any,\n  open: PropTypes.bool,\n  onRequestClose: PropTypes.func,\n  closeModalOnClickOutside: PropTypes.bool,\n  disablePageScrollWhenModalOpen: PropTypes.bool,\n  ...basePropTypes,\n}\n\nmodule.exports = DashboardModal\n"]}