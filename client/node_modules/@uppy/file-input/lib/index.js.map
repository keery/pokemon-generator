{"version":3,"sources":["index.js"],"names":["UIPlugin","require","toArray","h","module","exports","FileInput","constructor","uppy","opts","id","title","type","defaultLocale","strings","chooseFiles","defaultOptions","target","pretty","inputName","i18nInit","render","bind","handleInputChange","handleClick","addFiles","files","descriptors","map","file","source","name","data","err","log","event","value","input","click","hiddenInputStyle","width","height","opacity","overflow","position","zIndex","restrictions","accept","allowedFileTypes","join","maxNumberOfFiles","i18n","install","mount","uninstall","unmount","VERSION"],"mappings":"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","sourcesContent":["const { UIPlugin } = require('@uppy/core')\nconst toArray = require('@uppy/utils/lib/toArray')\nconst { h } = require('preact')\n\nmodule.exports = class FileInput extends UIPlugin {\n  static VERSION = require('../package.json').version\n\n  constructor (uppy, opts) {\n    super(uppy, opts)\n    this.id = this.opts.id || 'FileInput'\n    this.title = 'File Input'\n    this.type = 'acquirer'\n\n    this.defaultLocale = {\n      strings: {\n        // The same key is used for the same purpose by @uppy/robodog's `form()` API, but our\n        // locale pack scripts can't access it in Robodog. If it is updated here, it should\n        // also be updated there!\n        chooseFiles: 'Choose files',\n      },\n    }\n\n    // Default options\n    const defaultOptions = {\n      target: null,\n      pretty: true,\n      inputName: 'files[]',\n    }\n\n    // Merge default options with the ones set by user\n    this.opts = { ...defaultOptions, ...opts }\n\n    this.i18nInit()\n\n    this.render = this.render.bind(this)\n    this.handleInputChange = this.handleInputChange.bind(this)\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  addFiles (files) {\n    const descriptors = files.map((file) => ({\n      source: this.id,\n      name: file.name,\n      type: file.type,\n      data: file,\n    }))\n\n    try {\n      this.uppy.addFiles(descriptors)\n    } catch (err) {\n      this.uppy.log(err)\n    }\n  }\n\n  handleInputChange (event) {\n    this.uppy.log('[FileInput] Something selected through input...')\n    const files = toArray(event.target.files)\n    this.addFiles(files)\n\n    // We clear the input after a file is selected, because otherwise\n    // change event is not fired in Chrome and Safari when a file\n    // with the same name is selected.\n    // ___Why not use value=\"\" on <input/> instead?\n    //    Because if we use that method of clearing the input,\n    //    Chrome will not trigger change if we drop the same file twice (Issue #768).\n    event.target.value = null\n  }\n\n  handleClick () {\n    this.input.click()\n  }\n\n  render () {\n    /* http://tympanus.net/codrops/2015/09/15/styling-customizing-file-inputs-smart-way/ */\n    const hiddenInputStyle = {\n      width: '0.1px',\n      height: '0.1px',\n      opacity: 0,\n      overflow: 'hidden',\n      position: 'absolute',\n      zIndex: -1,\n    }\n\n    const { restrictions } = this.uppy.opts\n    const accept = restrictions.allowedFileTypes ? restrictions.allowedFileTypes.join(',') : null\n\n    return (\n      <div className=\"uppy-Root uppy-FileInput-container\">\n        <input\n          className=\"uppy-FileInput-input\"\n          style={this.opts.pretty && hiddenInputStyle}\n          type=\"file\"\n          name={this.opts.inputName}\n          onChange={this.handleInputChange}\n          multiple={restrictions.maxNumberOfFiles !== 1}\n          accept={accept}\n          ref={(input) => { this.input = input }}\n        />\n        {this.opts.pretty\n          && (\n          <button\n            className=\"uppy-FileInput-btn\"\n            type=\"button\"\n            onClick={this.handleClick}\n          >\n            {this.i18n('chooseFiles')}\n          </button>\n          )}\n      </div>\n    )\n  }\n\n  install () {\n    const { target } = this.opts\n    if (target) {\n      this.mount(target, this)\n    }\n  }\n\n  uninstall () {\n    this.unmount()\n  }\n}\n"]}