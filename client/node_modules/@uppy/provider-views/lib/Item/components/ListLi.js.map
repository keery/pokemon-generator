{"version":3,"sources":["ListLi.js"],"names":["h","require","ListItem","props","className","isDisabled","restrictionReason","isCheckboxDisabled","isChecked","toggleCheckbox","type","id","itemIconEl","title","handleFolderClick","showTitles","i18n","name","module","exports"],"mappings":";;AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAQC,OAAO,CAAC,QAAD,CAArB,C,CAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASC,QAAT,CAAmBC,KAAnB,EAA0B;AACxB,QAAM;AACJC,IAAAA,SADI;AAEJC,IAAAA,UAFI;AAGJC,IAAAA,iBAHI;AAIJC,IAAAA,kBAJI;AAKJC,IAAAA,SALI;AAMJC,IAAAA,cANI;AAOJC,IAAAA,IAPI;AAQJC,IAAAA,EARI;AASJC,IAAAA,UATI;AAUJC,IAAAA,KAVI;AAWJC,IAAAA,iBAXI;AAYJC,IAAAA,UAZI;AAaJC,IAAAA;AAbI,MAcFb,KAdJ;AAgBA,SACE;AACE,IAAA,SAAS,EAAEC,SADb;AAEE,IAAA,KAAK,EAAEC,UAAU,GAAGC,iBAAH,GAAuB;AAF1C,KAIG,CAACC,kBAAD,GACC;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,SAAS,EAAG,kDAAiDC,SAAS,GAAG,+CAAH,GAAqD,EAAG,EAFhI;AAGE,IAAA,QAAQ,EAAEC,cAHZ,CAIE;AAJF;AAKE,IAAA,IAAI,EAAC,UALP;AAME,IAAA,EAAE,EAAEE,EANN;AAOE,IAAA,OAAO,EAAEH,SAPX;AAQE,kBAAYE,IAAI,KAAK,MAAT,GAAkB,IAAlB,GAAyBM,IAAI,CAAC,yBAAD,EAA4B;AAAEC,MAAAA,IAAI,EAAEJ;AAAR,KAA5B,CAR3C;AASE,IAAA,QAAQ,EAAER,UATZ;AAUE;AAVF,IADD,GAaG,IAjBN,EAmBGK,IAAI,KAAK,MAAT,GACC;AACA;AACE,IAAA,OAAO,EAAEC,EADX;AAEE,IAAA,SAAS,EAAC;AAFZ,KAIE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGC,UADH,CAJF,EAOGG,UAAU,IAAIF,KAPjB,CAFD,GAYC;AACA;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,6CAFZ;AAGE,IAAA,OAAO,EAAEC,iBAHX;AAIE,kBAAYE,IAAI,CAAC,iBAAD,EAAoB;AAAEC,MAAAA,IAAI,EAAEJ;AAAR,KAApB;AAJlB,KAME;AAAK,IAAA,SAAS,EAAC;AAAf,KACGD,UADH,CANF,EASGG,UAAU,IAAI,gBAAOF,KAAP,CATjB,CAhCJ,CADF;AA+CD;;AAEDK,MAAM,CAACC,OAAP,GAAiBjB,QAAjB","sourcesContent":["const { h } = require('preact')\n\n// if folder:\n//   + checkbox (selects all files from folder)\n//   + folder name (opens folder)\n// if file:\n//   + checkbox (selects file)\n//   + file name (selects file)\n\nfunction ListItem (props) {\n  const {\n    className,\n    isDisabled,\n    restrictionReason,\n    isCheckboxDisabled,\n    isChecked,\n    toggleCheckbox,\n    type,\n    id,\n    itemIconEl,\n    title,\n    handleFolderClick,\n    showTitles,\n    i18n,\n  } = props\n\n  return (\n    <li\n      className={className}\n      title={isDisabled ? restrictionReason : null}\n    >\n      {!isCheckboxDisabled ? (\n        <input\n          type=\"checkbox\"\n          className={`uppy-u-reset uppy-ProviderBrowserItem-checkbox ${isChecked ? 'uppy-ProviderBrowserItem-checkbox--is-checked' : ''}`}\n          onChange={toggleCheckbox}\n          // for the <label/>\n          name=\"listitem\"\n          id={id}\n          checked={isChecked}\n          aria-label={type === 'file' ? null : i18n('allFilesFromFolderNamed', { name: title })}\n          disabled={isDisabled}\n          data-uppy-super-focusable\n        />\n      ) : null}\n\n      {type === 'file' ? (\n        // label for a checkbox\n        <label\n          htmlFor={id}\n          className=\"uppy-u-reset uppy-ProviderBrowserItem-inner\"\n        >\n          <div className=\"uppy-ProviderBrowserItem-iconWrap\">\n            {itemIconEl}\n          </div>\n          {showTitles && title}\n        </label>\n      ) : (\n        // button to open a folder\n        <button\n          type=\"button\"\n          className=\"uppy-u-reset uppy-ProviderBrowserItem-inner\"\n          onClick={handleFolderClick}\n          aria-label={i18n('openFolderNamed', { name: title })}\n        >\n          <div className=\"uppy-ProviderBrowserItem-iconWrap\">\n            {itemIconEl}\n          </div>\n          {showTitles && <span>{title}</span>}\n        </button>\n      )}\n    </li>\n  )\n}\n\nmodule.exports = ListItem\n"]}