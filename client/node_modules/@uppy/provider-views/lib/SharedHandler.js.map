{"version":3,"sources":["SharedHandler.js"],"names":["remoteFileObjToLocal","require","module","exports","SharedHandler","constructor","plugin","filterItems","bind","toggleCheckbox","isChecked","loaderWrapper","items","state","getPluginState","filterInput","filter","folder","name","toLowerCase","indexOf","e","file","stopPropagation","preventDefault","currentTarget","focus","folders","files","concat","lastCheckbox","shiftKey","prevIndex","currentIndex","currentSelection","slice","reducedCurrentSelection","item","uppy","validatedRestrictions","validateRestrictions","getFiles","result","push","info","message","reason","opts","infoTimeout","setPluginState","id","some","promise","then","catch_","loading","catch","err"],"mappings":"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","sourcesContent":["const remoteFileObjToLocal = require('@uppy/utils/lib/remoteFileObjToLocal')\n\nmodule.exports = class SharedHandler {\n  constructor (plugin) {\n    this.plugin = plugin\n    this.filterItems = this.filterItems.bind(this)\n    this.toggleCheckbox = this.toggleCheckbox.bind(this)\n    this.isChecked = this.isChecked.bind(this)\n    this.loaderWrapper = this.loaderWrapper.bind(this)\n  }\n\n  filterItems (items) {\n    const state = this.plugin.getPluginState()\n    if (!state.filterInput || state.filterInput === '') {\n      return items\n    }\n    return items.filter((folder) => {\n      return folder.name.toLowerCase().indexOf(state.filterInput.toLowerCase()) !== -1\n    })\n  }\n\n  /**\n   * Toggles file/folder checkbox to on/off state while updating files list.\n   *\n   * Note that some extra complexity comes from supporting shift+click to\n   * toggle multiple checkboxes at once, which is done by getting all files\n   * in between last checked file and current one.\n   */\n  toggleCheckbox (e, file) {\n    e.stopPropagation()\n    e.preventDefault()\n    e.currentTarget.focus()\n    const { folders, files } = this.plugin.getPluginState()\n    const items = this.filterItems(folders.concat(files))\n\n    // Shift-clicking selects a single consecutive list of items\n    // starting at the previous click and deselects everything else.\n    if (this.lastCheckbox && e.shiftKey) {\n      const prevIndex = items.indexOf(this.lastCheckbox)\n      const currentIndex = items.indexOf(file)\n      const currentSelection = (prevIndex < currentIndex)\n        ? items.slice(prevIndex, currentIndex + 1)\n        : items.slice(currentIndex, prevIndex + 1)\n      const reducedCurrentSelection = []\n\n      // Check restrictions on each file in currentSelection,\n      // reduce it to only contain files that pass restrictions\n      for (const item of currentSelection) {\n        const { uppy } = this.plugin\n        const validatedRestrictions = uppy.validateRestrictions(\n          remoteFileObjToLocal(item),\n          [...uppy.getFiles(), ...reducedCurrentSelection]\n        )\n        if (validatedRestrictions.result) {\n          reducedCurrentSelection.push(item)\n        } else {\n          uppy.info({ message: validatedRestrictions.reason }, 'error', uppy.opts.infoTimeout)\n        }\n      }\n      this.plugin.setPluginState({ currentSelection: reducedCurrentSelection })\n      return\n    }\n\n    this.lastCheckbox = file\n    const { currentSelection } = this.plugin.getPluginState()\n    if (this.isChecked(file)) {\n      this.plugin.setPluginState({\n        currentSelection: currentSelection.filter((item) => item.id !== file.id),\n      })\n    } else {\n      this.plugin.setPluginState({\n        currentSelection: currentSelection.concat([file]),\n      })\n    }\n  }\n\n  isChecked (file) {\n    const { currentSelection } = this.plugin.getPluginState()\n    // comparing id instead of the file object, because the reference to the object\n    // changes when we switch folders, and the file list is updated\n    return currentSelection.some((item) => item.id === file.id)\n  }\n\n  loaderWrapper (promise, then, catch_) {\n    promise\n      .then((result) => {\n        this.plugin.setPluginState({ loading: false })\n        then(result)\n      }).catch((err) => {\n        this.plugin.setPluginState({ loading: false })\n        catch_(err)\n      })\n    this.plugin.setPluginState({ loading: true })\n  }\n}\n"]}