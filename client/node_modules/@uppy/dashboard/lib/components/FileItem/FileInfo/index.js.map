{"version":3,"sources":["index.js"],"names":["h","require","prettierBytes","truncateString","renderFileName","props","maxNameLength","containerWidth","file","meta","name","renderFileSize","size","ReSelectButton","isGhost","toggleAddFilesPanel","i18n","ErrorButton","onClick","error","module","exports","FileInfo","source","alert"],"mappings":";;AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAQC,OAAO,CAAC,QAAD,CAArB;;AACA,MAAMC,aAAa,GAAGD,OAAO,CAAC,6BAAD,CAA7B;;AACA,MAAME,cAAc,GAAGF,OAAO,CAAC,gCAAD,CAA9B;;AAEA,MAAMG,cAAc,GAAIC,KAAD,IAAW;AAChC;AACA,MAAIC,aAAJ,CAFgC,CAGhC;;AACA,MAAID,KAAK,CAACE,cAAN,IAAwB,GAA5B,EAAiC;AAC/BD,IAAAA,aAAa,GAAG,EAAhB,CAD+B,CAEjC;AACC,GAHD,MAGO,IAAID,KAAK,CAACE,cAAN,IAAwB,GAA5B,EAAiC;AACtCD,IAAAA,aAAa,GAAG,EAAhB,CADsC,CAExC;AACC,GAHM,MAGA;AACLA,IAAAA,aAAa,GAAG,EAAhB;AACD;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAA0C,IAAA,KAAK,EAAED,KAAK,CAACG,IAAN,CAAWC,IAAX,CAAgBC;AAAjE,KACGP,cAAc,CAACE,KAAK,CAACG,IAAN,CAAWC,IAAX,CAAgBC,IAAjB,EAAuBJ,aAAvB,CADjB,CADF;AAKD,CAnBD;;AAqBA,MAAMK,cAAc,GAAIN,KAAD,IACrBA,KAAK,CAACG,IAAN,CAAWI,IAAX,IAEE;AAAK,EAAA,SAAS,EAAC;AAAf,GACGV,aAAa,CAACG,KAAK,CAACG,IAAN,CAAWI,IAAZ,CADhB,CAHJ;;AASA,MAAMC,cAAc,GAAIR,KAAD,IACrBA,KAAK,CAACG,IAAN,CAAWM,OAAX,IAEI,gBACG,UADH,EAEE;AACE,EAAA,SAAS,EAAC,sDADZ;AAEE,EAAA,IAAI,EAAC,QAFP;AAGE,EAAA,OAAO,EAAET,KAAK,CAACU;AAHjB,GAKGV,KAAK,CAACW,IAAN,CAAW,UAAX,CALH,CAFF,CAHN;;AAgBA,MAAMC,WAAW,GAAG,CAAC;AAAET,EAAAA,IAAF;AAAQU,EAAAA;AAAR,CAAD,KAAuB;AACzC,MAAIV,IAAI,CAACW,KAAT,EAAgB;AACd,WACE;AACE,MAAA,SAAS,EAAC,kCADZ;AAEE,oBAAYX,IAAI,CAACW,KAFnB;AAGE,gCAAuB,QAHzB;AAIE,4BAAmB,QAJrB;AAKE,MAAA,OAAO,EAAED,OALX;AAME,MAAA,IAAI,EAAC;AANP,WADF;AAYD;;AACD,SAAO,IAAP;AACD,CAhBD;;AAkBAE,MAAM,CAACC,OAAP,GAAiB,SAASC,QAAT,CAAmBjB,KAAnB,EAA0B;AACzC,SACE;AAAK,IAAA,SAAS,EAAC,8BAAf;AAA8C,6BAAuBA,KAAK,CAACG,IAAN,CAAWe;AAAhF,KACGnB,cAAc,CAACC,KAAD,CADjB,EAEE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGM,cAAc,CAACN,KAAD,CADjB,EAEGQ,cAAc,CAACR,KAAD,CAFjB,EAGE,EAAC,WAAD;AACE,IAAA,IAAI,EAAEA,KAAK,CAACG,IADd,CAEE;AAFF;AAGE,IAAA,OAAO,EAAE,MAAMgB,KAAK,CAACnB,KAAK,CAACG,IAAN,CAAWW,KAAZ,CAHtB,CAG0C;;AAH1C,IAHF,CAFF,CADF;AAcD,CAfD","sourcesContent":["const { h } = require('preact')\nconst prettierBytes = require('@transloadit/prettier-bytes')\nconst truncateString = require('@uppy/utils/lib/truncateString')\n\nconst renderFileName = (props) => {\n  // Take up at most 2 lines on any screen\n  let maxNameLength\n  // For very small mobile screens\n  if (props.containerWidth <= 352) {\n    maxNameLength = 35\n  // For regular mobile screens\n  } else if (props.containerWidth <= 576) {\n    maxNameLength = 60\n  // For desktops\n  } else {\n    maxNameLength = 30\n  }\n\n  return (\n    <div className=\"uppy-Dashboard-Item-name\" title={props.file.meta.name}>\n      {truncateString(props.file.meta.name, maxNameLength)}\n    </div>\n  )\n}\n\nconst renderFileSize = (props) => (\n  props.file.size\n    && (\n    <div className=\"uppy-Dashboard-Item-statusSize\">\n      {prettierBytes(props.file.size)}\n    </div>\n    )\n)\n\nconst ReSelectButton = (props) => (\n  props.file.isGhost\n    && (\n      <span>\n        {' \\u2022 '}\n        <button\n          className=\"uppy-u-reset uppy-c-btn uppy-Dashboard-Item-reSelect\"\n          type=\"button\"\n          onClick={props.toggleAddFilesPanel}\n        >\n          {props.i18n('reSelect')}\n        </button>\n      </span>\n    )\n)\n\nconst ErrorButton = ({ file, onClick }) => {\n  if (file.error) {\n    return (\n      <button\n        className=\"uppy-Dashboard-Item-errorDetails\"\n        aria-label={file.error}\n        data-microtip-position=\"bottom\"\n        data-microtip-size=\"medium\"\n        onClick={onClick}\n        type=\"button\"\n      >\n        ?\n      </button>\n    )\n  }\n  return null\n}\n\nmodule.exports = function FileInfo (props) {\n  return (\n    <div className=\"uppy-Dashboard-Item-fileInfo\" data-uppy-file-source={props.file.source}>\n      {renderFileName(props)}\n      <div className=\"uppy-Dashboard-Item-status\">\n        {renderFileSize(props)}\n        {ReSelectButton(props)}\n        <ErrorButton\n          file={props.file}\n          // eslint-disable-next-line no-alert\n          onClick={() => alert(props.file.error)} // TODO: move to a custom alert implementation\n        />\n      </div>\n    </div>\n  )\n}\n"]}