{"version":3,"sources":["index.js"],"names":["h","require","UIPlugin","StatusBar","Informer","ThumbnailGenerator","findAllDOMElements","toArray","getDroppedFiles","getTextDirection","nanoid","trapFocus","createSuperFocus","memoize","default","FOCUSABLE_ELEMENTS","DashboardUI","TAB_KEY","ESC_KEY","createPromise","o","promise","Promise","resolve","reject","defaultPickerIcon","module","exports","Dashboard","constructor","uppy","opts","removeTarget","plugin","pluginState","getPluginState","newTargets","targets","filter","target","id","setPluginState","addTarget","callerPluginId","name","callerPluginName","title","callerPluginType","type","msg","log","state","slice","push","el","hideAllPanels","update","activePickerPanel","showAddFilesPanel","activeOverlayType","fileCardFor","showFileEditor","showPanel","canEditFile","file","editors","some","getPlugin","openFileEditor","forEach","editor","selectFile","saveFileEditor","save","openModal","savedScrollPosition","window","pageYOffset","savedActiveElement","document","activeElement","disablePageScrollWhenModalOpen","body","classList","add","animateOpenClose","isClosing","handler","isHidden","removeEventListener","addEventListener","browserBackButtonClose","updateBrowserHistory","handleKeyDownInModal","emit","closeModal","manualClose","remove","superFocus","cancel","focus","history","modalName","back","isModalOpen","requestCloseModal","onRequestCloseModal","setDarkModeCapability","isDarkModeOn","capabilities","getState","setState","darkMode","handleSystemDarkModeChange","event","isDarkModeOnNow","matches","toggleFileCard","show","fileID","getFile","toggleAddFilesPanel","addFiles","files","descriptors","map","source","data","meta","relativePath","err","startListeningToResize","resizeObserver","ResizeObserver","entries","uppyDashboardInnerEl","width","height","contentRect","containerWidth","containerHeight","areInsidesReadyToBeVisible","observe","querySelector","makeDashboardInsidesVisibleAnywayTimeout","setTimeout","isModalAndClosed","inline","stopListeningToResize","disconnect","clearTimeout","recordIfFocusedOnUppyRecently","contains","ifFocusedOnUppyRecently","disableAllFocusableElements","disable","focusableNodes","querySelectorAll","node","currentTabIndex","getAttribute","dataset","inertTabindex","setAttribute","removeAttribute","dashboardIsDisabled","pushState","handlePopState","keyCode","forModal","handleClickOutside","closeModalOnClickOutside","handlePaste","iteratePlugins","handleRootPaste","clipboardData","handleInputChange","preventDefault","handleDragOver","stopPropagation","disabled","disableLocalFiles","allowNewUpload","dataTransfer","dropEffect","removeDragOverClassTimeout","isDraggingOver","handleDragLeave","handleDrop","handleRootDrop","executedDropErrorOnce","logDropError","error","info","message","then","length","handleRequestThumbnail","waitForThumbnailsBeforeUpload","handleCancelThumbnail","handleKeyDownInInline","forInline","handlePasteOnBody","isFocusInOverlay","handleComplete","failed","closeAfterFinish","handleCancelRestore","firstFile","initEvents","trigger","showModalTrigger","on","autoOpenFileEditor","removeEvents","off","superFocusOnEachUpdate","isFocusInUppy","isFocusNowhere","isInformerHidden","isModal","afterUpdate","saveFileCard","setFileMeta","icon","render","isSupported","newFiles","uploadStartedFiles","completeFiles","erroredFiles","inProgressFiles","inProgressNotPausedFiles","processingFiles","isUploadStarted","isAllComplete","isAllErrored","isAllPaused","getObjectOfFilesPerState","acquirers","progressindicators","theme","indexOf","fileManagerSelectionType","console","warn","totalFileCount","Object","keys","totalProgress","direction","autoProceed","i18n","i18nArray","note","recoveredState","metaFields","resumableUploads","individualCancellation","isMobileDevice","showLinkToFileUploadResult","proudlyDisplayPoweredByUppy","hideCancelButton","hideRetryButton","hidePauseResumeButton","showRemoveButtonAfterComplete","isTargetDOMEl","parentElement","allowedFileTypes","restrictions","maxNumberOfFiles","requiredMetaFields","showSelectedFiles","discoverProviderPlugins","install","Error","allowMultipleUploads","allowMultipleUploadBatches","mount","plugins","pluginID","disableStatusBar","use","hideUploadButton","showProgressDetails","hideAfterFinish","hideProgressAfterFinish","locale","doneButtonHandler","disableInformer","disableThumbnailGenerator","thumbnailWidth","thumbnailType","lazy","darkModeMediaQuery","matchMedia","isDarkModeOnFromTheStart","addListener","uninstall","informer","removePlugin","statusBar","thumbnail","unmount","removeListener","defaultLocale","strings","importFrom","addingMoreFiles","addMoreFiles","dashboardWindowTitle","dashboardTitle","copyLinkToClipboardSuccess","copyLinkToClipboardFallback","copyLink","addMore","removeFile","editFile","editFileWithFilename","editing","finishEditingFile","saveChanges","myDevice","dropPasteFiles","dropPasteFolders","dropPasteBoth","dropPasteImportFiles","dropPasteImportFolders","dropPasteImportBoth","importFiles","dropHint","browseFiles","browseFolders","uploadComplete","uploadPaused","resumeUpload","pauseUpload","retryUpload","cancelUpload","xFilesSelected","uploadingXFiles","processingXFiles","recoveredXFiles","recoveredAllFiles","sessionRestored","reSelect","poweredBy","defaultOptions","reset","i18nInit","onMount","element","dir","VERSION"],"mappings":"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","sourcesContent":["const { h } = require('preact')\nconst { UIPlugin } = require('@uppy/core')\nconst StatusBar = require('@uppy/status-bar')\nconst Informer = require('@uppy/informer')\nconst ThumbnailGenerator = require('@uppy/thumbnail-generator')\nconst findAllDOMElements = require('@uppy/utils/lib/findAllDOMElements')\nconst toArray = require('@uppy/utils/lib/toArray')\nconst getDroppedFiles = require('@uppy/utils/lib/getDroppedFiles')\nconst getTextDirection = require('@uppy/utils/lib/getTextDirection')\nconst { nanoid } = require('nanoid')\nconst trapFocus = require('./utils/trapFocus')\nconst createSuperFocus = require('./utils/createSuperFocus')\nconst memoize = require('memoize-one').default || require('memoize-one')\nconst FOCUSABLE_ELEMENTS = require('@uppy/utils/lib/FOCUSABLE_ELEMENTS')\nconst DashboardUI = require('./components/Dashboard')\n\nconst TAB_KEY = 9\nconst ESC_KEY = 27\n\nfunction createPromise () {\n  const o = {}\n  o.promise = new Promise((resolve, reject) => {\n    o.resolve = resolve\n    o.reject = reject\n  })\n  return o\n}\n\nfunction defaultPickerIcon () {\n  return (\n    <svg aria-hidden=\"true\" focusable=\"false\" width=\"30\" height=\"30\" viewBox=\"0 0 30 30\">\n      <path d=\"M15 30c8.284 0 15-6.716 15-15 0-8.284-6.716-15-15-15C6.716 0 0 6.716 0 15c0 8.284 6.716 15 15 15zm4.258-12.676v6.846h-8.426v-6.846H5.204l9.82-12.364 9.82 12.364H19.26z\" />\n    </svg>\n  )\n}\n\n/**\n * Dashboard UI with previews, metadata editing, tabs for various services and more\n */\nmodule.exports = class Dashboard extends UIPlugin {\n  static VERSION = require('../package.json').version\n\n  constructor (uppy, opts) {\n    super(uppy, opts)\n    this.id = this.opts.id || 'Dashboard'\n    this.title = 'Dashboard'\n    this.type = 'orchestrator'\n    this.modalName = `uppy-Dashboard-${nanoid()}`\n\n    this.defaultLocale = {\n      strings: {\n        closeModal: 'Close Modal',\n        importFrom: 'Import from %{name}',\n        addingMoreFiles: 'Adding more files',\n        addMoreFiles: 'Add more files',\n        dashboardWindowTitle: 'File Uploader Window (Press escape to close)',\n        dashboardTitle: 'File Uploader',\n        copyLinkToClipboardSuccess: 'Link copied to clipboard',\n        copyLinkToClipboardFallback: 'Copy the URL below',\n        copyLink: 'Copy link',\n        back: 'Back',\n        addMore: 'Add more',\n        removeFile: 'Remove file %{file}',\n        editFile: 'Edit file',\n        editFileWithFilename: 'Edit file %{file}',\n        editing: 'Editing %{file}',\n        finishEditingFile: 'Finish editing file',\n        save: 'Save',\n        saveChanges: 'Save changes',\n        cancel: 'Cancel',\n        myDevice: 'My Device',\n        dropPasteFiles: 'Drop files here or %{browseFiles}',\n        dropPasteFolders: 'Drop files here or %{browseFolders}',\n        dropPasteBoth: 'Drop files here, %{browseFiles} or %{browseFolders}',\n        dropPasteImportFiles: 'Drop files here, %{browseFiles} or import from:',\n        dropPasteImportFolders: 'Drop files here, %{browseFolders} or import from:',\n        dropPasteImportBoth: 'Drop files here, %{browseFiles}, %{browseFolders} or import from:',\n        importFiles: 'Import files from:',\n        dropHint: 'Drop your files here',\n        browseFiles: 'browse files',\n        browseFolders: 'browse folders',\n        uploadComplete: 'Upload complete',\n        uploadPaused: 'Upload paused',\n        resumeUpload: 'Resume upload',\n        pauseUpload: 'Pause upload',\n        retryUpload: 'Retry upload',\n        cancelUpload: 'Cancel upload',\n        xFilesSelected: {\n          0: '%{smart_count} file selected',\n          1: '%{smart_count} files selected',\n        },\n        uploadingXFiles: {\n          0: 'Uploading %{smart_count} file',\n          1: 'Uploading %{smart_count} files',\n        },\n        processingXFiles: {\n          0: 'Processing %{smart_count} file',\n          1: 'Processing %{smart_count} files',\n        },\n        recoveredXFiles: {\n          0: 'We could not fully recover 1 file. Please re-select it and resume the upload.',\n          1: 'We could not fully recover %{smart_count} files. Please re-select them and resume the upload.',\n        },\n        recoveredAllFiles: 'We restored all files. You can now resume the upload.',\n        sessionRestored: 'Session restored',\n        reSelect: 'Re-select',\n        poweredBy: 'Powered by %{uppy}',\n      },\n    }\n\n    // set default options\n    const defaultOptions = {\n      target: 'body',\n      metaFields: [],\n      trigger: null,\n      inline: false,\n      width: 750,\n      height: 550,\n      thumbnailWidth: 280,\n      thumbnailType: 'image/jpeg',\n      waitForThumbnailsBeforeUpload: false,\n      defaultPickerIcon,\n      showLinkToFileUploadResult: false,\n      showProgressDetails: false,\n      hideUploadButton: false,\n      hideCancelButton: false,\n      hideRetryButton: false,\n      hidePauseResumeButton: false,\n      hideProgressAfterFinish: false,\n      doneButtonHandler: () => {\n        this.uppy.reset()\n        this.requestCloseModal()\n      },\n      note: null,\n      closeModalOnClickOutside: false,\n      closeAfterFinish: false,\n      disableStatusBar: false,\n      disableInformer: false,\n      disableThumbnailGenerator: false,\n      disablePageScrollWhenModalOpen: true,\n      animateOpenClose: true,\n      fileManagerSelectionType: 'files',\n      proudlyDisplayPoweredByUppy: true,\n      onRequestCloseModal: () => this.closeModal(),\n      showSelectedFiles: true,\n      showRemoveButtonAfterComplete: false,\n      browserBackButtonClose: false,\n      theme: 'light',\n      autoOpenFileEditor: false,\n      disabled: false,\n      disableLocalFiles: false,\n    }\n\n    // merge default options with the ones set by user\n    this.opts = { ...defaultOptions, ...opts }\n\n    this.i18nInit()\n\n    this.superFocus = createSuperFocus()\n    this.ifFocusedOnUppyRecently = false\n\n    // Timeouts\n    this.makeDashboardInsidesVisibleAnywayTimeout = null\n    this.removeDragOverClassTimeout = null\n  }\n\n  removeTarget = (plugin) => {\n    const pluginState = this.getPluginState()\n    // filter out the one we want to remove\n    const newTargets = pluginState.targets.filter(target => target.id !== plugin.id)\n\n    this.setPluginState({\n      targets: newTargets,\n    })\n  }\n\n  addTarget = (plugin) => {\n    const callerPluginId = plugin.id || plugin.constructor.name\n    const callerPluginName = plugin.title || callerPluginId\n    const callerPluginType = plugin.type\n\n    if (callerPluginType !== 'acquirer'\n        && callerPluginType !== 'progressindicator'\n        && callerPluginType !== 'editor') {\n      const msg = 'Dashboard: can only be targeted by plugins of types: acquirer, progressindicator, editor'\n      this.uppy.log(msg, 'error')\n      return\n    }\n\n    const target = {\n      id: callerPluginId,\n      name: callerPluginName,\n      type: callerPluginType,\n    }\n\n    const state = this.getPluginState()\n    const newTargets = state.targets.slice()\n    newTargets.push(target)\n\n    this.setPluginState({\n      targets: newTargets,\n    })\n\n    return this.el\n  }\n\n  hideAllPanels = () => {\n    const state = this.getPluginState()\n    const update = {\n      activePickerPanel: false,\n      showAddFilesPanel: false,\n      activeOverlayType: null,\n      fileCardFor: null,\n      showFileEditor: false,\n    }\n\n    if (state.activePickerPanel === update.activePickerPanel\n        && state.showAddFilesPanel === update.showAddFilesPanel\n        && state.showFileEditor === update.showFileEditor\n        && state.activeOverlayType === update.activeOverlayType) {\n      // avoid doing a state update if nothing changed\n      return\n    }\n\n    this.setPluginState(update)\n  }\n\n  showPanel = (id) => {\n    const { targets } = this.getPluginState()\n\n    const activePickerPanel = targets.filter((target) => {\n      return target.type === 'acquirer' && target.id === id\n    })[0]\n\n    this.setPluginState({\n      activePickerPanel,\n      activeOverlayType: 'PickerPanel',\n    })\n  }\n\n  canEditFile = (file) => {\n    const { targets } = this.getPluginState()\n    const editors = this.#getEditors(targets)\n\n    return editors.some((target) => (\n      this.uppy.getPlugin(target.id).canEditFile(file)\n    ))\n  }\n\n  openFileEditor = (file) => {\n    const { targets } = this.getPluginState()\n    const editors = this.#getEditors(targets)\n\n    this.setPluginState({\n      showFileEditor: true,\n      fileCardFor: file.id || null,\n      activeOverlayType: 'FileEditor',\n    })\n\n    editors.forEach((editor) => {\n      this.uppy.getPlugin(editor.id).selectFile(file)\n    })\n  }\n\n  saveFileEditor = () => {\n    const { targets } = this.getPluginState()\n    const editors = this.#getEditors(targets)\n\n    editors.forEach((editor) => {\n      this.uppy.getPlugin(editor.id).save()\n    })\n\n    this.hideAllPanels()\n  }\n\n  openModal = () => {\n    const { promise, resolve } = createPromise()\n    // save scroll position\n    this.savedScrollPosition = window.pageYOffset\n    // save active element, so we can restore focus when modal is closed\n    this.savedActiveElement = document.activeElement\n\n    if (this.opts.disablePageScrollWhenModalOpen) {\n      document.body.classList.add('uppy-Dashboard-isFixed')\n    }\n\n    if (this.opts.animateOpenClose && this.getPluginState().isClosing) {\n      const handler = () => {\n        this.setPluginState({\n          isHidden: false,\n        })\n        this.el.removeEventListener('animationend', handler, false)\n        resolve()\n      }\n      this.el.addEventListener('animationend', handler, false)\n    } else {\n      this.setPluginState({\n        isHidden: false,\n      })\n      resolve()\n    }\n\n    if (this.opts.browserBackButtonClose) {\n      this.updateBrowserHistory()\n    }\n\n    // handle ESC and TAB keys in modal dialog\n    document.addEventListener('keydown', this.handleKeyDownInModal)\n\n    this.uppy.emit('dashboard:modal-open')\n\n    return promise\n  }\n\n  closeModal = (opts = {}) => {\n    const {\n      // Whether the modal is being closed by the user (`true`) or by other means (e.g. browser back button)\n      manualClose = true,\n    } = opts\n\n    const { isHidden, isClosing } = this.getPluginState()\n    if (isHidden || isClosing) {\n      // short-circuit if animation is ongoing\n      return\n    }\n\n    const { promise, resolve } = createPromise()\n\n    if (this.opts.disablePageScrollWhenModalOpen) {\n      document.body.classList.remove('uppy-Dashboard-isFixed')\n    }\n\n    if (this.opts.animateOpenClose) {\n      this.setPluginState({\n        isClosing: true,\n      })\n      const handler = () => {\n        this.setPluginState({\n          isHidden: true,\n          isClosing: false,\n        })\n\n        this.superFocus.cancel()\n        this.savedActiveElement.focus()\n\n        this.el.removeEventListener('animationend', handler, false)\n        resolve()\n      }\n      this.el.addEventListener('animationend', handler, false)\n    } else {\n      this.setPluginState({\n        isHidden: true,\n      })\n\n      this.superFocus.cancel()\n      this.savedActiveElement.focus()\n\n      resolve()\n    }\n\n    // handle ESC and TAB keys in modal dialog\n    document.removeEventListener('keydown', this.handleKeyDownInModal)\n\n    if (manualClose) {\n      if (this.opts.browserBackButtonClose) {\n        // Make sure that the latest entry in the history state is our modal name\n        // eslint-disable-next-line no-restricted-globals\n        if (history.state?.[this.modalName]) {\n          // Go back in history to clear out the entry we created (ultimately closing the modal)\n          // eslint-disable-next-line no-restricted-globals\n          history.back()\n        }\n      }\n    }\n\n    this.uppy.emit('dashboard:modal-closed')\n\n    return promise\n  }\n\n  isModalOpen = () => {\n    return !this.getPluginState().isHidden || false\n  }\n\n  requestCloseModal = () => {\n    if (this.opts.onRequestCloseModal) {\n      return this.opts.onRequestCloseModal()\n    }\n    return this.closeModal()\n  }\n\n  setDarkModeCapability = (isDarkModeOn) => {\n    const { capabilities } = this.uppy.getState()\n    this.uppy.setState({\n      capabilities: {\n        ...capabilities,\n        darkMode: isDarkModeOn,\n      },\n    })\n  }\n\n  handleSystemDarkModeChange = (event) => {\n    const isDarkModeOnNow = event.matches\n    this.uppy.log(`[Dashboard] Dark mode is ${isDarkModeOnNow ? 'on' : 'off'}`)\n    this.setDarkModeCapability(isDarkModeOnNow)\n  }\n\n  toggleFileCard = (show, fileID) => {\n    const file = this.uppy.getFile(fileID)\n    if (show) {\n      this.uppy.emit('dashboard:file-edit-start', file)\n    } else {\n      this.uppy.emit('dashboard:file-edit-complete', file)\n    }\n\n    this.setPluginState({\n      fileCardFor: show ? fileID : null,\n      activeOverlayType: show ? 'FileCard' : null,\n    })\n  }\n\n  toggleAddFilesPanel = (show) => {\n    this.setPluginState({\n      showAddFilesPanel: show,\n      activeOverlayType: show ? 'AddFiles' : null,\n    })\n  }\n\n  addFiles = (files) => {\n    const descriptors = files.map((file) => ({\n      source: this.id,\n      name: file.name,\n      type: file.type,\n      data: file,\n      meta: {\n        // path of the file relative to the ancestor directory the user selected.\n        // e.g. 'docs/Old Prague/airbnb.pdf'\n        relativePath: file.relativePath || null,\n      },\n    }))\n\n    try {\n      this.uppy.addFiles(descriptors)\n    } catch (err) {\n      this.uppy.log(err)\n    }\n  }\n\n  // ___Why make insides of Dashboard invisible until first ResizeObserver event is emitted?\n  //    ResizeOberserver doesn't emit the first resize event fast enough, users can see the jump from one .uppy-size-- to\n  //    another (e.g. in Safari)\n  // ___Why not apply visibility property to .uppy-Dashboard-inner?\n  //    Because ideally, acc to specs, ResizeObserver should see invisible elements as of width 0. So even though applying\n  //    invisibility to .uppy-Dashboard-inner works now, it may not work in the future.\n  startListeningToResize = () => {\n    // Watch for Dashboard container (`.uppy-Dashboard-inner`) resize\n    // and update containerWidth/containerHeight in plugin state accordingly.\n    // Emits first event on initialization.\n    this.resizeObserver = new ResizeObserver((entries) => {\n      const uppyDashboardInnerEl = entries[0]\n\n      const { width, height } = uppyDashboardInnerEl.contentRect\n\n      this.uppy.log(`[Dashboard] resized: ${width} / ${height}`, 'debug')\n\n      this.setPluginState({\n        containerWidth: width,\n        containerHeight: height,\n        areInsidesReadyToBeVisible: true,\n      })\n    })\n    this.resizeObserver.observe(this.el.querySelector('.uppy-Dashboard-inner'))\n\n    // If ResizeObserver fails to emit an event telling us what size to use - default to the mobile view\n    this.makeDashboardInsidesVisibleAnywayTimeout = setTimeout(() => {\n      const pluginState = this.getPluginState()\n      const isModalAndClosed = !this.opts.inline && pluginState.isHidden\n      if (\n        // if ResizeObserver hasn't yet fired,\n        !pluginState.areInsidesReadyToBeVisible\n        // and it's not due to the modal being closed\n        && !isModalAndClosed\n      ) {\n        this.uppy.log(\"[Dashboard] resize event didn't fire on time: defaulted to mobile layout\", 'debug')\n\n        this.setPluginState({\n          areInsidesReadyToBeVisible: true,\n        })\n      }\n    }, 1000)\n  }\n\n  stopListeningToResize = () => {\n    this.resizeObserver.disconnect()\n\n    clearTimeout(this.makeDashboardInsidesVisibleAnywayTimeout)\n  }\n\n  // Records whether we have been interacting with uppy right now,\n  // which is then used to determine whether state updates should trigger a refocusing.\n  recordIfFocusedOnUppyRecently = (event) => {\n    if (this.el.contains(event.target)) {\n      this.ifFocusedOnUppyRecently = true\n    } else {\n      this.ifFocusedOnUppyRecently = false\n      // ___Why run this.superFocus.cancel here when it already runs in superFocusOnEachUpdate?\n      //    Because superFocus is debounced, when we move from Uppy to some other element on the page,\n      //    previously run superFocus sometimes hits and moves focus back to Uppy.\n      this.superFocus.cancel()\n    }\n  }\n\n  disableAllFocusableElements = (disable) => {\n    const focusableNodes = toArray(this.el.querySelectorAll(FOCUSABLE_ELEMENTS))\n    if (disable) {\n      focusableNodes.forEach((node) => {\n        // save previous tabindex in a data-attribute, to restore when enabling\n        const currentTabIndex = node.getAttribute('tabindex')\n        if (currentTabIndex) {\n          node.dataset.inertTabindex = currentTabIndex\n        }\n        node.setAttribute('tabindex', '-1')\n      })\n    } else {\n      focusableNodes.forEach((node) => {\n        if ('inertTabindex' in node.dataset) {\n          node.setAttribute('tabindex', node.dataset.inertTabindex)\n        } else {\n          node.removeAttribute('tabindex')\n        }\n      })\n    }\n    this.dashboardIsDisabled = disable\n  }\n\n  updateBrowserHistory = () => {\n    // Ensure history state does not already contain our modal name to avoid double-pushing\n    // eslint-disable-next-line no-restricted-globals\n    if (!history.state?.[this.modalName]) {\n      // Push to history so that the page is not lost on browser back button press\n      // eslint-disable-next-line no-restricted-globals\n      history.pushState({\n        // eslint-disable-next-line no-restricted-globals\n        ...history.state,\n        [this.modalName]: true,\n      }, '')\n    }\n\n    // Listen for back button presses\n    window.addEventListener('popstate', this.handlePopState, false)\n  }\n\n  handlePopState = (event) => {\n    // Close the modal if the history state no longer contains our modal name\n    if (this.isModalOpen() && (!event.state || !event.state[this.modalName])) {\n      this.closeModal({ manualClose: false })\n    }\n\n    // When the browser back button is pressed and uppy is now the latest entry\n    // in the history but the modal is closed, fix the history by removing the\n    // uppy history entry.\n    // This occurs when another entry is added into the history state while the\n    // modal is open, and then the modal gets manually closed.\n    // Solves PR #575 (https://github.com/transloadit/uppy/pull/575)\n    if (!this.isModalOpen() && event.state?.[this.modalName]) {\n      // eslint-disable-next-line no-restricted-globals\n      history.back()\n    }\n  }\n\n  handleKeyDownInModal = (event) => {\n    // close modal on esc key press\n    if (event.keyCode === ESC_KEY) this.requestCloseModal(event)\n    // trap focus on tab key press\n    if (event.keyCode === TAB_KEY) trapFocus.forModal(event, this.getPluginState().activeOverlayType, this.el)\n  }\n\n  handleClickOutside = () => {\n    if (this.opts.closeModalOnClickOutside) this.requestCloseModal()\n  }\n\n  handlePaste = (event) => {\n    // 1. Let any acquirer plugin (Url/Webcam/etc.) handle pastes to the root\n    this.uppy.iteratePlugins((plugin) => {\n      if (plugin.type === 'acquirer') {\n        // Every Plugin with .type acquirer can define handleRootPaste(event)\n        plugin.handleRootPaste?.(event)\n      }\n    })\n\n    // 2. Add all dropped files\n    const files = toArray(event.clipboardData.files)\n    this.addFiles(files)\n  }\n\n  handleInputChange = (event) => {\n    event.preventDefault()\n    const files = toArray(event.target.files)\n    this.addFiles(files)\n  }\n\n  handleDragOver = (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n\n    if (this.opts.disabled\n      || this.opts.disableLocalFiles\n      || !this.uppy.getState().allowNewUpload) {\n      return\n    }\n\n    // 1. Add a small (+) icon on drop\n    // (and prevent browsers from interpreting this as files being _moved_ into the\n    // browser, https://github.com/transloadit/uppy/issues/1978).\n    event.dataTransfer.dropEffect = 'copy'\n\n    clearTimeout(this.removeDragOverClassTimeout)\n    this.setPluginState({ isDraggingOver: true })\n  }\n\n  handleDragLeave = (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n\n    if (this.opts.disabled\n      || this.opts.disableLocalFiles\n      || !this.uppy.getState().allowNewUpload) {\n      return\n    }\n\n    clearTimeout(this.removeDragOverClassTimeout)\n    // Timeout against flickering, this solution is taken from drag-drop library.\n    // Solution with 'pointer-events: none' didn't work across browsers.\n    this.removeDragOverClassTimeout = setTimeout(() => {\n      this.setPluginState({ isDraggingOver: false })\n    }, 50)\n  }\n\n  handleDrop = (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n\n    if (this.opts.disabled\n        || this.opts.disableLocalFiles\n        || !this.uppy.getState().allowNewUpload) {\n      return\n    }\n\n    clearTimeout(this.removeDragOverClassTimeout)\n\n    // 2. Remove dragover class\n    this.setPluginState({ isDraggingOver: false })\n\n    // 3. Let any acquirer plugin (Url/Webcam/etc.) handle drops to the root\n    this.uppy.iteratePlugins((plugin) => {\n      if (plugin.type === 'acquirer') {\n        // Every Plugin with .type acquirer can define handleRootDrop(event)\n        plugin.handleRootDrop?.(event)\n      }\n    })\n\n    // 4. Add all dropped files\n    let executedDropErrorOnce = false\n    const logDropError = (error) => {\n      this.uppy.log(error, 'error')\n\n      // In practice all drop errors are most likely the same, so let's just show one to avoid overwhelming the user\n      if (!executedDropErrorOnce) {\n        this.uppy.info(error.message, 'error')\n        executedDropErrorOnce = true\n      }\n    }\n\n    getDroppedFiles(event.dataTransfer, { logDropError })\n      .then((files) => {\n        if (files.length > 0) {\n          this.uppy.log('[Dashboard] Files were dropped')\n          this.addFiles(files)\n        }\n      })\n  }\n\n  handleRequestThumbnail = (file) => {\n    if (!this.opts.waitForThumbnailsBeforeUpload) {\n      this.uppy.emit('thumbnail:request', file)\n    }\n  }\n\n  /**\n   * We cancel thumbnail requests when a file item component unmounts to avoid\n   * clogging up the queue when the user scrolls past many elements.\n   */\n  handleCancelThumbnail = (file) => {\n    if (!this.opts.waitForThumbnailsBeforeUpload) {\n      this.uppy.emit('thumbnail:cancel', file)\n    }\n  }\n\n  handleKeyDownInInline = (event) => {\n    // Trap focus on tab key press.\n    if (event.keyCode === TAB_KEY) trapFocus.forInline(event, this.getPluginState().activeOverlayType, this.el)\n  }\n\n  // ___Why do we listen to the 'paste' event on a document instead of onPaste={props.handlePaste} prop,\n  //    or this.el.addEventListener('paste')?\n  //    Because (at least) Chrome doesn't handle paste if focus is on some button, e.g. 'My Device'.\n  //    => Therefore, the best option is to listen to all 'paste' events, and only react to them when we are focused on our\n  //       particular Uppy instance.\n  // ___Why do we still need onPaste={props.handlePaste} for the DashboardUi?\n  //    Because if we click on the 'Drop files here' caption e.g., `document.activeElement` will be 'body'. Which means our\n  //    standard determination of whether we're pasting into our Uppy instance won't work.\n  //    => Therefore, we need a traditional onPaste={props.handlePaste} handler too.\n  handlePasteOnBody = (event) => {\n    const isFocusInOverlay = this.el.contains(document.activeElement)\n    if (isFocusInOverlay) {\n      this.handlePaste(event)\n    }\n  }\n\n  handleComplete = ({ failed }) => {\n    if (this.opts.closeAfterFinish && failed.length === 0) {\n      // All uploads are done\n      this.requestCloseModal()\n    }\n  }\n\n  handleCancelRestore = () => {\n    this.uppy.emit('restore-canceled')\n  }\n\n  #openFileEditorWhenFilesAdded = (files) => {\n    const firstFile = files[0]\n    if (this.canEditFile(firstFile)) {\n      this.openFileEditor(firstFile)\n    }\n  }\n\n  initEvents = () => {\n    // Modal open button\n    if (this.opts.trigger && !this.opts.inline) {\n      const showModalTrigger = findAllDOMElements(this.opts.trigger)\n      if (showModalTrigger) {\n        showModalTrigger.forEach(trigger => trigger.addEventListener('click', this.openModal))\n      } else {\n        this.uppy.log('Dashboard modal trigger not found. Make sure `trigger` is set in Dashboard options, unless you are planning to call `dashboard.openModal()` method yourself', 'warning')\n      }\n    }\n\n    this.startListeningToResize()\n    document.addEventListener('paste', this.handlePasteOnBody)\n\n    this.uppy.on('plugin-remove', this.removeTarget)\n    this.uppy.on('file-added', this.hideAllPanels)\n    this.uppy.on('dashboard:modal-closed', this.hideAllPanels)\n    this.uppy.on('file-editor:complete', this.hideAllPanels)\n    this.uppy.on('complete', this.handleComplete)\n\n    // ___Why fire on capture?\n    //    Because this.ifFocusedOnUppyRecently needs to change before onUpdate() fires.\n    document.addEventListener('focus', this.recordIfFocusedOnUppyRecently, true)\n    document.addEventListener('click', this.recordIfFocusedOnUppyRecently, true)\n\n    if (this.opts.inline) {\n      this.el.addEventListener('keydown', this.handleKeyDownInInline)\n    }\n\n    if (this.opts.autoOpenFileEditor) {\n      this.uppy.on('files-added', this.#openFileEditorWhenFilesAdded)\n    }\n  }\n\n  removeEvents = () => {\n    const showModalTrigger = findAllDOMElements(this.opts.trigger)\n    if (!this.opts.inline && showModalTrigger) {\n      showModalTrigger.forEach(trigger => trigger.removeEventListener('click', this.openModal))\n    }\n\n    this.stopListeningToResize()\n    document.removeEventListener('paste', this.handlePasteOnBody)\n\n    window.removeEventListener('popstate', this.handlePopState, false)\n    this.uppy.off('plugin-remove', this.removeTarget)\n    this.uppy.off('file-added', this.hideAllPanels)\n    this.uppy.off('dashboard:modal-closed', this.hideAllPanels)\n    this.uppy.off('file-editor:complete', this.hideAllPanels)\n    this.uppy.off('complete', this.handleComplete)\n\n    document.removeEventListener('focus', this.recordIfFocusedOnUppyRecently)\n    document.removeEventListener('click', this.recordIfFocusedOnUppyRecently)\n\n    if (this.opts.inline) {\n      this.el.removeEventListener('keydown', this.handleKeyDownInInline)\n    }\n\n    if (this.opts.autoOpenFileEditor) {\n      this.uppy.off('files-added', this.#openFileEditorWhenFilesAdded)\n    }\n  }\n\n  superFocusOnEachUpdate = () => {\n    const isFocusInUppy = this.el.contains(document.activeElement)\n    // When focus is lost on the page (== focus is on body for most browsers, or focus is null for IE11)\n    const isFocusNowhere = document.activeElement === document.body || document.activeElement === null\n    const isInformerHidden = this.uppy.getState().info.isHidden\n    const isModal = !this.opts.inline\n\n    if (\n      // If update is connected to showing the Informer - let the screen reader calmly read it.\n      isInformerHidden\n      && (\n        // If we are in a modal - always superfocus without concern for other elements\n        // on the page (user is unlikely to want to interact with the rest of the page)\n        isModal\n        // If we are already inside of Uppy, or\n        || isFocusInUppy\n        // If we are not focused on anything BUT we have already, at least once, focused on uppy\n        //   1. We focus when isFocusNowhere, because when the element we were focused\n        //      on disappears (e.g. an overlay), - focus gets lost. If user is typing\n        //      something somewhere else on the page, - focus won't be 'nowhere'.\n        //   2. We only focus when focus is nowhere AND this.ifFocusedOnUppyRecently,\n        //      to avoid focus jumps if we do something else on the page.\n        //   [Practical check] Without '&& this.ifFocusedOnUppyRecently', in Safari, in inline mode,\n        //                     when file is uploading, - navigate via tab to the checkbox,\n        //                     try to press space multiple times. Focus will jump to Uppy.\n        || (isFocusNowhere && this.ifFocusedOnUppyRecently)\n      )\n    ) {\n      this.superFocus(this.el, this.getPluginState().activeOverlayType)\n    } else {\n      this.superFocus.cancel()\n    }\n  }\n\n  afterUpdate = () => {\n    if (this.opts.disabled && !this.dashboardIsDisabled) {\n      this.disableAllFocusableElements(true)\n      return\n    }\n\n    if (!this.opts.disabled && this.dashboardIsDisabled) {\n      this.disableAllFocusableElements(false)\n    }\n\n    this.superFocusOnEachUpdate()\n  }\n\n  saveFileCard = (meta, fileID) => {\n    this.uppy.setFileMeta(fileID, meta)\n    this.toggleFileCard(false, fileID)\n  }\n\n  #attachRenderFunctionToTarget = (target) => {\n    const plugin = this.uppy.getPlugin(target.id)\n    return {\n      ...target,\n      icon: plugin.icon || this.opts.defaultPickerIcon,\n      render: plugin.render,\n    }\n  }\n\n  #isTargetSupported = (target) => {\n    const plugin = this.uppy.getPlugin(target.id)\n    // If the plugin does not provide a `supported` check, assume the plugin works everywhere.\n    if (typeof plugin.isSupported !== 'function') {\n      return true\n    }\n    return plugin.isSupported()\n  }\n\n  #getAcquirers = memoize((targets) => {\n    return targets\n      .filter(target => target.type === 'acquirer' && this.#isTargetSupported(target))\n      .map(this.#attachRenderFunctionToTarget)\n  })\n\n  #getProgressIndicators = memoize((targets) => {\n    return targets\n      .filter(target => target.type === 'progressindicator')\n      .map(this.#attachRenderFunctionToTarget)\n  })\n\n  #getEditors = memoize((targets) => {\n    return targets\n      .filter(target => target.type === 'editor')\n      .map(this.#attachRenderFunctionToTarget)\n  })\n\n  render = (state) => {\n    const pluginState = this.getPluginState()\n    const { files, capabilities, allowNewUpload } = state\n    const {\n      newFiles,\n      uploadStartedFiles,\n      completeFiles,\n      erroredFiles,\n      inProgressFiles,\n      inProgressNotPausedFiles,\n      processingFiles,\n\n      isUploadStarted,\n      isAllComplete,\n      isAllErrored,\n      isAllPaused,\n    } = this.uppy.getObjectOfFilesPerState()\n\n    const acquirers = this.#getAcquirers(pluginState.targets)\n    const progressindicators = this.#getProgressIndicators(pluginState.targets)\n    const editors = this.#getEditors(pluginState.targets)\n\n    let theme\n    if (this.opts.theme === 'auto') {\n      theme = capabilities.darkMode ? 'dark' : 'light'\n    } else {\n      theme = this.opts.theme\n    }\n\n    if (['files', 'folders', 'both'].indexOf(this.opts.fileManagerSelectionType) < 0) {\n      this.opts.fileManagerSelectionType = 'files'\n      // eslint-disable-next-line no-console\n      console.warn(`Unsupported option for \"fileManagerSelectionType\". Using default of \"${this.opts.fileManagerSelectionType}\".`)\n    }\n\n    return DashboardUI({\n      state,\n      isHidden: pluginState.isHidden,\n      files,\n      newFiles,\n      uploadStartedFiles,\n      completeFiles,\n      erroredFiles,\n      inProgressFiles,\n      inProgressNotPausedFiles,\n      processingFiles,\n      isUploadStarted,\n      isAllComplete,\n      isAllErrored,\n      isAllPaused,\n      totalFileCount: Object.keys(files).length,\n      totalProgress: state.totalProgress,\n      allowNewUpload,\n      acquirers,\n      theme,\n      disabled: this.opts.disabled,\n      disableLocalFiles: this.opts.disableLocalFiles,\n      direction: this.opts.direction,\n      activePickerPanel: pluginState.activePickerPanel,\n      showFileEditor: pluginState.showFileEditor,\n      saveFileEditor: this.saveFileEditor,\n      disableAllFocusableElements: this.disableAllFocusableElements,\n      animateOpenClose: this.opts.animateOpenClose,\n      isClosing: pluginState.isClosing,\n      progressindicators,\n      editors,\n      autoProceed: this.uppy.opts.autoProceed,\n      id: this.id,\n      closeModal: this.requestCloseModal,\n      handleClickOutside: this.handleClickOutside,\n      handleInputChange: this.handleInputChange,\n      handlePaste: this.handlePaste,\n      inline: this.opts.inline,\n      showPanel: this.showPanel,\n      hideAllPanels: this.hideAllPanels,\n      i18n: this.i18n,\n      i18nArray: this.i18nArray,\n      uppy: this.uppy,\n      note: this.opts.note,\n      recoveredState: state.recoveredState,\n      metaFields: pluginState.metaFields,\n      resumableUploads: capabilities.resumableUploads || false,\n      individualCancellation: capabilities.individualCancellation,\n      isMobileDevice: capabilities.isMobileDevice,\n      fileCardFor: pluginState.fileCardFor,\n      toggleFileCard: this.toggleFileCard,\n      toggleAddFilesPanel: this.toggleAddFilesPanel,\n      showAddFilesPanel: pluginState.showAddFilesPanel,\n      saveFileCard: this.saveFileCard,\n      openFileEditor: this.openFileEditor,\n      canEditFile: this.canEditFile,\n      width: this.opts.width,\n      height: this.opts.height,\n      showLinkToFileUploadResult: this.opts.showLinkToFileUploadResult,\n      fileManagerSelectionType: this.opts.fileManagerSelectionType,\n      proudlyDisplayPoweredByUppy: this.opts.proudlyDisplayPoweredByUppy,\n      hideCancelButton: this.opts.hideCancelButton,\n      hideRetryButton: this.opts.hideRetryButton,\n      hidePauseResumeButton: this.opts.hidePauseResumeButton,\n      showRemoveButtonAfterComplete: this.opts.showRemoveButtonAfterComplete,\n      containerWidth: pluginState.containerWidth,\n      containerHeight: pluginState.containerHeight,\n      areInsidesReadyToBeVisible: pluginState.areInsidesReadyToBeVisible,\n      isTargetDOMEl: this.isTargetDOMEl,\n      parentElement: this.el,\n      allowedFileTypes: this.uppy.opts.restrictions.allowedFileTypes,\n      maxNumberOfFiles: this.uppy.opts.restrictions.maxNumberOfFiles,\n      requiredMetaFields: this.uppy.opts.restrictions.requiredMetaFields,\n      showSelectedFiles: this.opts.showSelectedFiles,\n      handleCancelRestore: this.handleCancelRestore,\n      handleRequestThumbnail: this.handleRequestThumbnail,\n      handleCancelThumbnail: this.handleCancelThumbnail,\n      // drag props\n      isDraggingOver: pluginState.isDraggingOver,\n      handleDragOver: this.handleDragOver,\n      handleDragLeave: this.handleDragLeave,\n      handleDrop: this.handleDrop,\n    })\n  }\n\n  discoverProviderPlugins = () => {\n    this.uppy.iteratePlugins((plugin) => {\n      if (plugin && !plugin.target && plugin.opts && plugin.opts.target === this.constructor) {\n        this.addTarget(plugin)\n      }\n    })\n  }\n\n  onMount () {\n    // Set the text direction if the page has not defined one.\n    const element = this.el\n    const direction = getTextDirection(element)\n    if (!direction) {\n      element.dir = 'ltr'\n    }\n  }\n\n  install = () => {\n    // Set default state for Dashboard\n    this.setPluginState({\n      isHidden: true,\n      fileCardFor: null,\n      activeOverlayType: null,\n      showAddFilesPanel: false,\n      activePickerPanel: false,\n      showFileEditor: false,\n      metaFields: this.opts.metaFields,\n      targets: [],\n      // We'll make them visible once .containerWidth is determined\n      areInsidesReadyToBeVisible: false,\n      isDraggingOver: false,\n    })\n\n    const { inline, closeAfterFinish } = this.opts\n    if (inline && closeAfterFinish) {\n      throw new Error('[Dashboard] `closeAfterFinish: true` cannot be used on an inline Dashboard, because an inline Dashboard cannot be closed at all. Either set `inline: false`, or disable the `closeAfterFinish` option.')\n    }\n\n    const { allowMultipleUploads, allowMultipleUploadBatches } = this.uppy.opts\n    if ((allowMultipleUploads || allowMultipleUploadBatches) && closeAfterFinish) {\n      this.uppy.log('[Dashboard] When using `closeAfterFinish`, we recommended setting the `allowMultipleUploadBatches` option to `false` in the Uppy constructor. See https://uppy.io/docs/uppy/#allowMultipleUploads-true', 'warning')\n    }\n\n    const { target } = this.opts\n\n    if (target) {\n      this.mount(target, this)\n    }\n\n    const plugins = this.opts.plugins || []\n\n    plugins.forEach((pluginID) => {\n      const plugin = this.uppy.getPlugin(pluginID)\n      if (plugin) {\n        plugin.mount(this, plugin)\n      }\n    })\n\n    if (!this.opts.disableStatusBar) {\n      this.uppy.use(StatusBar, {\n        id: `${this.id}:StatusBar`,\n        target: this,\n        hideUploadButton: this.opts.hideUploadButton,\n        hideRetryButton: this.opts.hideRetryButton,\n        hidePauseResumeButton: this.opts.hidePauseResumeButton,\n        hideCancelButton: this.opts.hideCancelButton,\n        showProgressDetails: this.opts.showProgressDetails,\n        hideAfterFinish: this.opts.hideProgressAfterFinish,\n        locale: this.opts.locale,\n        doneButtonHandler: this.opts.doneButtonHandler,\n      })\n    }\n\n    if (!this.opts.disableInformer) {\n      this.uppy.use(Informer, {\n        id: `${this.id}:Informer`,\n        target: this,\n      })\n    }\n\n    if (!this.opts.disableThumbnailGenerator) {\n      this.uppy.use(ThumbnailGenerator, {\n        id: `${this.id}:ThumbnailGenerator`,\n        thumbnailWidth: this.opts.thumbnailWidth,\n        thumbnailType: this.opts.thumbnailType,\n        waitForThumbnailsBeforeUpload: this.opts.waitForThumbnailsBeforeUpload,\n        // If we don't block on thumbnails, we can lazily generate them\n        lazy: !this.opts.waitForThumbnailsBeforeUpload,\n      })\n    }\n\n    // Dark Mode / theme\n    this.darkModeMediaQuery = (typeof window !== 'undefined' && window.matchMedia)\n      ? window.matchMedia('(prefers-color-scheme: dark)')\n      : null\n\n    const isDarkModeOnFromTheStart = this.darkModeMediaQuery ? this.darkModeMediaQuery.matches : false\n    this.uppy.log(`[Dashboard] Dark mode is ${isDarkModeOnFromTheStart ? 'on' : 'off'}`)\n    this.setDarkModeCapability(isDarkModeOnFromTheStart)\n\n    if (this.opts.theme === 'auto') {\n      this.darkModeMediaQuery.addListener(this.handleSystemDarkModeChange)\n    }\n\n    this.discoverProviderPlugins()\n    this.initEvents()\n  }\n\n  uninstall = () => {\n    if (!this.opts.disableInformer) {\n      const informer = this.uppy.getPlugin(`${this.id}:Informer`)\n      // Checking if this plugin exists, in case it was removed by uppy-core\n      // before the Dashboard was.\n      if (informer) this.uppy.removePlugin(informer)\n    }\n\n    if (!this.opts.disableStatusBar) {\n      const statusBar = this.uppy.getPlugin(`${this.id}:StatusBar`)\n      if (statusBar) this.uppy.removePlugin(statusBar)\n    }\n\n    if (!this.opts.disableThumbnailGenerator) {\n      const thumbnail = this.uppy.getPlugin(`${this.id}:ThumbnailGenerator`)\n      if (thumbnail) this.uppy.removePlugin(thumbnail)\n    }\n\n    const plugins = this.opts.plugins || []\n    plugins.forEach((pluginID) => {\n      const plugin = this.uppy.getPlugin(pluginID)\n      if (plugin) plugin.unmount()\n    })\n\n    if (this.opts.theme === 'auto') {\n      this.darkModeMediaQuery.removeListener(this.handleSystemDarkModeChange)\n    }\n\n    this.unmount()\n    this.removeEvents()\n  }\n}\n"]}