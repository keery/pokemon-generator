{"version":3,"sources":["index.js"],"names":["h","require","UIPlugin","FadeIn","TransitionGroup","module","exports","Informer","constructor","uppy","opts","render","state","info","map","message","details","alert","type","id","title","defaultOptions","install","target","mount","VERSION"],"mappings":";;;;AAAA;;AACA;AACA,MAAM;AAAEA,EAAAA;AAAF,IAAQC,OAAO,CAAC,QAAD,CAArB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAeD,OAAO,CAAC,YAAD,CAA5B;;AACA,MAAME,MAAM,GAAGF,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMG,eAAe,GAAGH,OAAO,CAAC,mBAAD,CAA/B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAI,MAAM,CAACC,OAAP,qBAAiB,MAAMC,QAAN,SAAuBL,QAAvB,CAAgC;AAC/C;AAGAM,EAAAA,WAAW,CAAEC,IAAF,EAAQC,IAAR,EAAc;AACvB,UAAMD,IAAN,EAAYC,IAAZ;;AADuB,SAYzBC,MAZyB,GAYfC,KAAD,IAAW;AAClB,aACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,EAAC,eAAD,QACGA,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAgBD,IAAD,IACd,EAAC,MAAD;AAAQ,QAAA,GAAG,EAAEA,IAAI,CAACE;AAAlB,SACE;AAAG,QAAA,IAAI,EAAC;AAAR,SACGF,IAAI,CAACE,OADR,EAEG,GAFH,EAGGF,IAAI,CAACG,OAAL,IACC;AACE,sBAAYH,IAAI,CAACG,OADnB;AAEE,kCAAuB,UAFzB;AAGE,8BAAmB,QAHrB;AAIE,QAAA,IAAI,EAAC,SAJP,CAKE;AALF;AAME,QAAA,OAAO,EAAE,MAAMC,KAAK,CAAE,GAAEJ,IAAI,CAACE,OAAQ,SAAQF,IAAI,CAACG,OAAQ,EAAtC;AANtB,aAJJ,CADF,CADD,CADH,CADF,CADF;AA0BD,KAvCwB;;AAEvB,SAAKE,IAAL,GAAY,mBAAZ;AACA,SAAKC,EAAL,GAAU,KAAKT,IAAL,CAAUS,EAAV,IAAgB,UAA1B;AACA,SAAKC,KAAL,GAAa,UAAb,CAJuB,CAMvB;;AACA,UAAMC,cAAc,GAAG,EAAvB,CAPuB,CAQvB;;AACA,SAAKX,IAAL,GAAY,EAAE,GAAGW,cAAL;AAAqB,SAAGX;AAAxB,KAAZ;AACD;;AA+BDY,EAAAA,OAAO,GAAI;AACT,UAAM;AAAEC,MAAAA;AAAF,QAAa,KAAKb,IAAxB;;AACA,QAAIa,MAAJ,EAAY;AACV,WAAKC,KAAL,CAAWD,MAAX,EAAmB,IAAnB;AACD;AACF;;AAlD8C,CAAjD,SAESE,OAFT","sourcesContent":["/* eslint-disable jsx-a11y/no-noninteractive-element-interactions  */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nconst { h } = require('preact')\nconst { UIPlugin } = require('@uppy/core')\nconst FadeIn = require('./FadeIn')\nconst TransitionGroup = require('./TransitionGroup')\n\n/**\n * Informer\n * Shows rad message bubbles\n * used like this: `uppy.info('hello world', 'info', 5000)`\n * or for errors: `uppy.info('Error uploading img.jpg', 'error', 5000)`\n *\n */\nmodule.exports = class Informer extends UIPlugin {\n  // eslint-disable-next-line global-require\n  static VERSION = require('../package.json').version\n\n  constructor (uppy, opts) {\n    super(uppy, opts)\n    this.type = 'progressindicator'\n    this.id = this.opts.id || 'Informer'\n    this.title = 'Informer'\n\n    // set default options\n    const defaultOptions = {}\n    // merge default options with the ones set by user\n    this.opts = { ...defaultOptions, ...opts }\n  }\n\n  render = (state) => {\n    return (\n      <div className=\"uppy uppy-Informer\">\n        <TransitionGroup>\n          {state.info.map((info) => (\n            <FadeIn key={info.message}>\n              <p role=\"alert\">\n                {info.message}\n                {' '}\n                {info.details && (\n                  <span\n                    aria-label={info.details}\n                    data-microtip-position=\"top-left\"\n                    data-microtip-size=\"medium\"\n                    role=\"tooltip\"\n                    // eslint-disable-next-line no-alert\n                    onClick={() => alert(`${info.message} \\n\\n ${info.details}`)}\n                  >\n                    ?\n                  </span>\n                )}\n              </p>\n            </FadeIn>\n          ))}\n        </TransitionGroup>\n      </div>\n    )\n  }\n\n  install () {\n    const { target } = this.opts\n    if (target) {\n      this.mount(target, this)\n    }\n  }\n}\n"]}