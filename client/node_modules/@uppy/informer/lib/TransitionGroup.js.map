{"version":3,"sources":["TransitionGroup.js"],"names":["Component","cloneElement","h","toChildArray","require","assign","obj","props","Object","getKey","vnode","fallback","key","linkRef","component","name","cache","_ptgLinkedRefs","c","refs","getChildMapping","children","out","i","length","toString","mergeChildMappings","prev","next","getValueForKey","hasOwnProperty","nextKeysPending","pendingKeys","prevKey","push","childMapping","nextKey","pendingNextKey","identity","TransitionGroup","constructor","context","state","performAppear","bind","performEnter","performLeave","componentWillMount","currentlyTransitioningKeys","keysToAbortLeave","keysToEnter","keysToLeave","componentDidMount","initialChildMapping","componentWillReceiveProps","nextProps","nextChildMapping","prevChildMapping","setState","prevState","hasPrev","hasNext","componentDidUpdate","forEach","_finishAbort","idx","indexOf","splice","componentWillAppear","_handleDoneAppearing","componentDidAppear","currentChildMapping","componentWillEnter","_handleDoneEntering","componentDidEnter","componentWillLeave","_handleDoneLeaving","componentDidLeave","render","childFactory","transitionLeave","transitionName","transitionAppear","transitionEnter","transitionLeaveTimeout","transitionEnterTimeout","transitionAppearTimeout","childrenToRender","child","ref","el","defaultProps","module","exports"],"mappings":"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","sourcesContent":["/* eslint-disable */\n/**\n * @source https://github.com/developit/preact-transition-group\n */\n'use strict'\n\nconst { Component, cloneElement, h, toChildArray } = require('preact')\n\nfunction assign (obj, props) {\n  return Object.assign(obj, props)\n}\nfunction getKey (vnode, fallback) {\n  return vnode?.key ?? fallback\n}\nfunction linkRef (component, name) {\n  const cache = component._ptgLinkedRefs || (component._ptgLinkedRefs = {})\n  return cache[name] || (cache[name] = c => {\n    component.refs[name] = c\n  })\n}\n\nfunction getChildMapping (children) {\n  const out = {}\n  for (let i = 0; i < children.length; i++) {\n    if (children[i] != null) {\n      const key = getKey(children[i], i.toString(36))\n      out[key] = children[i]\n    }\n  }\n  return out\n}\n\nfunction mergeChildMappings (prev, next) {\n  prev = prev || {}\n  next = next || {}\n\n  const getValueForKey = key => (next.hasOwnProperty(key) ? next[key] : prev[key])\n\n  // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n  const nextKeysPending = {}\n\n  let pendingKeys = []\n  for (const prevKey in prev) {\n    if (next.hasOwnProperty(prevKey)) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys\n        pendingKeys = []\n      }\n    } else {\n      pendingKeys.push(prevKey)\n    }\n  }\n\n  const childMapping = {}\n  for (const nextKey in next) {\n    if (nextKeysPending.hasOwnProperty(nextKey)) {\n      for (let i = 0; i < nextKeysPending[nextKey].length; i++) {\n        const pendingNextKey = nextKeysPending[nextKey][i]\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey)\n      }\n    }\n    childMapping[nextKey] = getValueForKey(nextKey)\n  }\n\n  // Finally, add the keys which didn't appear before any key in `next`\n  for (let i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i])\n  }\n\n  return childMapping\n}\n\nconst identity = i => i\n\nclass TransitionGroup extends Component {\n  constructor (props, context) {\n    super(props, context)\n\n    this.refs = {}\n\n    this.state = {\n      children: getChildMapping(toChildArray(toChildArray(this.props.children)) || []),\n    }\n\n    this.performAppear = this.performAppear.bind(this)\n    this.performEnter = this.performEnter.bind(this)\n    this.performLeave = this.performLeave.bind(this)\n  }\n\n  componentWillMount () {\n    this.currentlyTransitioningKeys = {}\n    this.keysToAbortLeave = []\n    this.keysToEnter = []\n    this.keysToLeave = []\n  }\n\n  componentDidMount () {\n    const initialChildMapping = this.state.children\n    for (const key in initialChildMapping) {\n      if (initialChildMapping[key]) {\n        // this.performAppear(getKey(initialChildMapping[key], key));\n        this.performAppear(key)\n      }\n    }\n  }\n\n  componentWillReceiveProps (nextProps) {\n    const nextChildMapping = getChildMapping(toChildArray(nextProps.children) || [])\n    const prevChildMapping = this.state.children\n\n    this.setState(prevState => ({\n      children: mergeChildMappings(prevState.children, nextChildMapping),\n    }))\n\n    let key\n\n    for (key in nextChildMapping) {\n      if (nextChildMapping.hasOwnProperty(key)) {\n        const hasPrev = prevChildMapping && prevChildMapping.hasOwnProperty(key)\n        // We should re-enter the component and abort its leave function\n        if (nextChildMapping[key] && hasPrev && this.currentlyTransitioningKeys[key]) {\n          this.keysToEnter.push(key)\n          this.keysToAbortLeave.push(key)\n        } else if (nextChildMapping[key] && !hasPrev && !this.currentlyTransitioningKeys[key]) {\n          this.keysToEnter.push(key)\n        }\n      }\n    }\n\n    for (key in prevChildMapping) {\n      if (prevChildMapping.hasOwnProperty(key)) {\n        const hasNext = nextChildMapping && nextChildMapping.hasOwnProperty(key)\n        if (prevChildMapping[key] && !hasNext && !this.currentlyTransitioningKeys[key]) {\n          this.keysToLeave.push(key)\n        }\n      }\n    }\n  }\n\n  componentDidUpdate () {\n    const { keysToEnter } = this\n    this.keysToEnter = []\n    keysToEnter.forEach(this.performEnter)\n\n    const { keysToLeave } = this\n    this.keysToLeave = []\n    keysToLeave.forEach(this.performLeave)\n  }\n\n  _finishAbort (key) {\n    const idx = this.keysToAbortLeave.indexOf(key)\n    if (idx !== -1) {\n      this.keysToAbortLeave.splice(idx, 1)\n    }\n  }\n\n  performAppear (key) {\n    this.currentlyTransitioningKeys[key] = true\n\n    const component = this.refs[key]\n\n    if (component.componentWillAppear) {\n      component.componentWillAppear(this._handleDoneAppearing.bind(this, key))\n    } else {\n      this._handleDoneAppearing(key)\n    }\n  }\n\n  _handleDoneAppearing (key) {\n    const component = this.refs[key]\n    if (component.componentDidAppear) {\n      component.componentDidAppear()\n    }\n\n    delete this.currentlyTransitioningKeys[key]\n    this._finishAbort(key)\n\n    const currentChildMapping = getChildMapping(toChildArray(this.props.children) || [])\n\n    if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {\n      // This was removed before it had fully appeared. Remove it.\n      this.performLeave(key)\n    }\n  }\n\n  performEnter (key) {\n    this.currentlyTransitioningKeys[key] = true\n\n    const component = this.refs[key]\n\n    if (component.componentWillEnter) {\n      component.componentWillEnter(this._handleDoneEntering.bind(this, key))\n    } else {\n      this._handleDoneEntering(key)\n    }\n  }\n\n  _handleDoneEntering (key) {\n    const component = this.refs[key]\n    if (component.componentDidEnter) {\n      component.componentDidEnter()\n    }\n\n    delete this.currentlyTransitioningKeys[key]\n    this._finishAbort(key)\n\n    const currentChildMapping = getChildMapping(toChildArray(this.props.children) || [])\n\n    if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {\n      // This was removed before it had fully entered. Remove it.\n      this.performLeave(key)\n    }\n  }\n\n  performLeave (key) {\n    // If we should immediately abort this leave function,\n    // don't run the leave transition at all.\n    const idx = this.keysToAbortLeave.indexOf(key)\n    if (idx !== -1) {\n      return\n    }\n\n    this.currentlyTransitioningKeys[key] = true\n\n    const component = this.refs[key]\n    if (component.componentWillLeave) {\n      component.componentWillLeave(this._handleDoneLeaving.bind(this, key))\n    } else {\n      // Note that this is somewhat dangerous b/c it calls setState()\n      // again, effectively mutating the component before all the work\n      // is done.\n      this._handleDoneLeaving(key)\n    }\n  }\n\n  _handleDoneLeaving (key) {\n    // If we should immediately abort the leave,\n    // then skip this altogether\n    const idx = this.keysToAbortLeave.indexOf(key)\n    if (idx !== -1) {\n      return\n    }\n\n    const component = this.refs[key]\n\n    if (component.componentDidLeave) {\n      component.componentDidLeave()\n    }\n\n    delete this.currentlyTransitioningKeys[key]\n\n    const currentChildMapping = getChildMapping(toChildArray(this.props.children) || [])\n\n    if (currentChildMapping && currentChildMapping.hasOwnProperty(key)) {\n      // This entered again before it fully left. Add it again.\n      this.performEnter(key)\n    } else {\n      const children = assign({}, this.state.children)\n      delete children[key]\n      this.setState({ children })\n    }\n  }\n\n  render ({ childFactory, transitionLeave, transitionName, transitionAppear, transitionEnter, transitionLeaveTimeout, transitionEnterTimeout, transitionAppearTimeout, component, ...props }, { children }) {\n    // TODO: we could get rid of the need for the wrapper node\n    // by cloning a single child\n    const childrenToRender = []\n    for (const key in children) {\n      if (children.hasOwnProperty(key)) {\n        const child = children[key]\n        if (child) {\n          const ref = linkRef(this, key),\n            el = cloneElement(childFactory(child), { ref, key })\n          childrenToRender.push(el)\n        }\n      }\n    }\n\n    return h(component, props, childrenToRender)\n  }\n}\n\nTransitionGroup.defaultProps = {\n  component: 'span',\n  childFactory: identity,\n}\n\nmodule.exports = TransitionGroup\n"]}