{"version":3,"file":"vest.js","sources":["../../src/vest.ts"],"sourcesContent":["import { FieldValues, Resolver, transformToNestObject } from 'react-hook-form';\nimport * as Vest from 'vest';\n\ntype VestErrors = Record<string, string[]>;\n\ntype ICreateResult = ReturnType<typeof Vest.create>;\n\ntype Promisify = <T extends ICreateResult, K>(\n  fn: T,\n) => (args: K) => Promise<Vest.IVestResult>;\n\nconst promisify: Promisify = (validatorFn) => (...args) =>\n  new Promise((resolve) => validatorFn(...args).done(resolve as Vest.DoneCB));\n\nconst parseErrorSchema = (\n  vestError: VestErrors,\n  validateAllFieldCriteria: boolean,\n) => {\n  return Object.entries(vestError).reduce((prev, [key, value]) => {\n    return {\n      ...prev,\n      [key]: {\n        type: '',\n        message: value[0],\n        ...(validateAllFieldCriteria\n          ? {\n              types: value.reduce((prev, message, index) => {\n                return {\n                  ...prev,\n                  [index]: message,\n                };\n              }, {}),\n            }\n          : {}),\n      },\n    };\n  }, {});\n};\n\nexport const vestResolver = <TFieldValues extends FieldValues>(\n  schema: ICreateResult,\n  _: any = {},\n  validateAllFieldCriteria = false,\n): Resolver<TFieldValues> => async (values) => {\n  const validateSchema = promisify(schema);\n  const result = await validateSchema(values);\n  const errors = result.getErrors();\n\n  if (!result.hasErrors()) {\n    return { values: values as any, errors: {} };\n  }\n\n  return {\n    values: {},\n    errors: transformToNestObject(\n      parseErrorSchema(errors, validateAllFieldCriteria),\n    ),\n  };\n};\n"],"names":["parseErrorSchema","vestError","validateAllFieldCriteria","Object","entries","reduce","prev","_a","_c","__read","key","value","type","message","types","index","schema","_","values","validatorFn","_i","args","Promise","resolve","done","validateSchema","result","errors","getErrors","hasErrors","transformToNestObject"],"mappings":"uJAcMA,EAAmB,SACvBC,EACAC,GAEA,OAAOC,OAAOC,QAAQH,GAAWI,QAAO,SAACC,EAAMC,SAAAC,EAAAC,cAACC,OAAKC,OACnD,gCACKL,WACFI,eACCE,KAAM,GACNC,QAASF,EAAM,IACXT,EACA,CACEY,MAAOH,EAAMN,QAAO,SAACC,EAAMO,EAASE,SAClC,gCACKT,WACFS,GAAQF,QAEV,KAEL,UAGP,0BAGuB,SAC1BG,EACAC,EACAf,GAC2B,oBAD3BA,MAC2B,SAAOgB,6HAEnB,OAlCaC,EAiCKH,KAjCW,eAAC,aAAAI,mBAAAA,IAAAC,kBAC7C,OAAA,IAAIC,SAAQ,SAACC,GAAY,OAAAJ,0BAAeE,IAAMG,KAAKD,MAiC9BE,CAAeP,WAGpC,OAHMQ,EAASnB,SACToB,EAASD,EAAOE,YAEjBF,EAAOG,eAIL,CACLX,OAAQ,GACRS,OAAQG,wBACN9B,EAAiB2B,EAAQzB,SANpB,CAAEgB,OAAQA,EAAeS,OAAQ,KAtCf,IAACR"}