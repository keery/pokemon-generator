{"version":3,"file":"joi.js","sources":["../../src/joi.ts"],"sourcesContent":["import {\n  appendErrors,\n  transformToNestObject,\n  Resolver,\n  FieldValues,\n} from 'react-hook-form';\nimport * as Joi from 'joi';\nimport convertArrayToPathName from './utils/convertArrayToPathName';\n\nconst parseErrorSchema = (\n  error: Joi.ValidationError,\n  validateAllFieldCriteria: boolean,\n) =>\n  Array.isArray(error.details)\n    ? error.details.reduce(\n        (previous: Record<string, any>, { path, message = '', type }) => {\n          const currentPath = convertArrayToPathName(path);\n\n          return {\n            ...previous,\n            ...(path\n              ? previous[currentPath] && validateAllFieldCriteria\n                ? {\n                    [currentPath]: appendErrors(\n                      currentPath,\n                      validateAllFieldCriteria,\n                      previous,\n                      type,\n                      message,\n                    ),\n                  }\n                : {\n                    [currentPath]: previous[currentPath] || {\n                      message,\n                      type,\n                      ...(validateAllFieldCriteria\n                        ? {\n                            types: { [type]: message || true },\n                          }\n                        : {}),\n                    },\n                  }\n              : {}),\n          };\n        },\n        {},\n      )\n    : [];\n\nexport const joiResolver = <TFieldValues extends FieldValues>(\n  schema: Joi.Schema,\n  options: Joi.AsyncValidationOptions = {\n    abortEarly: false,\n  },\n): Resolver<TFieldValues> => async (\n  values,\n  _,\n  validateAllFieldCriteria = false,\n) => {\n  try {\n    return {\n      values: await schema.validateAsync(values, {\n        ...options,\n      }),\n      errors: {},\n    };\n  } catch (e) {\n    return {\n      values: {},\n      errors: transformToNestObject(\n        parseErrorSchema(e, validateAllFieldCriteria),\n      ),\n    };\n  }\n};\n"],"names":["parseErrorSchema","error","validateAllFieldCriteria","Array","isArray","details","reduce","previous","_a","path","_e","message","type","currentPath","convertArrayToPathName","appendErrors","types","_d","schema","options","abortEarly","values","_","validateAsync","_b","errors","transformToNestObject","e_1"],"mappings":"sMASMA,EAAmB,SACvBC,EACAC,GAEA,OAAAC,MAAMC,QAAQH,EAAMI,SAChBJ,EAAMI,QAAQC,QACZ,SAACC,EAA+BC,aAAEC,SAAMC,YAAAC,aAAU,KAAIC,SAC9CC,EAAcC,UAAuBL,GAE3C,gCACKF,GACCE,EACAF,EAASM,IAAgBX,UAEpBW,GAAcE,eACbF,EACAX,EACAK,EACAK,EACAD,cAIDE,GAAcN,EAASM,gBACtBF,UACAC,QACIV,EACA,CACEc,YAASC,EAACL,GAAOD,IAAW,MAE9B,OAGV,MAGR,IAEF,wBAEqB,SACzBO,EACAC,GAG2B,oBAH3BA,GACEC,YAAY,IAEa,SAC3BC,EACAC,EACApB,uBAAAA,yHAIY,qCAAMgB,EAAOK,cAAcF,gBAC9BF,YAFP,UACEX,SAAQgB,SAGRhB,SAAQ,cAGV,qBAAO,CACLa,OAAQ,GACRI,OAAQC,wBACN1B,EAAiB2B,EAAGzB"}